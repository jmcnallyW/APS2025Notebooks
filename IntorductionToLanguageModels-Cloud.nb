(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[   3113557,      57494]
NotebookOptionsPosition[   3094290,      57193]
NotebookOutlinePosition[   3094693,      57209]
CellTagsIndexPosition[   3094650,      57206]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Introduction to Large Language Models
and Retrieval Augmented Generation\
\>", "Title",
 CellChangeTimes->{{3.950911118369362*^9, 3.9509111245027924`*^9}, {
  3.9509120334697*^9, 
  3.9509120416228046`*^9}},ExpressionUUID->"2edeb314-d5cf-594e-9261-\
9261ae4495b3"],

Cell["GDS Short Course - Day 2", "Subtitle",
 CellChangeTimes->{{3.950911180663172*^9, 3.950911187582382*^9}, {
  3.950911362142233*^9, 
  3.950911366279188*^9}},ExpressionUUID->"c126a7f4-456f-884f-9b3a-\
791d2b2857c9"],

Cell["March, 16, 2025", "Text",
 CellChangeTimes->{{3.950187402913986*^9, 3.950187410450924*^9}, 
   3.950911206798128*^9},ExpressionUUID->"bd143436-d424-2140-bca6-\
45ce552b5124"],

Cell["John McNally", "Author",
 CellChangeTimes->{{3.950187179930134*^9, 3.950187183154804*^9}, {
  3.950187340046303*^9, 
  3.9501873776275063`*^9}},ExpressionUUID->"f5f7dbab-44fe-194e-9859-\
a4ceac7562ec"],

Cell["Principal Academic Solutions Developer\[LineSeparator]Wolfram \
Research", "Affiliation",
 CellChangeTimes->{
  3.950187373890358*^9},ExpressionUUID->"0d1e37e5-cee5-2541-b7cc-\
118e77a9aff8"],

Cell[CellGroupData[{

Cell["Syllabus", "Section",
 CellChangeTimes->{{3.9509113780622425`*^9, 
  3.9509113801337795`*^9}},ExpressionUUID->"ad6eb938-5c68-d645-a8bc-\
21910270c843"],

Cell[CellGroupData[{

Cell["Key questions", "Subsection",
 CellChangeTimes->{{3.9509121018238544`*^9, 
  3.9509121045027885`*^9}},ExpressionUUID->"8481a446-cdfe-aa4b-9f5b-\
8d6be8ed268a"],

Cell["What is...", "Text",
 CellChangeTimes->{{3.9509122540719414`*^9, 
  3.950912255302967*^9}},ExpressionUUID->"9d1b9ff0-63d4-7546-aae7-\
4ccea6608fc0"],

Cell["a large language model?", "Item",
 CellChangeTimes->{{3.9509120456067715`*^9, 3.950912054833788*^9}, {
  3.9509121387509117`*^9, 3.950912142726612*^9}, {3.9509122367669716`*^9, 
  3.95091225121418*^9}},ExpressionUUID->"43c001f0-ed6d-774c-8afb-\
2269791f836f"],

Cell["an embedding vector in latent space?", "Item",
 CellChangeTimes->{{3.9509120456067715`*^9, 3.950912054375475*^9}, {
   3.9509120912708855`*^9, 3.950912125872902*^9}, 
   3.9509122498979015`*^9},ExpressionUUID->"7f8d9bd6-44c8-c847-abe2-\
d0042fe32662"],

Cell["retrieval augmented generation?", "Item",
 CellChangeTimes->{{3.9509120456067715`*^9, 3.950912054375475*^9}, {
   3.9509120912708855`*^9, 3.950912136048176*^9}, 
   3.9509122459677315`*^9},ExpressionUUID->"25cbb4ad-c25e-ab4a-83e7-\
aaf66ad7b294"],

Cell["a vector database?", "Item",
 CellChangeTimes->{{3.9509120456067715`*^9, 3.950912054375475*^9}, {
   3.9509120912708855`*^9, 3.9509121239285336`*^9}, 
   3.9509122441029434`*^9},ExpressionUUID->"cea19c34-c6a9-4b46-aa35-\
34ddbc5b601d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Key skills", "Subsection",
 CellChangeTimes->{{3.9509121570469*^9, 
  3.9509121634465466`*^9}},ExpressionUUID->"7548acc7-77cd-da4a-9c7f-\
b40f7d18f5c2"],

Cell["In this segment, you will see how you can...", "Text",
 CellChangeTimes->{{3.950912174328438*^9, 
  3.95091218707226*^9}},ExpressionUUID->"1b7efcbe-1334-9547-9481-\
979ca5f8b199"],

Cell["prompt large language models", "Item",
 CellChangeTimes->{{3.9509121900148315`*^9, 
  3.9509122151749973`*^9}},ExpressionUUID->"ef6e4226-cbd6-8749-9052-\
88e506437a6c"],

Cell["create a semantic search index", "Item",
 CellChangeTimes->{{3.9509121900148315`*^9, 
  3.950912201969887*^9}},ExpressionUUID->"27985890-4f0a-fe4a-9fce-\
6c37d386a6f5"],

Cell["create a simple AI agent", "Item",
 CellChangeTimes->{{3.9509121900148315`*^9, 3.9509122015668736`*^9}, {
  3.950912301679001*^9, 3.9509123054790497`*^9}, {3.950912365047661*^9, 
  3.9509123650487423`*^9}},ExpressionUUID->"d43c11de-79ac-0f4d-a1c2-\
f951546f725f"],

Cell["work with neural nets in Wolfram Language and Mathematica", "Item",
 CellChangeTimes->{{3.9509121900148315`*^9, 3.9509122015668736`*^9}, {
  3.950912301679001*^9, 3.9509123054790497`*^9}, {3.950912373401514*^9, 
  3.9509123876469097`*^9}},ExpressionUUID->"d8a6b572-3f8b-e64f-8a9e-\
e10b81999316"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Language Models", "Section",
 CellChangeTimes->{{3.9509125460961704`*^9, 
  3.9509125475992126`*^9}},ExpressionUUID->"b3516792-dc4e-b149-80e7-\
fc2b2917afa8"],

Cell[TextData[{
 "A ",
 StyleBox["language model",
  FontWeight->"Bold"],
 " is simply a specific kind of artificial neural network. The most \
successful language models are currently based on a ",
 StyleBox["transformer architecture",
  FontWeight->"Bold"],
 ". It should be noted that transformers are not the only possible \
architecture and ",
 ButtonBox["Mamba models",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://arxiv.org/pdf/2312.00752"], None},
  ButtonNote->"https://arxiv.org/pdf/2312.00752"],
 " for sequence learning are another notable option."
}], "Text",
 CellChangeTimes->{{3.9509125721121063`*^9, 3.9509125882872963`*^9}, {
  3.950912654167265*^9, 3.9509127196792793`*^9}, {3.9509129197379494`*^9, 
  3.9509129482643566`*^9}, {3.9509131526561127`*^9, 
  3.950913167439766*^9}},ExpressionUUID->"6c5da334-831b-a040-be2a-\
889b15119948"],

Cell[CellGroupData[{

Cell["Working with Neural Nets", "Subsection",
 CellChangeTimes->{{3.950913058623598*^9, 
  3.9509130635116825`*^9}},ExpressionUUID->"4c11bac2-4c74-2940-8f6c-\
5d9fd99ba971"],

Cell["\<\
OpenAI is releasing previews of GPT-4.5 these days, and you will see how to \
connect to this service later.\
\>", "Text",
 CellChangeTimes->{{3.9509136798085938`*^9, 
  3.95091369928808*^9}},ExpressionUUID->"9c55f7d0-c5d2-d348-ab33-\
292742ec23b7"],

Cell[TextData[{
 "First, let\[CloseCurlyQuote]s first retrieve the open-source GPT-2 language \
model from the ",
 ButtonBox["Wolfram Neural Net Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/NeuralNetRepository/"], None},
  ButtonNote->"https://resources.wolframcloud.com/NeuralNetRepository/"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9509135601445312`*^9, 3.950913566704777*^9}, {
  3.9509137025853863`*^9, 
  3.9509137482247753`*^9}},ExpressionUUID->"08d55acf-7320-0d40-90b2-\
7600fec2c048"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"languagemodel", "=", 
  RowBox[{"NetModel", "[", 
   RowBox[{"\"\<GPT2 Transformer Trained on WebText Data\>\"", ",", 
    RowBox[{"\"\<Task\>\"", "->", "\"\<LanguageModeling\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[216]:=",ExpressionUUID->"cd474531-2306-c847-a879-bd5bd7299650"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"string\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"class\"", "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "Weights"|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    "decoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "last" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "classifier" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50257}, "$OutputSize" -> 50257, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>|>, 
                    "probabilities" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Type" -> 
                    "Function", "Function" -> Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[75402943]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> False, "$Version" -> 
                    "14.1.2", 
                    "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\" t\"", "\" a\"", 
                    Skeleton[50254], "\"\""}, "InputDepth" -> 1, "Dimensions" -> 
                    50257, "$Rank" -> 0, "$Version" -> "14.1.2", "Multilabel" -> 
                    False|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"decoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "13", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"last\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classifier\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"probabilities\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 503309424, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 503309424, 
            6843615156671593097256010839510399070530645906625314208912, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<5>]"& )],
  False,
  BoxID -> 6843615156671593097256010839510399070530645906625314208912,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9509132014427986`*^9, 3.950925210794636*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"1db301ca-a2dd-ab4a-bae4-fc8269a80cb1"]
}, Open  ]],

Cell["What does this neural net output?", "Text",
 CellChangeTimes->{{3.9509141081845665`*^9, 
  3.9509141455545406`*^9}},ExpressionUUID->"1e8a8dfd-9d37-8540-a2b3-\
baba7c894d6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"languagemodel", "[", "\"\<hello world\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9509142444368744`*^9, 3.95091426400156*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"65965fad-aaa2-0549-ba27-355a0bf43cfa"],

Cell[BoxData["\<\".\"\>"], "Output",
 CellChangeTimes->{{3.950914254815153*^9, 3.9509142649880676`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"69100073-9030-d743-970b-f158d6b62c0d"]
}, Open  ]],

Cell[TextData[{
 "Given some text, often called a ",
 StyleBox["prompt",
  FontWeight->"Bold"],
 ", the language model predicts the next bit of text."
}], "Text",
 CellChangeTimes->{{3.950914277777111*^9, 
  3.9509143483048744`*^9}},ExpressionUUID->"765437d9-3805-6f45-bbd0-\
c0232987569b"],

Cell[TextData[{
 "Each bit of text in the vocabulary is called a ",
 StyleBox["token",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.9509143863286743`*^9, 3.9509144118575993`*^9}, {
  3.9509144742727165`*^9, 
  3.9509145218807144`*^9}},ExpressionUUID->"9ca2ef69-1afa-864c-a5cc-\
8ac2a9925dc7"],

Cell["\<\
It turns out that the inability of early language models to do mathematics \
had a lot to do with suboptimal choices for how to tokenize text. This part \
of the course won\[CloseCurlyQuote]t go into details, but know that this step \
is actually non-trivial and has also come a long way since GPT-2:\
\>", "Text",
 CellChangeTimes->{{3.950914524800747*^9, 3.950914561715122*^9}, {
  3.9509146255776215`*^9, 
  3.9509146416968403`*^9}},ExpressionUUID->"ab143d2a-abc2-2741-87ee-\
39685c95b787"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"languagemodel", "[", "\"\<2 + 2 =\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9509144153632393`*^9, 3.9509144344114437`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"b94763b6-7b59-224f-aadb-2f12f3a04abf"],

Cell[BoxData["\<\" 3\"\>"], "Output",
 CellChangeTimes->{{3.9509144323804455`*^9, 3.950914434900732*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"341ce459-6a08-5447-90ac-28313af20636"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s look at the probability for multiple \
continuations:", "Text",
 CellChangeTimes->{{3.950915011201153*^9, 3.9509150387743893`*^9}, {
  3.9509151895772686`*^9, 
  3.9509152662200375`*^9}},ExpressionUUID->"cf67b6b9-4435-0e42-bd2b-\
b8e5c47e272f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"prompt", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prompt", "=", "\"\<2 + 2 =\>\""}], ";", 
    RowBox[{"data", "=", 
     RowBox[{"ReverseSort", "@", 
      RowBox[{"Association", "@", 
       RowBox[{"languagemodel", "[", 
        RowBox[{"prompt", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<TopProbabilities\>\"", ",", "20"}], "}"}]}], 
        "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"BarChart", "[", 
     RowBox[{"data", ",", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rotate", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2.5"}]}], "]"}], "&"}], ",", 
         RowBox[{"Keys", "@", "data"}]}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Framed", "@", 
        RowBox[{"Style", "[", 
         RowBox[{"prompt", ",", "Bold"}], "]"}]}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Next Token\>\"", ",", "\"\<GPT-2 Probability\>\""}], 
        "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.950914453893364*^9, {3.950914577773178*^9, 3.950914578946642*^9}, {
   3.9509147346848927`*^9, 3.9509147513158894`*^9}, {3.950915174157263*^9, 
   3.9509151810983925`*^9}, {3.9509195112617283`*^9, 3.9509195130385036`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"df90f1e0-5c96-9446-a253-5e33a1b83cf7"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.18637659600842926`, 0.}, {20.416945580761126`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.5599999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0.5830544192388744, 0.}, {1.4169455807611255, 0.10194318741559982},
          RoundingRadius->0],
         StatusArea[#, 0.10194318741559982`]& ,
         TagBoxNote->"0.10194318741559982"],
        StyleBox["0.10194318741559982`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.10194318741559982`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{1.5830544192388745, 0.}, {2.4169455807611255, 0.0916437953710556},
          RoundingRadius->0],
         StatusArea[#, 0.0916437953710556]& ,
         TagBoxNote->"0.0916437953710556"],
        StyleBox["0.0916437953710556`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0916437953710556, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{2.5830544192388745, 0.}, {3.4169455807611255, 0.08415226638317108},
          RoundingRadius->0],
         StatusArea[#, 0.08415226638317108]& ,
         TagBoxNote->"0.08415226638317108"],
        StyleBox["0.08415226638317108`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.08415226638317108, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{3.5830544192388745, 0.}, {4.4169455807611255, 0.07524393498897552},
          RoundingRadius->0],
         StatusArea[#, 0.07524393498897552]& ,
         TagBoxNote->"0.07524393498897552"],
        StyleBox["0.07524393498897552`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.07524393498897552, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{4.5830544192388745, 0.}, {5.4169455807611255, 0.054985832422971725},
          RoundingRadius->0],
         StatusArea[#, 0.054985832422971725`]& ,
         TagBoxNote->"0.054985832422971725"],
        StyleBox["0.054985832422971725`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.054985832422971725`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{5.5830544192388745, 0.}, {6.4169455807611255, 0.03234498202800751},
          RoundingRadius->0],
         StatusArea[#, 0.03234498202800751]& ,
         TagBoxNote->"0.03234498202800751"],
        StyleBox["0.03234498202800751`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.03234498202800751, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{6.5830544192388745, 0.}, {7.4169455807611255, 0.02997315302491188},
          RoundingRadius->0],
         StatusArea[#, 0.02997315302491188]& ,
         TagBoxNote->"0.02997315302491188"],
        StyleBox["0.02997315302491188`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.02997315302491188, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{7.5830544192388745, 0.}, {8.416945580761126, 0.020524457097053528},
          RoundingRadius->0],
         StatusArea[#, 0.020524457097053528`]& ,
         TagBoxNote->"0.020524457097053528"],
        StyleBox["0.020524457097053528`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.020524457097053528`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{8.583054419238875, 0.}, {9.416945580761126, 0.018329355865716934},
          RoundingRadius->0],
         StatusArea[#, 0.018329355865716934`]& ,
         TagBoxNote->"0.018329355865716934"],
        StyleBox["0.018329355865716934`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.018329355865716934`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{9.583054419238875, 0.}, {10.416945580761126, 0.015520593151450157},
          RoundingRadius->0],
         StatusArea[#, 0.015520593151450157`]& ,
         TagBoxNote->"0.015520593151450157"],
        StyleBox["0.015520593151450157`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.015520593151450157`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{10.583054419238875, 0.}, {11.416945580761126, 0.01487451046705246},
          RoundingRadius->0],
         StatusArea[#, 0.01487451046705246]& ,
         TagBoxNote->"0.01487451046705246"],
        StyleBox["0.01487451046705246`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.01487451046705246, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{11.583054419238875, 0.}, {12.416945580761126, 0.01441896054893732},
          RoundingRadius->0],
         StatusArea[#, 0.01441896054893732]& ,
         TagBoxNote->"0.01441896054893732"],
        StyleBox["0.01441896054893732`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.01441896054893732, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{12.583054419238875, 0.}, {13.416945580761126, 0.011876469478011131},
          RoundingRadius->0],
         StatusArea[#, 0.011876469478011131`]& ,
         TagBoxNote->"0.011876469478011131"],
        StyleBox["0.011876469478011131`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.011876469478011131`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{13.583054419238875, 0.}, {14.416945580761126, 0.010786950588226318},
          RoundingRadius->0],
         StatusArea[#, 0.010786950588226318`]& ,
         TagBoxNote->"0.010786950588226318"],
        StyleBox["0.010786950588226318`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.010786950588226318`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{14.583054419238875, 0.}, {15.416945580761126, 0.009215875528752804},
          RoundingRadius->0],
         StatusArea[#, 0.009215875528752804]& ,
         TagBoxNote->"0.009215875528752804"],
        StyleBox["0.009215875528752804`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.009215875528752804, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{15.583054419238875, 0.}, {16.416945580761126, 0.008730876259505749},
          RoundingRadius->0],
         StatusArea[#, 0.008730876259505749]& ,
         TagBoxNote->"0.008730876259505749"],
        StyleBox["0.008730876259505749`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.008730876259505749, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{16.583054419238874, 0.}, {17.416945580761126, 0.006829350721091032},
          RoundingRadius->0],
         StatusArea[#, 0.006829350721091032]& ,
         TagBoxNote->"0.006829350721091032"],
        StyleBox["0.006829350721091032`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.006829350721091032, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{17.583054419238874, 0.}, {18.416945580761126, 0.006347033195197582},
          RoundingRadius->0],
         StatusArea[#, 0.006347033195197582]& ,
         TagBoxNote->"0.006347033195197582"],
        StyleBox["0.006347033195197582`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.006347033195197582, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{18.583054419238874, 0.}, {19.416945580761126, 0.00589747354388237},
          RoundingRadius->0],
         StatusArea[#, 0.00589747354388237]& ,
         TagBoxNote->"0.00589747354388237"],
        StyleBox["0.00589747354388237`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.00589747354388237, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{19.583054419238874, 0.}, {20.416945580761126, 0.0058774398639798164},
          RoundingRadius->0],
         StatusArea[#, 0.0058774398639798164`]& ,
         TagBoxNote->"0.0058774398639798164"],
        StyleBox["0.0058774398639798164`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0058774398639798164`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.18637659600842926`, 0.}, {20.821556960456178`, 0.}}], 
       StyleBox[
        {Thickness[Tiny], InsetBox[
          TagBox["\<\"Next Token\"\>",
           HoldForm], Offset[{10., 0.}, {20.416945580761123, 0.}], NCache[
          ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
          Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5830544192388744, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5830544192388744, 0.}]}],
          LineBox[{{20.416945580761123`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {20.416945580761123`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4169455807611255`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4169455807611255`, 
              0.}]}], LineBox[{{1.5830544192388742`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5830544192388742`, 
              0.}]}], 
           LineBox[{{2.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.416945580761125, 
              0.}]}], LineBox[{{2.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.583054419238874, 
              0.}]}], LineBox[{{3.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.416945580761125, 
              0.}]}], LineBox[{{3.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.583054419238874, 
              0.}]}], LineBox[{{4.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.416945580761125, 
              0.}]}], LineBox[{{4.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.583054419238874, 
              0.}]}], LineBox[{{5.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.416945580761125, 
              0.}]}], LineBox[{{5.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.583054419238874, 
              0.}]}], LineBox[{{6.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.416945580761125, 
              0.}]}], LineBox[{{6.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.583054419238874, 
              0.}]}], LineBox[{{7.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.416945580761125, 
              0.}]}], LineBox[{{7.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.583054419238874, 
              0.}]}], LineBox[{{8.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.416945580761125, 
              0.}]}], LineBox[{{8.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.583054419238874, 
              0.}]}], LineBox[{{9.416945580761123, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.416945580761123, 
              0.}]}], LineBox[{{9.583054419238872, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.583054419238872, 
              0.}]}], LineBox[{{10.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.416945580761123`, 
              0.}]}], LineBox[{{10.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.583054419238872`, 
              0.}]}], LineBox[{{11.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.416945580761123`, 
              0.}]}], LineBox[{{11.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.583054419238872`, 
              0.}]}], LineBox[{{12.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.416945580761123`, 
              0.}]}], LineBox[{{12.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.583054419238872`, 
              0.}]}], LineBox[{{13.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.416945580761123`, 
              0.}]}], LineBox[{{13.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.583054419238872`, 
              0.}]}], LineBox[{{14.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.416945580761123`, 
              0.}]}], LineBox[{{14.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.583054419238872`, 
              0.}]}], LineBox[{{15.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.416945580761123`, 
              0.}]}], LineBox[{{15.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.583054419238872`, 
              0.}]}], LineBox[{{16.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.416945580761123`, 
              0.}]}], LineBox[{{16.583054419238874`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.583054419238874`, 
              0.}]}], LineBox[{{17.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.416945580761123`, 
              0.}]}], LineBox[{{17.58305441923887, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.58305441923887, 
              0.}]}], LineBox[{{18.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.416945580761123`, 
              0.}]}], LineBox[{{18.58305441923887, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.58305441923887, 
              0.}]}], LineBox[{{19.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.416945580761123`, 
              0.}]}], LineBox[{{19.58305441923887, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.58305441923887, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           RotationBox["\<\" 3\"\>",
            BoxRotation->-1.2566370614359172`], Offset[{0, -2}, 
           {0.9999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 1\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {1.9999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 2\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {2.9999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 0\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {3.9999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 4\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {4.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 5\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {5.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" -\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {6.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 6\"\>",
            BoxRotation->-1.2566370614359172`], Offset[{0, -2}, {8., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" +\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {8.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 10\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {9.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" (\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {10.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 8\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {11.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 7\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {12.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 9\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {13.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" $\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {14.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 12\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {15.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 15\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {16.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 11\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {17.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 16\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {18.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 20\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {19.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Next Token\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"GPT-2 Probability\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.18637659600842926`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  PlotLabel->FormBox[
    FrameBox[
     StyleBox["\"2 + 2 =\"", Bold, StripOnInput -> False], StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.950914454741453*^9, 3.9509145797282696`*^9, {3.950914736511776*^9, 
   3.950914760563732*^9}, {3.9509151750478916`*^9, 3.950915181667248*^9}, 
   3.9509195137040825`*^9, 3.9509251165036163`*^9, 3.950925217201252*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"d851c03a-df2f-af4a-b1a4-1064418a784f"]
}, {2}]],

Cell[TextData[{
 StyleBox["Prompt engineering",
  FontWeight->"Bold"],
 " is the task of crafting prompts that nudge probabilities in a favorable \
direction for the behavior you want to see. Note that each generation of \
language models (and even each individual model) will have slightly different \
best practices for prompting."
}], "Text",
 CellChangeTimes->{{3.9509153180898647`*^9, 
  3.950915412321886*^9}},ExpressionUUID->"315af4e7-3724-6643-a4d3-\
6faf0b9b25c5"],

Cell["\<\
Even this very old model nearly doubles its probability assignment for the \
desired response when told to play the role of an expert:\
\>", "Text",
 CellChangeTimes->{{3.9509154178740883`*^9, 3.950915426921444*^9}, {
   3.9509156833217316`*^9, 3.9509156846896667`*^9}, {3.9509157187637577`*^9, 
   3.950915772500305*^9}, {3.9509158511387863`*^9, 3.950915860729809*^9}, 
   3.9509158954978104`*^9},ExpressionUUID->"117996ca-b428-284c-ae7d-\
73bbb937f694"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p1", "=", 
      RowBox[{"languagemodel", "[", 
       RowBox[{
       "\"\<You are an expert. Therefore, you know that 2 + 2 =\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\< 4\>\""}], "}"}]}], "]"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"languagemodel", "[", 
       RowBox[{"\"\<2 + 2 =\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "\"\< 4\>\""}], "}"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"p1", "/", "p2"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.950915550493452*^9, 3.9509156740586452`*^9}, {
  3.9509197136078835`*^9, 3.950919821977421*^9}, {3.9509251956371403`*^9, 
  3.950925203858837*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"516cf0e5-a2bd-b54d-acce-2cae90e2739d"],

Cell[BoxData["1.8480788843092146`"], "Output",
 CellChangeTimes->{
  3.950915674748905*^9, {3.950919766922947*^9, 3.950919801348364*^9}, {
   3.9509251914599*^9, 3.9509252235495777`*^9}},
 CellLabel->
  "Out[218]=",ExpressionUUID->"76b9952e-8fd8-d543-b426-2d15cda0eca0"]
}, Open  ]],

Cell["\<\
To speak very loosely, the additional context puts the language model in a \
very different \[OpenCurlyDoubleQuote]head space\[CloseCurlyDoubleQuote] for \
predicting next tokens:\
\>", "Text",
 CellChangeTimes->{{3.950915952946396*^9, 
  3.9509159869859753`*^9}},ExpressionUUID->"b185eac1-47b6-244a-803c-\
fdb1dec63557"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"prompt", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "prompt", "=", 
     "\"\<You are an expert. Therefore, you know that 2 + 2 =\>\""}], ";", 
    RowBox[{"data", "=", 
     RowBox[{"ReverseSort", "@", 
      RowBox[{"Association", "@", 
       RowBox[{"languagemodel", "[", 
        RowBox[{"prompt", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<TopProbabilities\>\"", ",", "20"}], "}"}]}], 
        "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"BarChart", "[", 
     RowBox[{"data", ",", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rotate", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2.5"}]}], "]"}], "&"}], ",", 
         RowBox[{"Keys", "@", "data"}]}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Framed", "@", 
        RowBox[{"Style", "[", 
         RowBox[{"prompt", ",", "Bold"}], "]"}]}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Next Token\>\"", ",", "\"\<GPT-2 Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"ImagePadding", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "25"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.950915076651188*^9, 3.950915089506777*^9}, 
   3.9509151301982555`*^9, {3.950918408719885*^9, 3.950918469439743*^9}, {
   3.9509195244747524`*^9, 3.950919526175123*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"ae112863-4e50-4549-bb79-189a730fb7e6"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.18637659600842926`, 0.}, {20.416945580761126`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.5599999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0.5830544192388744, 0.}, {1.4169455807611255, 0.16141942143440247},
          RoundingRadius->0],
         StatusArea[#, 0.16141942143440247`]& ,
         TagBoxNote->"0.16141942143440247"],
        StyleBox["0.16141942143440247`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.16141942143440247`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{1.5830544192388745, 0.}, {2.4169455807611255, 0.14110435545444489},
          RoundingRadius->0],
         StatusArea[#, 0.14110435545444489`]& ,
         TagBoxNote->"0.14110435545444489"],
        StyleBox["0.14110435545444489`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.14110435545444489`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{2.5830544192388745, 0.}, {3.4169455807611255, 0.1219322681427002},
          RoundingRadius->0],
         StatusArea[#, 0.1219322681427002]& ,
         TagBoxNote->"0.1219322681427002"],
        StyleBox["0.1219322681427002`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1219322681427002, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{3.5830544192388745, 0.}, {4.4169455807611255, 0.10161815583705902},
          RoundingRadius->0],
         StatusArea[#, 0.10161815583705902`]& ,
         TagBoxNote->"0.10161815583705902"],
        StyleBox["0.10161815583705902`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.10161815583705902`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{4.5830544192388745, 0.}, {5.4169455807611255, 0.04644544795155525},
          RoundingRadius->0],
         StatusArea[#, 0.04644544795155525]& ,
         TagBoxNote->"0.04644544795155525"],
        StyleBox["0.04644544795155525`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.04644544795155525, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{5.5830544192388745, 0.}, {6.4169455807611255, 0.03629476577043533},
          RoundingRadius->0],
         StatusArea[#, 0.03629476577043533]& ,
         TagBoxNote->"0.03629476577043533"],
        StyleBox["0.03629476577043533`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.03629476577043533, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{6.5830544192388745, 0.}, {7.4169455807611255, 0.031806714832782745},
          RoundingRadius->0],
         StatusArea[#, 0.031806714832782745`]& ,
         TagBoxNote->"0.031806714832782745"],
        StyleBox["0.031806714832782745`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.031806714832782745`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{7.5830544192388745, 0.}, {8.416945580761126, 0.028471792116761208},
          RoundingRadius->0],
         StatusArea[#, 0.028471792116761208`]& ,
         TagBoxNote->"0.028471792116761208"],
        StyleBox["0.028471792116761208`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.028471792116761208`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{8.583054419238875, 0.}, {9.416945580761126, 0.024902980774641037},
          RoundingRadius->0],
         StatusArea[#, 0.024902980774641037`]& ,
         TagBoxNote->"0.024902980774641037"],
        StyleBox["0.024902980774641037`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.024902980774641037`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{9.583054419238875, 0.}, {10.416945580761126, 0.019877122715115547},
          RoundingRadius->0],
         StatusArea[#, 0.019877122715115547`]& ,
         TagBoxNote->"0.019877122715115547"],
        StyleBox["0.019877122715115547`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.019877122715115547`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{10.583054419238875, 0.}, {11.416945580761126, 0.012206202372908592},
          RoundingRadius->0],
         StatusArea[#, 0.012206202372908592`]& ,
         TagBoxNote->"0.012206202372908592"],
        StyleBox["0.012206202372908592`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.012206202372908592`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{11.583054419238875, 0.}, {12.416945580761126, 0.009233429096639156},
          RoundingRadius->0],
         StatusArea[#, 0.009233429096639156]& ,
         TagBoxNote->"0.009233429096639156"],
        StyleBox["0.009233429096639156`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.009233429096639156, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{12.583054419238875, 0.}, {13.416945580761126, 0.00779231172055006},
          RoundingRadius->0],
         StatusArea[#, 0.00779231172055006]& ,
         TagBoxNote->"0.00779231172055006"],
        StyleBox["0.00779231172055006`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.00779231172055006, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{13.583054419238875, 0.}, {14.416945580761126, 0.007184256799519062},
          RoundingRadius->0],
         StatusArea[#, 0.007184256799519062]& ,
         TagBoxNote->"0.007184256799519062"],
        StyleBox["0.007184256799519062`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.007184256799519062, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{14.583054419238875, 0.}, {15.416945580761126, 0.007074709981679916},
          RoundingRadius->0],
         StatusArea[#, 0.007074709981679916]& ,
         TagBoxNote->"0.007074709981679916"],
        StyleBox["0.007074709981679916`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.007074709981679916, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{15.583054419238875, 0.}, {16.416945580761126, 0.005610707215964794},
          RoundingRadius->0],
         StatusArea[#, 0.005610707215964794]& ,
         TagBoxNote->"0.005610707215964794"],
        StyleBox["0.005610707215964794`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.005610707215964794, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{16.583054419238874, 0.}, {17.416945580761126, 0.005190481897443533},
          RoundingRadius->0],
         StatusArea[#, 0.005190481897443533]& ,
         TagBoxNote->"0.005190481897443533"],
        StyleBox["0.005190481897443533`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.005190481897443533, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{17.583054419238874, 0.}, {18.416945580761126, 0.005172534380108118},
          RoundingRadius->0],
         StatusArea[#, 0.005172534380108118]& ,
         TagBoxNote->"0.005172534380108118"],
        StyleBox["0.005172534380108118`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.005172534380108118, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{18.583054419238874, 0.}, {19.416945580761126, 0.004350628703832626},
          RoundingRadius->0],
         StatusArea[#, 0.004350628703832626]& ,
         TagBoxNote->"0.004350628703832626"],
        StyleBox["0.004350628703832626`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.004350628703832626, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{19.583054419238874, 0.}, {20.416945580761126, 0.004115731455385685},
          RoundingRadius->0],
         StatusArea[#, 0.004115731455385685]& ,
         TagBoxNote->"0.004115731455385685"],
        StyleBox["0.004115731455385685`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.004115731455385685, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.18637659600842926`, 0.}, {20.821556960456178`, 0.}}], 
       StyleBox[
        {Thickness[Tiny], InsetBox[
          TagBox["\<\"Next Token\"\>",
           HoldForm], Offset[{10., 0.}, {20.416945580761123, 0.}], NCache[
          ImageScaled[{0, Rational[1, 2]}], ImageScaled[{0, 0.5}]], 
          Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5830544192388744, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5830544192388744, 0.}]}],
          LineBox[{{20.416945580761123`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {20.416945580761123`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4169455807611255`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4169455807611255`, 
              0.}]}], LineBox[{{1.5830544192388742`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5830544192388742`, 
              0.}]}], 
           LineBox[{{2.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.416945580761125, 
              0.}]}], LineBox[{{2.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.583054419238874, 
              0.}]}], LineBox[{{3.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.416945580761125, 
              0.}]}], LineBox[{{3.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.583054419238874, 
              0.}]}], LineBox[{{4.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.416945580761125, 
              0.}]}], LineBox[{{4.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.583054419238874, 
              0.}]}], LineBox[{{5.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.416945580761125, 
              0.}]}], LineBox[{{5.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.583054419238874, 
              0.}]}], LineBox[{{6.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.416945580761125, 
              0.}]}], LineBox[{{6.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.583054419238874, 
              0.}]}], LineBox[{{7.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.416945580761125, 
              0.}]}], LineBox[{{7.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.583054419238874, 
              0.}]}], LineBox[{{8.416945580761125, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.416945580761125, 
              0.}]}], LineBox[{{8.583054419238874, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.583054419238874, 
              0.}]}], LineBox[{{9.416945580761123, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.416945580761123, 
              0.}]}], LineBox[{{9.583054419238872, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.583054419238872, 
              0.}]}], LineBox[{{10.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.416945580761123`, 
              0.}]}], LineBox[{{10.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.583054419238872`, 
              0.}]}], LineBox[{{11.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.416945580761123`, 
              0.}]}], LineBox[{{11.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.583054419238872`, 
              0.}]}], LineBox[{{12.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.416945580761123`, 
              0.}]}], LineBox[{{12.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.583054419238872`, 
              0.}]}], LineBox[{{13.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.416945580761123`, 
              0.}]}], LineBox[{{13.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.583054419238872`, 
              0.}]}], LineBox[{{14.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.416945580761123`, 
              0.}]}], LineBox[{{14.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.583054419238872`, 
              0.}]}], LineBox[{{15.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.416945580761123`, 
              0.}]}], LineBox[{{15.583054419238872`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.583054419238872`, 
              0.}]}], LineBox[{{16.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.416945580761123`, 
              0.}]}], LineBox[{{16.583054419238874`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.583054419238874`, 
              0.}]}], LineBox[{{17.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.416945580761123`, 
              0.}]}], LineBox[{{17.58305441923887, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.58305441923887, 
              0.}]}], LineBox[{{18.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.416945580761123`, 
              0.}]}], LineBox[{{18.58305441923887, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.58305441923887, 
              0.}]}], LineBox[{{19.416945580761123`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.416945580761123`, 
              0.}]}], LineBox[{{19.58305441923887, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.58305441923887, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           RotationBox["\<\" 2\"\>",
            BoxRotation->-1.2566370614359172`], Offset[{0, -2}, 
           {0.9999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 3\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {1.9999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 1\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {2.9999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 4\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {3.9999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 5\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {4.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 0\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {5.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 6\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {6.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 8\"\>",
            BoxRotation->-1.2566370614359172`], Offset[{0, -2}, {8., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 10\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {8.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 7\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {9.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 9\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {10.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 20\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {11.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 12\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {12.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 100\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {13.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 16\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {14.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 11\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {15.999999999999998, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 15\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {16.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" a\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {17.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 24\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {18.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\" 13\"\>",
            BoxRotation->-1.2566370614359172`], 
           Offset[{0, -2}, {19.999999999999996, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Next Token\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"GPT-2 Probability\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.18637659600842926`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{Automatic, Automatic}, {Automatic, 25}},
  ImageSize->400,
  PlotLabel->FormBox[
    FrameBox[
     StyleBox[
     "\"You are an expert. Therefore, you know that 2 + 2 =\"", Bold, 
      StripOnInput -> False], StripOnInput -> False], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.9509150912477303`*^9, 3.950915131238247*^9, {3.9509184245243664`*^9, 
   3.9509184698421516`*^9}, 3.9509195270451183`*^9, 3.950925229724413*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"dcfcda5b-88a2-b24a-b62e-81de220fd4fb"]
}, {2}]],

Cell["\<\
Let\[CloseCurlyQuote]s run a quick experiment to see how some text giving \
this model a role affects the probability assigned to the desired token. The \
results are amusing:\
\>", "Text",
 CellChangeTimes->{{3.9509175598292103`*^9, 3.950917560538723*^9}, {
  3.9509184963399487`*^9, 3.9509185128608856`*^9}, {3.950918844221119*^9, 
  3.950918845092146*^9}, {3.950918895580179*^9, 3.950918944262596*^9}, {
  3.9509190377882805`*^9, 3.9509190435322857`*^9}, {3.9509198534780483`*^9, 
  3.950919873157873*^9}},ExpressionUUID->"86e85164-c723-394c-a56e-\
d63a2bf78c04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"template", ",", "target", ",", "roles", ",", "prompts"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"template", "=", 
     RowBox[{
     "StringTemplate", "[", 
      "\"\<You are an expert ``. Therefore, you know that 2 + 2 =\>\"", 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"target", "=", "\"\< 4\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"roles", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<physicist\>\"", ",", "\"\<mathematician\>\"", ",", 
        "\"\<educator\>\"", ",", "\"\<AI assistant\>\"", ",", 
        "\"\<calculator\>\"", ",", "\"\<Wolfram developer\>\"", ",", 
        "\"\<chemist\>\"", ",", "\"\<computer scientist\>\"", ",", 
        "\"\<musician\>\"", ",", "\"\<tuba player\>\"", ",", 
        "\"\<developer\>\""}], "}"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"prompts", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"template", ",", "roles"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"languagemodel", "[", 
       RowBox[{"prompts", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Probability\>\"", ",", "target"}], "}"}]}], "]"}], ",", 
      RowBox[{"ChartLabels", "->", "roles"}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Framed", "@", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"template", "[", "\"\<`Role`\>\"", "]"}], "<>", 
           "\"\<`Target`\>\""}], ",", "Bold"}], "]"}]}]}], ",", 
      RowBox[{"ImageSize", "->", "500"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Role\>\"", ",", "\"\<Success Probability (GPT-2)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"BarOrigin", "->", "Left"}], ",", 
      RowBox[{"ImagePadding", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9509160375137463`*^9, 3.950916381788105*^9}, {
   3.950916436766239*^9, 3.9509166376541157`*^9}, {3.950916672101036*^9, 
   3.950916734892454*^9}, {3.950916775565878*^9, 3.9509167767648315`*^9}, {
   3.9509171544278355`*^9, 3.950917154827734*^9}, {3.95091726004459*^9, 
   3.95091747534684*^9}, 3.9509175390426216`*^9, {3.950917573611658*^9, 
   3.950917588516487*^9}, {3.950918023063591*^9, 3.9509180991904545`*^9}, {
   3.950918142176077*^9, 3.950918144746483*^9}, {3.9509181789314137`*^9, 
   3.950918222631731*^9}, {3.9509183150391216`*^9, 3.950918373941828*^9}, 
   3.9509184840571976`*^9, {3.9509188619201508`*^9, 3.950918868380188*^9}, {
   3.9509190506228333`*^9, 3.950919053414509*^9}, {3.9509191043913174`*^9, 
   3.9509191232717495`*^9}, 3.9509191588257065`*^9, {3.9509194158802605`*^9, 
   3.9509194539036407`*^9}, {3.950919552752493*^9, 3.950919554935934*^9}, {
   3.9509251543817463`*^9, 3.950925179644148*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"abb5ffeb-2955-7246-ae18-3602f23ea5f7"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.33075018208302986`}, {0., 11.451201747997086`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 0.5487982520029133}, {0.10891775041818619, 1.4512017479970867},
          RoundingRadius->0],
         StatusArea[#, 0.10891775041818619`]& ,
         TagBoxNote->"0.10891775041818619"],
        StyleBox["0.10891775041818619`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.10891775041818619`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 1.5487982520029133}, {0.10173235088586807, 2.4512017479970867},
          RoundingRadius->0],
         StatusArea[#, 0.10173235088586807`]& ,
         TagBoxNote->"0.10173235088586807"],
        StyleBox["0.10173235088586807`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.10173235088586807`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 2.5487982520029133}, {0.10097973793745041, 3.4512017479970867},
          RoundingRadius->0],
         StatusArea[#, 0.10097973793745041`]& ,
         TagBoxNote->"0.10097973793745041"],
        StyleBox["0.10097973793745041`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.10097973793745041`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 3.5487982520029133}, {0.10605446994304657, 4.451201747997087},
          RoundingRadius->0],
         StatusArea[#, 0.10605446994304657`]& ,
         TagBoxNote->"0.10605446994304657"],
        StyleBox["0.10605446994304657`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.10605446994304657`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 4.548798252002913}, {0.11476273089647293, 5.451201747997087},
          RoundingRadius->0],
         StatusArea[#, 0.11476273089647293`]& ,
         TagBoxNote->"0.11476273089647293"],
        StyleBox["0.11476273089647293`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.11476273089647293`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 5.548798252002913}, {0.10439877957105637, 6.451201747997087},
          RoundingRadius->0],
         StatusArea[#, 0.10439877957105637`]& ,
         TagBoxNote->"0.10439877957105637"],
        StyleBox["0.10439877957105637`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.10439877957105637`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 6.548798252002913}, {0.09927871078252792, 7.451201747997087},
          RoundingRadius->0],
         StatusArea[#, 0.09927871078252792]& ,
         TagBoxNote->"0.09927871078252792"],
        StyleBox["0.09927871078252792`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.09927871078252792, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 7.548798252002913}, {0.0950208380818367, 8.451201747997086},
          RoundingRadius->0],
         StatusArea[#, 0.0950208380818367]& ,
         TagBoxNote->"0.0950208380818367"],
        StyleBox["0.0950208380818367`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0950208380818367, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 8.548798252002912}, {0.0800778940320015, 9.451201747997086},
          RoundingRadius->0],
         StatusArea[#, 0.0800778940320015]& ,
         TagBoxNote->"0.0800778940320015"],
        StyleBox["0.0800778940320015`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0800778940320015, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 9.548798252002912}, {0.11493755877017975, 10.451201747997086},
          RoundingRadius->0],
         StatusArea[#, 0.11493755877017975`]& ,
         TagBoxNote->"0.11493755877017975"],
        StyleBox["0.11493755877017975`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.11493755877017975`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.623], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 10.548798252002912}, {0.11628252267837524, 11.451201747997086},
          RoundingRadius->0],
         StatusArea[#, 0.11628252267837524`]& ,
         TagBoxNote->"0.11628252267837524"],
        StyleBox["0.11628252267837524`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.11628252267837524`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0., 0.33075018208302986`}, {0., 11.673610779315366`}}], 
       StyleBox[
        {Thickness[Tiny], InsetBox[
          TagBox["\<\"Role\"\>",
           HoldForm], Offset[{0., 10.}, {0., 11.451201747997086}], NCache[
          ImageScaled[{Rational[1, 2], 0}], ImageScaled[{0.5, 0}]], 
          Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0., 0.5487982520029133}, 
           Offset[{-6., 0.}, {0., 0.5487982520029133}]}], 
         LineBox[{{0., 11.451201747997086`}, 
           Offset[{-6., 0.}, {0., 
            11.451201747997086`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {LineBox[{{0., 1.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 1.4512017479970867`}]}], 
           LineBox[{{0., 1.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 1.5487982520029133`}]}], 
           LineBox[{{0., 2.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 2.4512017479970867`}]}], 
           LineBox[{{0., 2.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 2.5487982520029133`}]}], 
           LineBox[{{0., 3.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 3.4512017479970867`}]}], 
           LineBox[{{0., 3.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 3.5487982520029133`}]}], 
           LineBox[{{0., 4.451201747997087}, 
             Offset[{-4., 0.}, {0., 4.451201747997087}]}], 
           LineBox[{{0., 4.548798252002913}, 
             Offset[{-4., 0.}, {0., 4.548798252002913}]}], 
           LineBox[{{0., 5.451201747997087}, 
             Offset[{-4., 0.}, {0., 5.451201747997087}]}], 
           LineBox[{{0., 5.548798252002913}, 
             Offset[{-4., 0.}, {0., 5.548798252002913}]}], 
           LineBox[{{0., 6.451201747997087}, 
             Offset[{-4., 0.}, {0., 6.451201747997087}]}], 
           LineBox[{{0., 6.548798252002913}, 
             Offset[{-4., 0.}, {0., 6.548798252002913}]}], 
           LineBox[{{0., 7.451201747997087}, 
             Offset[{-4., 0.}, {0., 7.451201747997087}]}], 
           LineBox[{{0., 7.548798252002913}, 
             Offset[{-4., 0.}, {0., 7.548798252002913}]}], 
           LineBox[{{0., 8.451201747997086}, 
             Offset[{-4., 0.}, {0., 8.451201747997086}]}], 
           LineBox[{{0., 8.548798252002912}, 
             Offset[{-4., 0.}, {0., 8.548798252002912}]}], 
           LineBox[{{0., 9.451201747997086}, 
             Offset[{-4., 0.}, {0., 9.451201747997086}]}], 
           LineBox[{{0., 9.54879825200291}, 
             Offset[{-4., 0.}, {0., 9.54879825200291}]}], 
           LineBox[{{0., 10.451201747997086`}, 
             Offset[{-4., 0.}, {0., 10.451201747997086`}]}], 
           LineBox[{{0., 10.54879825200291}, 
             Offset[{-4., 0.}, {0., 10.54879825200291}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"AI assistant\"\>", Offset[{-2, 0}, {0., 1.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"calculator\"\>", Offset[{-2, 0}, {0., 2.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"chemist\"\>", Offset[{-2, 0}, {0., 3.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"computer scientist\"\>", Offset[{-2, 0}, {0., 4.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"developer\"\>", Offset[{-2, 0}, {0., 5.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"educator\"\>", Offset[{-2, 0}, {0., 6.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"mathematician\"\>", Offset[{-2, 0}, {0., 7.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"musician\"\>", 
           Offset[{-2, 0}, {0., 7.999999999999999}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"physicist\"\>", Offset[{-2, 0}, {0., 9.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"tuba player\"\>", Offset[{-2, 0}, {0., 10.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Wolfram developer\"\>", Offset[{-2, 0}, {0., 11.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{
    FormBox[
     TagBox["\"Success Probability (GPT-2)\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Role\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0.33075018208302986`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{Automatic, Automatic}, {Automatic, 15}},
  ImageSize->500,
  PlotLabel->FormBox[
    FrameBox[
     StyleBox[
     "\"You are an expert `Role`. Therefore, you know that 2 + 2 =`Target`\"",
       Bold, StripOnInput -> False], StripOnInput -> False], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{
  3.9509161111947403`*^9, 3.950916222631235*^9, 3.9509162631728477`*^9, {
   3.950916350458212*^9, 3.9509163823197403`*^9}, {3.9509164373113403`*^9, 
   3.950916459916996*^9}, 3.95091652947114*^9, {3.9509165665229053`*^9, 
   3.950916601224804*^9}, 3.9509166385587234`*^9, {3.9509167099566116`*^9, 
   3.9509167358053055`*^9}, 3.9509167775359592`*^9, 3.9509171563635445`*^9, {
   3.950917288353056*^9, 3.9509173757233105`*^9}, {3.950917418621462*^9, 
   3.9509174763054295`*^9}, 3.950917539946108*^9, {3.950917583957529*^9, 
   3.9509175895172176`*^9}, 3.950918024004404*^9, {3.9509180659195232`*^9, 
   3.950918100176241*^9}, 3.950918145520233*^9, {3.950918180715376*^9, 
   3.950918223288664*^9}, {3.950918328184057*^9, 3.9509183746561584`*^9}, 
   3.950918484860731*^9, 3.9509188694130898`*^9, 3.9509190545403748`*^9, {
   3.9509191101050777`*^9, 3.950919124564617*^9}, 3.950919160216034*^9, {
   3.950919426720337*^9, 3.9509194561313343`*^9}, 3.950919555916338*^9, 
   3.9509251257127876`*^9, {3.950925156405712*^9, 3.9509251666654243`*^9}, 
   3.9509252400844536`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"034d6b3d-b1e2-af42-9d36-e5e1694889b5"]
}, {2}]],

Cell[TextData[{
 "Keep in mind, this role-based prompt engineering is not always helpful as \
argued by ",
 ButtonBox["Zheng et al (2024)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://arxiv.org/abs/2311.10054v3"], None},
  ButtonNote->"https://arxiv.org/abs/2311.10054v3"],
 ". However, this topic is still the subject of ongoing research such as ",
 ButtonBox["Poterti et al (2025)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://arxiv.org/abs/2502.12055"], None},
  ButtonNote->"https://arxiv.org/abs/2502.12055"],
 "."
}], "Text",
 CellChangeTimes->{{3.950919187052471*^9, 3.9509193799773216`*^9}, {
  3.9509195831255646`*^9, 
  3.9509195847338104`*^9}},ExpressionUUID->"2005786a-5a96-bc41-8d3e-\
fdcff0207e74"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sampling and Temperature", "Subsection",
 CellChangeTimes->{{3.95092043791745*^9, 3.950920455086252*^9}, {
  3.950920606869583*^9, 
  3.950920610118582*^9}},ExpressionUUID->"6eb4f8a5-ea0a-4743-b674-\
1c8b412c3c7b"],

Cell[TextData[{
 "In order to compute probabilities, the final layer of a language model will \
apply what is called a ",
 ButtonBox["softmax layer",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/SoftmaxLayer.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/SoftmaxLayer.html"],
 " by ML people. You might know this as a ",
 ButtonBox["Boltzmann (Gibbs) distribution",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Boltzmann_distribution"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Boltzmann_distribution"],
 "."
}], "Text",
 CellChangeTimes->{{3.950920472032387*^9, 3.9509204978311462`*^9}, {
  3.950920577557581*^9, 3.9509205822134895`*^9}, {3.950920620429558*^9, 
  3.9509206365826283`*^9}, {3.950920753350647*^9, 3.950920808981703*^9}, {
  3.950920843094267*^9, 3.950920843094267*^9}, {3.950920935515381*^9, 
  3.9509209517505207`*^9}},ExpressionUUID->"2a1640d5-62c3-7548-919d-\
e78f4dd30797"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"languagemodel", ",", "\"\<SummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.950920500842493*^9, 3.950920510526119*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"82df659f-069e-a144-b997-55b8f055e2bd"],

Cell[BoxData[
 GraphicsBox[{{
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -9}, {-5.999999999999998, 1.6076938217470707*^-7}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"embedding\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-4.999999999999998, 
         1.339744851455892*^-7}], 
        Offset[{0, -20.5}, {-4.999999999999998, 1.339744851455892*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"classifier\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-1.9999999999999993`, 
         5.3589794058235685`*^-8}], 
        Offset[{0, -20.5}, {-1.9999999999999993`, 5.3589794058235685`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"probabili..\"\>",
         "\"probabilities\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "probabilities", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-41, 2]}, {-0.9999999999999997, 
         2.6794897029117842`*^-8}], 
        Offset[{0, -20.5}, {-0.9999999999999997, 2.6794897029117842`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"decoder\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-3.9999999999999987`, 
         1.0717958811647137`*^-7}], 
        Offset[{0, -20.5}, {-3.9999999999999987`, 1.0717958811647137`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"last\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-2.999999999999999, 
         8.038469108735353*^-8}], 
        Offset[{0, -20.5}, {-2.999999999999999, 8.038469108735353*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Output\"\>", Offset[{0, -9}, {0., 0.}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->RGBColor[
      0.4658823529411765, 0.6176470588235294, 0.6494117647058824]], 
    StyleBox[{InsetBox[
       StyleBox[
        StyleBox["\<\"n\"\>",
         StripOnInput->False,
         FontSlant->Italic],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294277*^-7, 5.4999999999999964}, \
{-5.4499999999999975, 1.4603218880869225*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716865`*^-8}], InsetBox[
       StyleBox["\<\"50257\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.499999999999996}, \
{-1.4499999999999993, 3.885260069222087*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.4999999999999964}, \
{-3.449999999999999, 9.244239475045655*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.4999999999999964}, \
{-4.449999999999998, 1.192372917795744*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox["\<\"768\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.143591762329427*^-7, 5.4999999999999964}, \
{-2.4499999999999993, 6.564749772133872*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439567871685*^-8}], InsetBox[
       StyleBox["\<\"50257\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.499999999999996}, \
{-0.4499999999999998, 1.2057703663103027*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678716846`*^-8}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}, 
   {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.999999999999998, 
       1.6076938217470707`*^-7}, {-4.999999999999998, 1.339744851455892*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-1.9999999999999993`, 
       5.3589794058235685`*^-8}, {-0.9999999999999997, 
       2.6794897029117842`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.9999999999999987`, 
       1.0717958811647137`*^-7}, {-2.999999999999999, 8.038469108735353*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-4.999999999999998, 
       1.339744851455892*^-7}, {-3.9999999999999987`, 
       1.0717958811647137`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-2.999999999999999, 
       8.038469108735353*^-8}, {-1.9999999999999993`, 
       5.3589794058235685`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 0.}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, {
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-5.4499999999999975, 1.4603218880869225*^-7}, {-0.25, 0}, Offset[10], {
       1., -3.897439567871689*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-1.4499999999999993, 3.885260069222087*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.8974395678716865`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-3.449999999999999, 9.244239475045655*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439567871685*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-4.449999999999998, 1.192372917795744*^-7}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439567871685*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-2.4499999999999993, 6.564749772133872*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999998, -3.897439567871687*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-0.4499999999999998, 1.2057703663103027*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.8974395678716865`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
        Offset[{2., 2.}, {0., 0.}]]}, InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[
          0.817375, 0.31808499999999995`, 0.3521274999999998], Thickness[
          0.03]}], FaceForm[RGBColor[0.9939125, 0.9772695, 0.97840425]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 20.}, {
            19.903200149536133`, 16.}, {17.903200149536133`, 14.}, {
            13.903200149536133`, 14.}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
            9.903200149536133, 14.}, {7.903200149536133, 16.}, {
            7.903200149536133, 20.}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
            9.903200149536133, 14.}, {7.903200149536133, 12.}, {
            7.903200149536133, 8.}}},
            CurveClosed->{0}]}, 
          {FaceForm[{Hue[
           0.9744623655913979, 0.4881889763779528, 0.996078431372549], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {18., 21.}}}]}, 
          {FaceForm[{RGBColor[0.7565, 0.09078, 0.1361699999999998], Opacity[
           1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
            0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {12., 
            16.}}}]}, 
          {FaceForm[{Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6., 21.}}}]}, 
          {FaceForm[{Hue[0.04791666666666667, 0.6274509803921569, 1.], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 10.}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-4.999999999999998, 1.339744851455892*^-7}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[
          0.817375, 0.31808499999999995`, 0.3521274999999998], Thickness[
          0.03]}], FaceForm[RGBColor[0.9939125, 0.9772695, 0.97840425]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {7.250000953674316, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {14.000000953674316`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {20.750001907348633`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {7.249997138977051, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {13.999998092651367`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {20.749998092651367`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7565, 0.09078, 0.1361699999999998], Opacity[
           1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
            4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
            "]]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-1.9999999999999993, 5.3589794058235685*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Thickness[0.02903571512017931], Opacity[1.], CapForm["Round"], 
           JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{8.375, 15.344499588012695`}, {
            19.625, 15.344499588012695`}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            13.945324897766113`, 6.005837440490723}, {8.312512397766113, 
            6.005837440490723}, {8.312512397766113, 6.517556190490723}, {
            10.984387397766113`, 9.669899940490723}, {8.824231147766113, 
            12.517556190490723`}, {8.824231147766113, 13.048806190490723`}, {
            13.625012397766113`, 13.048806190490723`}, {13.679699897766113`, 
            11.224587440490723`}, {12.945324897766113`, 
            11.224587440490723`}, {12.855481147766113`, 
            12.341774940490723`}, {9.921887397766113, 12.341774940490723`}, {
            11.937512397766113`, 9.654274940490723}, {9.464856147766113, 
            6.712868690490723}, {13.167981147766113`, 6.712868690490723}, {
            13.222668647766113`, 7.990212440490723}, {13.945324897766113`, 
            7.990212440490723}, {13.945324897766113`, 6.005837440490723}}}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQHGj8bOABphdMCSiDa2cnOEERP6dygAqLzToaA
+QcEjoP5MwOywfwtj6+A+S/vNoH5Na23wHz1FzPBfJMl98H8Wxs2gPlLtj0C
82u+HUPhF3z5jcK3O6hhBKJ5PC6A+VnzfMH8D29Xg/kqe4vA/CuT28H8E7oT
wPwjaaFg/iPDZUYQ94mA+b9M90D5V5RB9J/uU2A+l2wnmP/G+CKYv6ffEMy/
c/s6mB9VfxMcHg7iEP4F20owny35nBFyeKGEHwBPclvI
             "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQSPY3gNHID0gcZiGRAtVvRTH0QHzDgD5i+59wDM
v8FiIguiXX6eB/M7zq4C879M2w/mS0xQkAPRBde2gPkbaueC+WesNoD5Pzrl
5UG0yvzVYL7DtIVgvoXSGjA/67qQAojWOLUJzP/zPgzMlyjaCeZP4pgN5ves
PwzmT+C4DeZn/L8A5vMXiyuC6Ckb34H5JybOAfOXqPOD/NdgtkReCcS3f6MP
9m/DhoVg/u0NAWD+qT3KyiB1TeU1YL7St+lg/tp/m8D8Off/gfio4QUAM1NU
yQ==
             "], CompressedData["
1:eJxV1HtIU1EcB/CLqdVAHUtzPtLNJ77mVHpgMTcKm0tq1KAhNWZoTIvSzNAs
d+2BLkVNLCaa0yIxkVBTjLQcaZkIaZuvSG2RxKQSnZBCSnm+1z/m4PLlwz33
nN/5ncP45y6fTHegKOrUxkNy41d2nI4TbyQ7Z5JHslNbAieF8vgkIzMq4GpV
BkwnPyCmbdwX8Fh0LbFRJF+Dp50NGP+IlRhAMmhXI8ZPvCmHs/yf4L1bziQ8
lvIY5tT7Bdp/P5uQBs91YH6q6dszWJlYDTtm/4IHHHTw4u+IIJLu6fmwpugO
rA9Og5UKEyw/kgQPnPcIxn74Ali6poS5P1xh3nAlzHb7GYvvzL1wef4grFfN
wzadAZY2sUJIyvpzYGULD97dcxTOer4vhKnPC95hk8ARImuMvbk9xfY2drVE
w9LQzfkqLUKSU+4zZH36Wu59WKmtQT16+TFYYT4Ea/musJ71Hvv/MNcYTdIq
OQGnFR6Ehatv0c+XZVYB+tLGh3l+D4lpk4bGeWnClcTi0woTzlvfLhAw5+kJ
j/Y4CZh61bhPFutKFMk8WaY/ydYuR7yf+hzpR7LEiQPn5S75os9/42EjNeuD
c/amGRcteyMPvINHHXbC9LZQ1G9pk3uRPLP+lPHdIS7J2gIO9k+lHoY7FKkw
PfzPk+SSrs/e4uVO5xg70+ulMlg9GIbva+SlsLDvJhxYNQyzuz/Blfnbcb5U
mQz1fLwtgoUiK1w1kgs3rBWj/sI/TXCbVor91hWY4GZzhC+zzjo8GsXeQzLZ
KwD3U53ojv5ppAnM/fXcz/TXfAHjV3UGWLaQAludv2K8JSYR1tiE8MX6KGa8
So/5Lw25x26ui/UXVKvYn7H1Ojz9ZZLph48LLPHshql7BtQf9LoKluuTiemr
skymP/EceGBSwsw3PkH2L15heTAOe0VscZn7LrQzHZkxssVns3s2z7MfDhc1
ww0j495M/dWw/Mg8PD9zC16ccUB9nPgrsLouwIc5z2G4t6Id93V17404e2/5
f/wP099AUQ==
             "]}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQIXXLQdgNSCyufGIJot8BaYfyvC3BREx8Sz64Do
gjlOYP6mXBMw/1WrJ5gf1JEM5p8L8wHzz82ZCOZrPfMD80309oP5SfkBYH7F
ztco/IStobrI/D9+68F8MQt3MD+E8yeYz8FtCuafcHPWA9G/7iqB+QIadWB+
0XFOMN/FYJUexH0vTUB0icU1KP8kmF/x5BOYP3XRYjA/woRBH0S/u10O5lu0
8IL5ey97g/kMv7nB/B+bpMH8nkm/9JDDCyX8AJxVUUc=
             "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQRubRWaDkC64ctvQxA9zS4czFexEjIC06vtwHw3
UR0w/8hRXTC/6LgnmF+SLAvmi1mkg/kfFgmB+TXFbWC+DzsfmN/3bRmYvySb
E8xfUHkczN/xDsI/Wv8CzF8xTQDM5+vhMgbRM+zEwfzIGTpgPk+NIpgfMcMH
zH9xWg/Eb5h+NgvMF6nzAct/iVkL5p+QrgHxHbSfvQPz/y3ZC5YPeKNvAqLN
9P6D+aWfCsD81t1hWiBakX81mH/75GEw/17zPTAfJbwAZcRNfQ==
             "], CompressedData["
1:eJxV1GtIk1EYB/CXpaKIWGyEknhBbdN539SRImulrHVxeYEUK6+FzjnK/GBe
mLrSyspMbKLYupCWYiqalxKFhZfMkLygNclshJqm1JIyyzz/tw9zMP78OHvP
+5znOcwpURGRwqAoKnLrS3Lr85rv7SPcSvWIhEfSkBJIrGxjK+D08BCsx2pv
w31+B4mFVzSdMGu3hDjeO3gGtls+iudP2TL4xMm/wvH7nMy9cLNpBNbvjEhg
1v7j2N82KYNv9Dy1ybsFu1Rhf+qTSRus9jgAlx+ZgE0WUC9lbvkDjjrMgV9G
OfmTnLJkwsEhYtgxetWb5PmBVFhp3Q3zy6/BzeocWJNdB2sWeXBnXg9c07vk
RTJOOwYnz9bA/LN6mBUZCgenrsCNomVPkmLZOlxfWQazrKgAkpNir21uFsk9
jKz84tTDJW5j/99vyR7OrR2B5R1Kd5Ivxhro+uUGN5LdeXlwvvVFOM5WBItb
NjnoW7sZrJdUwZyyPvRPEBMGS5cUfPr839lkftliB3h+rZ1YExQyiHnb5Jey
6XmmwdKSJDZdrzUc3x4NNz3q8iPpUZgIX5akweZvFXDGuT3w6IAaFlZM+pJU
fZ6BlYZqWGjqzKHnmwBToypYLOTBuqEdOG9J1i74mbbQjT7PCu6BPssR/Vo1
+wAnzuqMrTwTIOMar+fov8HzlxbgVvkFzEdX9BfuXzXA4wVMvE/Tm4557uzw
he3G38E1zjHwQ9kh3A8BswDO7WqAN3gtcKeWgfu2br4Iz0piYJWDM/pjs3kP
rndNhqUndfDcdCM8lemP/W6s9cOsx0z41UQlLPRZRD1PpDL4hEUX/IYbCsed
Lvakz2dP++oxWNj7B/UIVFbwfOwczPg9jPOXrfXDg2FFsMu+Vjg1wQ+uuP8A
tsj9iH4qhyqIlRlzxbRrrxP3VVe4Gpuart1wN3bQ03F3ep434QlxE/yzGPuR
+mGXlCo4oiQJLh2+S/dfKII5z+t86Xka4K/vA3FfBXZcH2Nv+3/8B3j6SDI=

             "]}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-0.9999999999999997, 2.6794897029117842*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {FaceForm[{RGBColor[
           0.6274509803921569, 0.8156862745098039, 0.49411764705882355`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6.221999645233154, 18.73400115966797}, {9.045999526977539, 
            18.73400115966797}, {9.045999526977539, 8.734001159667969}, {
            6.221999645233154, 8.734001159667969}, {6.221999645233154, 
            18.73400115966797}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            12.81100082397461, 18.73400115966797}, {15.635000228881836`, 
            18.73400115966797}, {15.635000228881836`, 8.734001159667969}, {
            12.81100082397461, 8.734001159667969}, {12.81100082397461, 
            18.73400115966797}}}]}, 
          {FaceForm[{Hue[0.5247747747747747, 0.43, 0.86], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            19.39900016784668, 18.73400115966797}, {22.222999572753906`, 
            18.73400115966797}, {22.222999572753906`, 8.734001159667969}, {
            19.39900016784668, 8.734001159667969}, {19.39900016784668, 
            18.73400115966797}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            9.98699951171875, 15.73439884185791}, {11.868999481201172`, 
            13.73439884185791}, {9.98699951171875, 11.73439884185791}, {
            9.98699951171875, 15.73439884185791}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            16.575298309326172`, 15.73439884185791}, {18.457298278808594`, 
            13.73439884185791}, {16.575298309326172`, 11.73439884185791}, {
            16.575298309326172`, 15.73439884185791}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-3.9999999999999987, 1.0717958811647137*^-7}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6.486000061035156, 15.5}, {9.486000061035156, 15.5}, {
            9.486000061035156, 12.5}, {6.486000061035156, 12.5}, {
            6.486000061035156, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            9.48599910736084, 15.5}, {12.48599910736084, 15.5}, {
            12.48599910736084, 12.5}, {9.48599910736084, 12.5}, {
            9.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            12.48599910736084, 15.5}, {15.48599910736084, 15.5}, {
            15.48599910736084, 12.5}, {12.48599910736084, 12.5}, {
            12.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            15.48599910736084, 15.5}, {18.486000061035156`, 15.5}, {
            18.486000061035156`, 12.5}, {15.48599910736084, 12.5}, {
            15.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.], Thickness[0.03571428571428571], CapForm["Butt"], 
           JoinForm[{"Miter", 1.}]}], FaceForm[{RGBColor[
           0.5, 0.73275, 0.67689], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            18.486000061035156`, 15.5}, {21.486000061035156`, 15.5}, {
            21.486000061035156`, 12.5}, {18.486000061035156`, 12.5}, {
            18.486000061035156`, 15.5}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-2.999999999999999, 8.038469108735353*^-8}], 
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
     FontSize->10]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{35., 35.}, {35., 25.}},
  ImageSize->{564.4999999999999, 84.67501815086325},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.9509205109954834`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"e9a8d873-52c5-6c47-b79d-fcb7c9b8103b"]
}, Open  ]],

Cell[TextData[{
 "The outputs of the classification layer are the analog of the (negative) \
energies from statistical mechanics, and they are called ",
 StyleBox["logits",
  FontWeight->"Bold"],
 " in this context."
}], "Text",
 CellChangeTimes->{{3.9509209738458977`*^9, 3.9509209805418167`*^9}, {
  3.950921069894888*^9, 3.9509211209378242`*^9}, {3.9509212497336826`*^9, 
  3.950921297591095*^9}, {3.9509224942152996`*^9, 
  3.95092249590518*^9}},ExpressionUUID->"ef5ae58f-ec5f-0f44-8352-\
dc3381c5a8de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "=", 
       RowBox[{"ReverseSort", "@", 
        RowBox[{"Association", "@", 
         RowBox[{"manipulatenet", "[", 
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Temperature\>\"", "->", "Temperature"}], ",", 
             RowBox[{"\"\<String\>\"", "->", "\"\<2 + 2 =\>\""}]}], "|>"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<TopProbabilities\>\"", ",", "20"}], "}"}]}], 
          "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BarChart", "[", 
      RowBox[{"data", ",", 
       RowBox[{"ChartLabels", "->", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2.5"}]}], "]"}], "&"}], ",", 
          RowBox[{"Keys", "@", "data"}]}], "]"}]}], ",", 
       RowBox[{"PlotRange", "->", "1"}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Framed", "@", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<2 + 2 =\>\"", ",", "Bold"}], "]"}]}]}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Next Token\>\"", ",", "\"\<Probability\>\""}], 
         "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Temperature", ",", "1"}], "}"}], ",", ".05", ",", "2"}], "}"}],
    ",", 
   RowBox[{"TrackedSymbols", ":>", "Temperature"}], ",", 
   RowBox[{"ControlPlacement", "->", "Top"}], ",", 
   RowBox[{"Initialization", ":>", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"model", "=", 
        RowBox[{"NetModel", "[", 
         RowBox[{"\"\<GPT2 Transformer Trained on WebText Data\>\"", ",", 
          RowBox[{"\"\<Task\>\"", "->", "\"\<LanguageModeling\>\""}]}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"manipulatenet", "=", 
       RowBox[{"NetGraph", "[", 
        RowBox[{
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<logits\>\"", "->", 
            RowBox[{"NetTake", "[", 
             RowBox[{"model", ",", "\"\<classifier\>\""}], "]"}]}], ",", 
           RowBox[{"\"\<scalar\>\"", "->", 
            RowBox[{"FunctionLayer", "[", 
             RowBox[{
              RowBox[{"#logits", "/", "#t"}], "&"}], "]"}]}], ",", 
           RowBox[{"\"\<probabilities\>\"", "->", 
            RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"NetPort", "[", "\"\<String\>\"", "]"}], "->", 
            RowBox[{"NetPort", "[", 
             RowBox[{"\"\<logits\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
           RowBox[{"\"\<logits\>\"", "->", 
            RowBox[{"NetPort", "[", 
             RowBox[{"\"\<scalar\>\"", ",", "\"\<logits\>\""}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"NetPort", "[", "\"\<Temperature\>\"", "]"}], "->", 
            RowBox[{"NetPort", "[", 
             RowBox[{"\"\<scalar\>\"", ",", "\"\<t\>\""}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<scalar\>\"", "->", "\"\<probabilities\>\""}]}], "}"}],
          ",", 
         RowBox[{"\"\<String\>\"", "->", 
          RowBox[{"NetExtract", "[", 
           RowBox[{"model", ",", "\"\<Input\>\""}], "]"}]}], ",", 
         RowBox[{"\"\<Output\>\"", "->", 
          RowBox[{"NetExtract", "[", 
           RowBox[{"model", ",", "\"\<Output\>\""}], "]"}]}], ",", 
         RowBox[{"\"\<Temperature\>\"", "->", "\"\<Real\>\""}]}], "]"}]}]}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.950920040466015*^9, 3.9509200453537674`*^9}, {
  3.950920109497473*^9, 3.9509201455130806`*^9}, {3.95092017635322*^9, 
  3.9509201902731647`*^9}, {3.950920284112673*^9, 3.950920346960327*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"0d65fa85-ee35-ca49-a1e5-b6fcb771ad3a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Temperature$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Temperature$$], 1}, 0.05, 2, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    360., {98.12460746453029, 103.85654105828029`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Temperature$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      With[{$CellContext`data = ReverseSort[<|
            $CellContext`manipulatenet[<|
             "Temperature" -> $CellContext`Temperature$$, "String" -> 
              "2 + 2 ="|>, {"TopProbabilities", 20}]|>]}, 
        BarChart[$CellContext`data, ChartLabels -> Map[Rotate[#, (-Pi)/2.5]& , 
           Keys[$CellContext`data]], PlotRange -> 1, PlotLabel -> Framed[
           Style["2 + 2 =", Bold]], AspectRatio -> 1/2, 
         AxesLabel -> {"Next Token", "Probability"}]], 
      "Specifications" :> {{{$CellContext`Temperature$$, 1}, 0.05, 2}}, 
      "Options" :> {
       TrackedSymbols :> $CellContext`Temperature$$, ControlPlacement -> Top},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405.1, {139.33544730828027`, 145.06738090203027`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(
     With[{$CellContext`model = 
        NetModel[
         "GPT2 Transformer Trained on WebText Data", "Task" -> 
          "LanguageModeling"]}, $CellContext`manipulatenet = 
       NetGraph[<|
         "logits" -> NetTake[$CellContext`model, "classifier"], "scalar" -> 
          FunctionLayer[Slot["logits"]/Slot["t"]& ], "probabilities" -> 
          SoftmaxLayer[]|>, {
         NetPort["String"] -> NetPort["logits", "Input"], "logits" -> 
          NetPort["scalar", "logits"], NetPort["Temperature"] -> 
          NetPort["scalar", "t"], "scalar" -> "probabilities"}, "String" -> 
         NetExtract[$CellContext`model, "Input"], "Output" -> 
         NetExtract[$CellContext`model, "Output"], "Temperature" -> "Real"]]; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.950920119797556*^9, 3.950920158588812*^9, {3.950920191526558*^9, 
   3.95092020764625*^9}, 3.9509203012766495`*^9, 3.9509203475350437`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"81eb01a1-f6a2-7f42-86cc-b9b6c56262df"]
}, {2}]],

Cell[CellGroupData[{

Cell["Your Turn", "Subsubsection",
 CellChangeTimes->{{3.9509213651991825`*^9, 
  3.9509213682157555`*^9}},ExpressionUUID->"975b53b2-2c42-3245-be1b-\
2f04f7bd2b24"],

Cell["\<\
Look at the model\[CloseCurlyQuote]s structure to find the name of the layer \
preceding the SoftmaxLayer named \[OpenCurlyDoubleQuote]probabilities\
\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.950957488913952*^9, 
  3.950957522538536*^9}},ExpressionUUID->"784bf5d8-ee30-b343-a5d0-\
899657f4c097"],

Cell[CellGroupData[{

Cell[BoxData["languagemodel"], "Input",
 CellChangeTimes->{{3.95092137300074*^9, 3.9509213769230976`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"fc75bd61-8985-8843-92ac-56f435d7af25"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {
                    10.869015226326882`, {0., 10.869015226326882`}}], 
                   Appearance -> None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                  GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                  ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"string\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"class\"", "SummaryItem"], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"], 
                    ImageSizeCache -> {
                    10.869015226326882`, {0., 10.869015226326882`}}], 
                   Appearance -> None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}, Background -> 
                  GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                  ImagePadding -> {{0, 1}, {1, 0}}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{-2, 30}, {-2, 30}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "Weights"|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    "decoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "last" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "classifier" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50257}, "$OutputSize" -> 50257, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>|>, 
                    "probabilities" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Type" -> 
                    "Function", "Function" -> Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[75402943]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> False, "$Version" -> 
                    "14.1.2", 
                    "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\" t\"", "\" a\"", 
                    Skeleton[50254], "\"\""}, "InputDepth" -> 1, "Dimensions" -> 
                    50257, "$Rank" -> 0, "$Version" -> "14.1.2", "Multilabel" -> 
                    False|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"decoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "13", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"last\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classifier\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"probabilities\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    ImageSizeCache -> {
                    344.07679951336644`, {52.98724459897726, 
                    57.63665866147726}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 503309456, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 503309456, 
            6843615156671593097256010839510399070401518698098836839648, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<5>]"& )],
  False,
  BoxID -> 6843615156671593097256010839510399070401518698098836839648,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9509213778913307`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"dcfe1721-d456-9649-b014-face76b4cd91"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 ButtonBox["NetTake",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/NetTake.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/NetTake.html"],
 " to obtain the network up to that layer:"
}], "Text",
 CellChangeTimes->{{3.950957526145891*^9, 
  3.950957565275421*^9}},ExpressionUUID->"e659471f-3a33-0840-8912-\
63fb1b46c38b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logitmodel", "=", 
  RowBox[{"NetTake", "[", 
   RowBox[{"languagemodel", ",", "\"\<classifier\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.950921384301241*^9, 3.9509214009509277`*^9}, {
  3.950921460441204*^9, 3.950921463503174*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"09df068b-93f0-f240-8fb9-20ef861c701b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"string\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "Weights"|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    "decoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "last" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "classifier" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50257}, "$OutputSize" -> 50257, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Type" -> 
                    "Function", "Function" -> Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[75402943]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> False, "$Version" -> 
                    "14.1.2", 
                    "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50257}, NeuralNetworks`RealT]|>|>,
                     NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"decoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "13", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"last\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classifier\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 501165432, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 501165432, 
            6843615156671593097256010839510399070438412186255095390496, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<4>]"& )],
  False,
  BoxID -> 6843615156671593097256010839510399070438412186255095390496,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9509214021465225`*^9, 3.950921465943407*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"35f61a6e-e6ec-6f43-b9e4-624c83370767"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 ButtonBox["NetExtract",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/NetExtract.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/NetExtract.html"],
 " to get the class labels for the tokenizer and decoder:"
}], "Text",
 CellChangeTimes->{{3.9509576460573063`*^9, 
  3.950957694968937*^9}},ExpressionUUID->"15af9b70-9dad-9d46-8532-\
1d93d260106d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"labels", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"NetExtract", "[", 
     RowBox[{"languagemodel", ",", 
      RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}], "]"}], ",", 
    "\"\<Labels\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.95092202394063*^9, 3.9509220569682617`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"2573e766-9885-5f44-8419-1bec0b204cec"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
        "\" t\"", ",", "\" a\"", ",", "\"he\"", ",", "\"in\"", ",", "\"re\"", 
         ",", "\"on\"", ",", "\" the\"", ",", "\"er\"", ",", "\" s\"", ",", 
         "\"at\"", ",", "\" w\"", ",", "\" o\"", ",", "\"en\"", ",", "\" c\"",
          ",", "\"it\"", ",", "\"is\"", ",", "\"an\"", ",", "\"or\"", ",", 
         "\"es\"", ",", "\" b\"", ",", "\"ed\"", ",", "\" f\"", ",", 
         "\"ing\"", ",", "\" p\"", ",", "\"ou\"", ",", "\" an\"", ",", 
         "\"al\"", ",", "\"ar\"", ",", "\" to\"", ",", "\" m\"", ",", 
         "\" of\"", ",", "\" in\"", ",", "\" d\"", ",", "\" h\"", ",", 
         "\" and\"", ",", "\"ic\"", ",", "\"as\"", ",", "\"le\"", ",", 
         "\" th\"", ",", "\"ion\"", ",", "\"om\"", ",", "\"ll\"", ",", 
         "\"ent\"", ",", "\" n\"", ",", "\" l\"", ",", "\"st\"", ",", 
         "\" re\"", ",", "\"ve\"", ",", "\" e\"", ",", "\"ro\"", ",", 
         "\"ly\"", ",", "\" be\"", ",", "\" g\"", ",", "\" T\"", ",", 
         "\"ct\"", ",", "\" S\"", ",", "\"id\"", ",", "\"ot\"", ",", "\" I\"",
          ",", "\"ut\"", ",", "\"et\"", ",", 
         TemplateBox[{"50135"}, "OutputSizeLimit`Skeleton"], ",", "\"]\"", 
         ",", "\"\\\\\"", ",", "\"[\"", ",", "\"Z\"", ",", "\"Y\"", ",", 
         "\"X\"", ",", "\"W\"", ",", "\"V\"", ",", "\"U\"", ",", "\"T\"", ",",
          "\"S\"", ",", "\"R\"", ",", "\"Q\"", ",", "\"P\"", ",", "\"O\"", 
         ",", "\"N\"", ",", "\"M\"", ",", "\"L\"", ",", "\"K\"", ",", "\"J\"",
          ",", "\"I\"", ",", "\"H\"", ",", "\"G\"", ",", "\"F\"", ",", 
         "\"E\"", ",", "\"D\"", ",", "\"C\"", ",", "\"B\"", ",", "\"A\"", ",",
          "\"@\"", ",", "\"?\"", ",", "\">\"", ",", "\"=\"", ",", "\"<\"", 
         ",", "\";\"", ",", "\":\"", ",", "\"9\"", ",", "\"8\"", ",", "\"7\"",
          ",", "\"6\"", ",", "\"5\"", ",", "\"4\"", ",", "\"3\"", ",", 
         "\"2\"", ",", "\"1\"", ",", "\"0\"", ",", "\"/\"", ",", "\".\"", ",",
          "\"-\"", ",", "\",\"", ",", "\"+\"", ",", "\"*\"", ",", "\")\"", 
         ",", "\"(\"", ",", "\"'\"", ",", "\"&\"", ",", "\"%\"", ",", "\"$\"",
          ",", "\"#\"", ",", "\"\\\"\"", ",", "\"\""}], "}"}], Short[#, 8]& ],
    "line" -> 155, "sessionID" -> 20111577389673104360, "byteCount" -> 
   2140080, "size" -> 8, "stored" -> False, "expr" -> Missing["NotStored"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.9509220593170967`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"6ee12e1a-d5d2-5541-8c10-3fe58cf5b206"]
}, Open  ]],

Cell["Compute the logits for possible continuations of \
\[OpenCurlyDoubleQuote]2 + 2 =\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.95095771467346*^9, 
  3.950957755624962*^9}},ExpressionUUID->"fc123cff-a79e-8d4a-8003-\
9e23e02d2d87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"energies", "=", 
  RowBox[{"-", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"labels", "->", 
     RowBox[{"logitmodel", "[", "\"\<2 + 2 =\>\"", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.950922138181593*^9, 3.9509222036559753`*^9}, {
   3.9509223229629974`*^9, 3.9509223262399006`*^9}, 3.950922528865036*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"ebc0075d-c5c9-1b47-83bd-08a8cacb3138"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{"\" t\"", "\[Rule]", "96.01850891113281`"}], ",", 
         RowBox[{"\" a\"", "\[Rule]", "95.17823791503906`"}], ",", 
         RowBox[{"\"he\"", "\[Rule]", "102.36668395996094`"}], ",", 
         RowBox[{"\"in\"", "\[Rule]", "100.25406646728516`"}], ",", 
         RowBox[{"\"re\"", "\[Rule]", "101.66879272460938`"}], ",", 
         RowBox[{"\"on\"", "\[Rule]", "100.6705093383789`"}], ",", 
         RowBox[{"\" the\"", "\[Rule]", "95.15149688720703`"}], ",", 
         RowBox[{"\"er\"", "\[Rule]", "101.69841766357422`"}], ",", 
         RowBox[{"\" s\"", "\[Rule]", "95.92406463623047`"}], ",", 
         RowBox[{"\"at\"", "\[Rule]", "101.45600891113281`"}], ",", 
         RowBox[{"\" w\"", "\[Rule]", "96.42710876464844`"}], ",", 
         RowBox[{"\" o\"", "\[Rule]", "96.6253662109375`"}], ",", 
         TemplateBox[{"50182"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"\"+\"", "\[Rule]", "97.4498062133789`"}], ",", 
         RowBox[{"\"*\"", "\[Rule]", "98.06895446777344`"}], ",", 
         RowBox[{"\")\"", "\[Rule]", "97.9804458618164`"}], ",", 
         RowBox[{"\"(\"", "\[Rule]", "97.02053833007812`"}], ",", 
         RowBox[{"\"'\"", "\[Rule]", "99.8353042602539`"}], ",", 
         RowBox[{"\"&\"", "\[Rule]", "98.77291107177734`"}], ",", 
         RowBox[{"\"%\"", "\[Rule]", "97.58586120605469`"}], ",", 
         RowBox[{"\"$\"", "\[Rule]", "98.73824310302734`"}], ",", 
         RowBox[{"\"#\"", "\[Rule]", "99.997314453125`"}], ",", 
         RowBox[{"\"\\\"\"", "\[Rule]", "99.0201416015625`"}], ",", 
         RowBox[{"\"\"", "\[Rule]", "98.80863952636719`"}]}], 
       "\[RightAssociation]"}], Short[#, 8]& ], "line" -> 165, "sessionID" -> 
   20111577389673104360, "byteCount" -> 7078304, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.9509221563205605`*^9, 3.9509222074186287`*^9}, 
   3.9509223272975464`*^9, 3.9509225301526184`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"15887520-5b22-7c4a-98a8-7b8742c00b4c"]
}, Open  ]],

Cell["Plot the result for the 10 \[OpenCurlyDoubleQuote]lowest energy\
\[CloseCurlyDoubleQuote] continuations:", "Text",
 CellChangeTimes->{{3.950957761512642*^9, 
  3.950957807866558*^9}},ExpressionUUID->"ee9f8eec-446d-8e4b-8df6-\
3dbefd92effb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", "=", 
     RowBox[{"TakeSmallest", "[", 
      RowBox[{"energies", ",", "10"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"KeyValueMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Callout", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".25"}], ",", "#2"}], "}"}], ",", "#1"}], "]"}], 
         "}"}], "&"}], ",", "data"}], "]"}], ",", 
     RowBox[{"Axes", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}]}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "\"\<- logits\>\""}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", "\"\<\[FilledRightTriangle]\>\""}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9509227738372307`*^9, 3.950922831016836*^9}, {
  3.950922878514656*^9, 3.950922905368189*^9}, {3.9509229487325687`*^9, 
  3.950923199009264*^9}, {3.9509232305949306`*^9, 3.9509232894272823`*^9}, {
  3.9509234405071144`*^9, 3.9509234615537376`*^9}, {3.95092350020191*^9, 
  3.950923505497841*^9}, {3.950923650324465*^9, 3.9509236622971745`*^9}, {
  3.9509237109466476`*^9, 3.950923715067137*^9}, {3.950923771651043*^9, 
  3.95092377497101*^9}, {3.9509676711489334`*^9, 3.950967690147808*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"fc45d042-70f8-9242-8edd-c87094c9e834"],

Cell[BoxData[
 GraphicsBox[{{}, {{
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 90.95780944824219}}, {{-0.25, 
        90.95780944824219}}}]},
      Annotation[#, "Charting`Private`Tag#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 91.06431579589844}}, {{-0.25, 
        91.06431579589844}}}]},
      Annotation[#, "Charting`Private`Tag#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 91.14959716796875}}, {{-0.25, 
        91.14959716796875}}}]},
      Annotation[#, "Charting`Private`Tag#3"]& ], 
     TagBox[
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 91.26148986816406}}, {{-0.25, 
        91.26148986816406}}}]},
      Annotation[#, "Charting`Private`Tag#4"]& ], 
     TagBox[
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 91.57514953613281}}, {{-0.25, 
        91.57514953613281}}}]},
      Annotation[#, "Charting`Private`Tag#5"]& ], 
     TagBox[
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 92.10576629638672}}, {{-0.25, 
        92.10576629638672}}}]},
      Annotation[#, "Charting`Private`Tag#6"]& ], 
     TagBox[
      {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 92.18192291259766}}, {{-0.25, 
        92.18192291259766}}}]},
      Annotation[#, "Charting`Private`Tag#7"]& ], 
     TagBox[
      {RGBColor[1, 0.75, 0], PointSize[0.012833333333333334`], 
       AbsoluteThickness[2], GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 92.56060791015625}}, {{-0.25, 
        92.56060791015625}}}]},
      Annotation[#, "Charting`Private`Tag#8"]& ], 
     TagBox[
      {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
       0.012833333333333334`], AbsoluteThickness[2], 
       GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 92.67372131347656}}, {{-0.25, 
        92.67372131347656}}}]},
      Annotation[#, "Charting`Private`Tag#9"]& ], 
     TagBox[
      {RGBColor[0.571589, 0.586483, 0.], PointSize[0.012833333333333334`], 
       AbsoluteThickness[2], GeometricTransformationBox[
        TagBox[InsetBox["\[FilledRightTriangle]", {0., 0.}],
         "InsetString"], {{{-0.25, 92.84005737304688}}, {{-0.25, 
        92.84005737304688}}}]},
      Annotation[#, "Charting`Private`Tag#10"]& ]}, {
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 90.95780944824219}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {1, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 90.95780944824219}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {1, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.06431579589844}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {2, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.06431579589844}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {2, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.14959716796875}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {3, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.14959716796875}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {3, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.26148986816406}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {4, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.26148986816406}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {4, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.57514953613281}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {5, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 91.57514953613281}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {5, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.10576629638672}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {6, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.10576629638672}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {6, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.18192291259766}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {7, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.18192291259766}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {7, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.56060791015625}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {8, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.56060791015625}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {8, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.67372131347656}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {9, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.67372131347656}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {9, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.84005737304688}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {10, 1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{-0.25, 92.84005737304688}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {10, 1}}]& ]}}, {{{{}, {
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 
             2.121320343559643}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{5.656854249492381, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{7.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 
             2.121320343559643}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{5.656854249492381, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{7.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 92.85872204838806}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{28.656854249492376`, 
             12.856854249492383`}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{28.656854249492383`, 
             0.8568542494923825}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{9.656854249492381, 
             0.856854249492379}, {-0.2473532600343087, 92.85872204838806}], 
            Offset[{9.656854249492378, 
             12.856854249492379`}, {-0.2473532600343087, 
             92.85872204838806}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 10\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{19.15685424949238, 6.856854249492381}, \
{-0.2473532600343087, 92.85872204838806}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{8., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{10., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.67372131347656}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{8., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{10., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.67372131347656}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.67372131347656}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{26., 5.000000000000002}, {-0.24625694444444446`, 
             92.67372131347656}], 
            Offset[{26., -4.999999999999998}, {-0.24625694444444446`, 
             92.67372131347656}], 
            Offset[{12., -5.000000000000002}, {-0.24625694444444446`, 
             92.67372131347656}], 
            Offset[{12., 4.999999999999998}, {-0.24625694444444446`, 
             92.67372131347656}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" +\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{19., 0.}, {-0.24625694444444446, 92.67372131347656}], 
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.121320343559643, -2.1213203435596424`}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.121320343559643, -2.1213203435596424`}, \
{-0.2526467399656913, 92.54194323481507}], 
            
            Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.54194323481507}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492385, -0.8568542494923772}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-9.656854249492381, -12.856854249492377`}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-23.656854249492383`, -12.85685424949238}, \
{-0.2526467399656913, 92.54194323481507}], 
            Offset[{-23.656854249492383`, -0.8568542494923808}, \
{-0.2526467399656913, 92.54194323481507}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 6\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-16.656854249492383, -6.856854249492379}, \
{-0.2526467399656913, 92.54194323481507}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{8., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{10., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.18192291259766}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{8., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{10., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.18192291259766}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 92.18192291259766}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{24., 4.000000000000002}, {-0.24625694444444446`, 
             92.18192291259766}], 
            Offset[{24., -3.9999999999999987`}, {-0.24625694444444446`, 
             92.18192291259766}], 
            Offset[{12., -4.000000000000002}, {-0.24625694444444446`, 
             92.18192291259766}], 
            Offset[{12., 3.9999999999999987`}, {-0.24625694444444446`, 
             92.18192291259766}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" -\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{18., 0.}, {-0.24625694444444446, 92.18192291259766}], 
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.121320343559643, -2.1213203435596424`}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}], 
            
            Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.121320343559643, -2.1213203435596424`}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 92.08710162104553}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492385, -0.8568542494923772}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-9.656854249492381, -12.856854249492377`}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-23.656854249492383`, -12.85685424949238}, \
{-0.2526467399656913, 92.08710162104553}], 
            Offset[{-23.656854249492383`, -0.8568542494923808}, \
{-0.2526467399656913, 92.08710162104553}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 5\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-16.656854249492383, -6.856854249492379}, \
{-0.2526467399656913, 92.08710162104553}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 
             2.121320343559643}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{5.656854249492381, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{7.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 
             2.121320343559643}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{5.656854249492381, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{7.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.593814211474}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{23.656854249492376`, 
             12.856854249492383`}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{23.656854249492383`, 
             0.8568542494923825}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{9.656854249492381, 
             0.856854249492379}, {-0.2473532600343087, 91.593814211474}], 
            Offset[{9.656854249492378, 
             12.856854249492379`}, {-0.2473532600343087, 91.593814211474}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 4\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{16.65685424949238, 6.856854249492381}, \
{-0.2473532600343087, 91.593814211474}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 
             2.121320343559643}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{5.656854249492381, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{7.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 
             2.121320343559643}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{5.656854249492381, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{7.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{9.65685424949238, 
             5.656854249492381}, {-0.2473532600343087, 91.28015454350525}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{23.656854249492376`, 
             12.856854249492383`}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{23.656854249492383`, 
             0.8568542494923825}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{9.656854249492381, 
             0.856854249492379}, {-0.2473532600343087, 91.28015454350525}], 
            Offset[{9.656854249492378, 
             12.856854249492379`}, {-0.2473532600343087, 
             91.28015454350525}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 0\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{16.65685424949238, 6.856854249492381}, \
{-0.2473532600343087, 91.28015454350525}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-3., 3.6739403974420594`*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-8., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-10., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-12., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-12., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-3., 3.6739403974420594`*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-8., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-10., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-12., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-12., 9.797174393178826*^-16}, {-0.25374305555555554`, 
             91.14959716796875}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-12.000000000000002`, 
             6.000000000000003}, {-0.25374305555555554`, 91.14959716796875}], 
            Offset[{-11.999999999999998`, -5.999999999999997}, \
{-0.25374305555555554`, 91.14959716796875}], 
            Offset[{-26., -6.000000000000001}, {-0.25374305555555554`, 
             91.14959716796875}], 
            Offset[{-26., 5.999999999999999}, {-0.25374305555555554`, 
             91.14959716796875}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 2\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-19., 9.797174393178826*^-16}, \
{-0.25374305555555554, 91.14959716796875}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{8., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{10., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 91.06431579589844}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{8., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{10., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 91.06431579589844}], 
            Offset[{12., 0.}, {-0.24625694444444446`, 91.06431579589844}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{26., 6.000000000000002}, {-0.24625694444444446`, 
             91.06431579589844}], 
            Offset[{26., -5.999999999999998}, {-0.24625694444444446`, 
             91.06431579589844}], 
            Offset[{12.000000000000002`, -6.000000000000002}, \
{-0.24625694444444446`, 91.06431579589844}], 
            Offset[{11.999999999999998`, 
             5.999999999999998}, {-0.24625694444444446`, 
             91.06431579589844}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 1\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{19., 0.}, {-0.24625694444444446, 91.06431579589844}], 
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.121320343559643, -2.1213203435596424`}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.121320343559643, -2.1213203435596424`}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-5.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-7.6568542494923815`, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-9.656854249492381, -5.65685424949238}, \
{-0.2526467399656913, 90.939144772901}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492385, -0.8568542494923772}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-9.656854249492381, -12.856854249492377`}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-23.656854249492383`, -12.85685424949238}, \
{-0.2526467399656913, 90.939144772901}], 
            Offset[{-23.656854249492383`, -0.8568542494923808}, \
{-0.2526467399656913, 90.939144772901}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\" 3\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-16.656854249492383, -6.856854249492379}, \
{-0.2526467399656913, 90.939144772901}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, 
    FormBox[
     TagBox["\"- logits\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 90.85324011908658},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, All}, {All, All}},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0}, {90.85324011908658, 92.84005737304688}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.08]}, {
     Scaled[0.05], 
     Scaled[0.12944271909999158`]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9509228316967583`*^9, {3.950922879172552*^9, 3.9509229059101315`*^9}, {
   3.9509230052872467`*^9, 3.9509230850609093`*^9}, {3.950923116890438*^9, 
   3.950923199628195*^9}, {3.9509232316574764`*^9, 3.9509232900580482`*^9}, 
   3.950923506035101*^9, 3.9509236631919785`*^9, {3.9509237118486824`*^9, 
   3.950923715711914*^9}, {3.9509237723465767`*^9, 3.950923775570368*^9}, 
   3.95092525533074*^9, 3.950967691647705*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"85a4e752-0331-b849-ad98-789544e2a2bc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformer Architecture and Attention", "Subsection",
 CellChangeTimes->{{3.9509578524415493`*^9, 
  3.9509578581464825`*^9}},ExpressionUUID->"4df911e6-3d4b-d54c-98a3-\
7e39bcef0746"],

Cell[TextData[{
 "You now know what a language model ",
 StyleBox["does",
  FontSlant->"Italic"],
 ", but how does one ",
 StyleBox["work",
  FontSlant->"Italic"],
 "?"
}], "Text",
 CellChangeTimes->{{3.9509579662176037`*^9, 
  3.9509579920520954`*^9}},ExpressionUUID->"2d3c9d40-51c8-d04f-8820-\
635e5cfa18f5"],

Cell["\<\
The process is operationally a bit complicated but conceptually simple as \
seen in this summary graphic:\
\>", "Text",
 CellChangeTimes->{{3.9509580107794647`*^9, 
  3.950958030154228*^9}},ExpressionUUID->"9e2f7b62-9612-8344-a49d-\
b2084241e9a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"languagemodel", ",", "\"\<SummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.95095803223711*^9, 3.950958046154701*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"b1d7076e-5a33-8547-9f46-92c821aec04b"],

Cell[BoxData[
 GraphicsBox[{{
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -9}, {-5.999999999999998, 1.6076938217470707*^-7}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"embedding\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-4.999999999999998, 
         1.339744851455892*^-7}], 
        Offset[{0, -20.5}, {-4.999999999999998, 1.339744851455892*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"classifier\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-1.9999999999999993`, 
         5.3589794058235685`*^-8}], 
        Offset[{0, -20.5}, {-1.9999999999999993`, 5.3589794058235685`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"probabili..\"\>",
         "\"probabilities\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "probabilities", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-41, 2]}, {-0.9999999999999997, 
         2.6794897029117842`*^-8}], 
        Offset[{0, -20.5}, {-0.9999999999999997, 2.6794897029117842`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"decoder\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-3.9999999999999987`, 
         1.0717958811647137`*^-7}], 
        Offset[{0, -20.5}, {-3.9999999999999987`, 1.0717958811647137`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"last\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-2.999999999999999, 
         8.038469108735353*^-8}], 
        Offset[{0, -20.5}, {-2.999999999999999, 8.038469108735353*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Output\"\>", Offset[{0, -9}, {0., 0.}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->RGBColor[
      0.4658823529411765, 0.6176470588235294, 0.6494117647058824]], 
    StyleBox[{InsetBox[
       StyleBox[
        StyleBox["\<\"n\"\>",
         StripOnInput->False,
         FontSlant->Italic],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294277*^-7, 5.4999999999999964}, \
{-5.4499999999999975, 1.4603218880869225*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716865`*^-8}], InsetBox[
       StyleBox["\<\"50257\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.499999999999996}, \
{-1.4499999999999993, 3.885260069222087*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.4999999999999964}, \
{-3.449999999999999, 9.244239475045655*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.4999999999999964}, \
{-4.449999999999998, 1.192372917795744*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox["\<\"768\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.143591762329427*^-7, 5.4999999999999964}, \
{-2.4499999999999993, 6.564749772133872*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439567871685*^-8}], InsetBox[
       StyleBox["\<\"50257\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.499999999999996}, \
{-0.4499999999999998, 1.2057703663103027*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678716846`*^-8}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}, 
   {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.999999999999998, 
       1.6076938217470707`*^-7}, {-4.999999999999998, 1.339744851455892*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-1.9999999999999993`, 
       5.3589794058235685`*^-8}, {-0.9999999999999997, 
       2.6794897029117842`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.9999999999999987`, 
       1.0717958811647137`*^-7}, {-2.999999999999999, 8.038469108735353*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-4.999999999999998, 
       1.339744851455892*^-7}, {-3.9999999999999987`, 
       1.0717958811647137`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-2.999999999999999, 
       8.038469108735353*^-8}, {-1.9999999999999993`, 
       5.3589794058235685`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 0.}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, {
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-5.4499999999999975, 1.4603218880869225*^-7}, {-0.25, 0}, Offset[10], {
       1., -3.897439567871689*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-1.4499999999999993, 3.885260069222087*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.8974395678716865`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-3.449999999999999, 9.244239475045655*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439567871685*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-4.449999999999998, 1.192372917795744*^-7}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439567871685*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-2.4499999999999993, 6.564749772133872*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999998, -3.897439567871687*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-0.4499999999999998, 1.2057703663103027*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.8974395678716865`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
        Offset[{2., 2.}, {0., 0.}]]}, InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[
          0.817375, 0.31808499999999995`, 0.3521274999999998], Thickness[
          0.03]}], FaceForm[RGBColor[0.9939125, 0.9772695, 0.97840425]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 20.}, {
            19.903200149536133`, 16.}, {17.903200149536133`, 14.}, {
            13.903200149536133`, 14.}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
            9.903200149536133, 14.}, {7.903200149536133, 16.}, {
            7.903200149536133, 20.}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
            9.903200149536133, 14.}, {7.903200149536133, 12.}, {
            7.903200149536133, 8.}}},
            CurveClosed->{0}]}, 
          {FaceForm[{Hue[
           0.9744623655913979, 0.4881889763779528, 0.996078431372549], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {18., 21.}}}]}, 
          {FaceForm[{RGBColor[0.7565, 0.09078, 0.1361699999999998], Opacity[
           1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
            0}}}, {{{12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {12., 
            16.}}}]}, 
          {FaceForm[{Hue[0.033923303834808266`, 0.44313725490196076`, 1.], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6., 21.}}}]}, 
          {FaceForm[{Hue[0.04791666666666667, 0.6274509803921569, 1.], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 10.}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-4.999999999999998, 1.339744851455892*^-7}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[
          0.817375, 0.31808499999999995`, 0.3521274999999998], Thickness[
          0.03]}], FaceForm[RGBColor[0.9939125, 0.9772695, 0.97840425]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {7.250000953674316, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {14.000000953674316`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {20.750001907348633`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {7.249997138977051, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {13.999998092651367`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {20.749998092651367`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7565, 0.09078, 0.1361699999999998], Opacity[
           1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
            4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
            "]]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-1.9999999999999993, 5.3589794058235685*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Thickness[0.02903571512017931], Opacity[1.], CapForm["Round"], 
           JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{8.375, 15.344499588012695`}, {
            19.625, 15.344499588012695`}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            13.945324897766113`, 6.005837440490723}, {8.312512397766113, 
            6.005837440490723}, {8.312512397766113, 6.517556190490723}, {
            10.984387397766113`, 9.669899940490723}, {8.824231147766113, 
            12.517556190490723`}, {8.824231147766113, 13.048806190490723`}, {
            13.625012397766113`, 13.048806190490723`}, {13.679699897766113`, 
            11.224587440490723`}, {12.945324897766113`, 
            11.224587440490723`}, {12.855481147766113`, 
            12.341774940490723`}, {9.921887397766113, 12.341774940490723`}, {
            11.937512397766113`, 9.654274940490723}, {9.464856147766113, 
            6.712868690490723}, {13.167981147766113`, 6.712868690490723}, {
            13.222668647766113`, 7.990212440490723}, {13.945324897766113`, 
            7.990212440490723}, {13.945324897766113`, 6.005837440490723}}}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQHGj8bOABphdMCSiDa2cnOEERP6dygAqLzToaA
+QcEjoP5MwOywfwtj6+A+S/vNoH5Na23wHz1FzPBfJMl98H8Wxs2gPlLtj0C
82u+HUPhF3z5jcK3O6hhBKJ5PC6A+VnzfMH8D29Xg/kqe4vA/CuT28H8E7oT
wPwjaaFg/iPDZUYQ94mA+b9M90D5V5RB9J/uU2A+l2wnmP/G+CKYv6ffEMy/
c/s6mB9VfxMcHg7iEP4F20owny35nBFyeKGEHwBPclvI
             "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQSPY3gNHID0gcZiGRAtVvRTH0QHzDgD5i+59wDM
v8FiIguiXX6eB/M7zq4C879M2w/mS0xQkAPRBde2gPkbaueC+WesNoD5Pzrl
5UG0yvzVYL7DtIVgvoXSGjA/67qQAojWOLUJzP/zPgzMlyjaCeZP4pgN5ves
PwzmT+C4DeZn/L8A5vMXiyuC6Ckb34H5JybOAfOXqPOD/NdgtkReCcS3f6MP
9m/DhoVg/u0NAWD+qT3KyiB1TeU1YL7St+lg/tp/m8D8Off/gfio4QUAM1NU
yQ==
             "], CompressedData["
1:eJxV1HtIU1EcB/CLqdVAHUtzPtLNJ77mVHpgMTcKm0tq1KAhNWZoTIvSzNAs
d+2BLkVNLCaa0yIxkVBTjLQcaZkIaZuvSG2RxKQSnZBCSnm+1z/m4PLlwz33
nN/5ncP45y6fTHegKOrUxkNy41d2nI4TbyQ7Z5JHslNbAieF8vgkIzMq4GpV
BkwnPyCmbdwX8Fh0LbFRJF+Dp50NGP+IlRhAMmhXI8ZPvCmHs/yf4L1bziQ8
lvIY5tT7Bdp/P5uQBs91YH6q6dszWJlYDTtm/4IHHHTw4u+IIJLu6fmwpugO
rA9Og5UKEyw/kgQPnPcIxn74Ali6poS5P1xh3nAlzHb7GYvvzL1wef4grFfN
wzadAZY2sUJIyvpzYGULD97dcxTOer4vhKnPC95hk8ARImuMvbk9xfY2drVE
w9LQzfkqLUKSU+4zZH36Wu59WKmtQT16+TFYYT4Ea/musJ71Hvv/MNcYTdIq
OQGnFR6Ehatv0c+XZVYB+tLGh3l+D4lpk4bGeWnClcTi0woTzlvfLhAw5+kJ
j/Y4CZh61bhPFutKFMk8WaY/ydYuR7yf+hzpR7LEiQPn5S75os9/42EjNeuD
c/amGRcteyMPvINHHXbC9LZQ1G9pk3uRPLP+lPHdIS7J2gIO9k+lHoY7FKkw
PfzPk+SSrs/e4uVO5xg70+ulMlg9GIbva+SlsLDvJhxYNQyzuz/Blfnbcb5U
mQz1fLwtgoUiK1w1kgs3rBWj/sI/TXCbVor91hWY4GZzhC+zzjo8GsXeQzLZ
KwD3U53ojv5ppAnM/fXcz/TXfAHjV3UGWLaQAludv2K8JSYR1tiE8MX6KGa8
So/5Lw25x26ui/UXVKvYn7H1Ojz9ZZLph48LLPHshql7BtQf9LoKluuTiemr
skymP/EceGBSwsw3PkH2L15heTAOe0VscZn7LrQzHZkxssVns3s2z7MfDhc1
ww0j495M/dWw/Mg8PD9zC16ccUB9nPgrsLouwIc5z2G4t6Id93V17404e2/5
f/wP099AUQ==
             "]}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQIXXLQdgNSCyufGIJot8BaYfyvC3BREx8Sz64Do
gjlOYP6mXBMw/1WrJ5gf1JEM5p8L8wHzz82ZCOZrPfMD80309oP5SfkBYH7F
ztco/IStobrI/D9+68F8MQt3MD+E8yeYz8FtCuafcHPWA9G/7iqB+QIadWB+
0XFOMN/FYJUexH0vTUB0icU1KP8kmF/x5BOYP3XRYjA/woRBH0S/u10O5lu0
8IL5ey97g/kMv7nB/B+bpMH8nkm/9JDDCyX8AJxVUUc=
             "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQRubRWaDkC64ctvQxA9zS4czFexEjIC06vtwHw3
UR0w/8hRXTC/6LgnmF+SLAvmi1mkg/kfFgmB+TXFbWC+DzsfmN/3bRmYvySb
E8xfUHkczN/xDsI/Wv8CzF8xTQDM5+vhMgbRM+zEwfzIGTpgPk+NIpgfMcMH
zH9xWg/Eb5h+NgvMF6nzAct/iVkL5p+QrgHxHbSfvQPz/y3ZC5YPeKNvAqLN
9P6D+aWfCsD81t1hWiBakX81mH/75GEw/17zPTAfJbwAZcRNfQ==
             "], CompressedData["
1:eJxV1GtIk1EYB/CXpaKIWGyEknhBbdN539SRImulrHVxeYEUK6+FzjnK/GBe
mLrSyspMbKLYupCWYiqalxKFhZfMkLygNclshJqm1JIyyzz/tw9zMP78OHvP
+5znOcwpURGRwqAoKnLrS3Lr85rv7SPcSvWIhEfSkBJIrGxjK+D08BCsx2pv
w31+B4mFVzSdMGu3hDjeO3gGtls+iudP2TL4xMm/wvH7nMy9cLNpBNbvjEhg
1v7j2N82KYNv9Dy1ybsFu1Rhf+qTSRus9jgAlx+ZgE0WUC9lbvkDjjrMgV9G
OfmTnLJkwsEhYtgxetWb5PmBVFhp3Q3zy6/BzeocWJNdB2sWeXBnXg9c07vk
RTJOOwYnz9bA/LN6mBUZCgenrsCNomVPkmLZOlxfWQazrKgAkpNir21uFsk9
jKz84tTDJW5j/99vyR7OrR2B5R1Kd5Ivxhro+uUGN5LdeXlwvvVFOM5WBItb
NjnoW7sZrJdUwZyyPvRPEBMGS5cUfPr839lkftliB3h+rZ1YExQyiHnb5Jey
6XmmwdKSJDZdrzUc3x4NNz3q8iPpUZgIX5akweZvFXDGuT3w6IAaFlZM+pJU
fZ6BlYZqWGjqzKHnmwBToypYLOTBuqEdOG9J1i74mbbQjT7PCu6BPssR/Vo1
+wAnzuqMrTwTIOMar+fov8HzlxbgVvkFzEdX9BfuXzXA4wVMvE/Tm4557uzw
he3G38E1zjHwQ9kh3A8BswDO7WqAN3gtcKeWgfu2br4Iz0piYJWDM/pjs3kP
rndNhqUndfDcdCM8lemP/W6s9cOsx0z41UQlLPRZRD1PpDL4hEUX/IYbCsed
Lvakz2dP++oxWNj7B/UIVFbwfOwczPg9jPOXrfXDg2FFsMu+Vjg1wQ+uuP8A
tsj9iH4qhyqIlRlzxbRrrxP3VVe4Gpuart1wN3bQ03F3ep434QlxE/yzGPuR
+mGXlCo4oiQJLh2+S/dfKII5z+t86Xka4K/vA3FfBXZcH2Nv+3/8B3j6SDI=

             "]}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-0.9999999999999997, 2.6794897029117842*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {FaceForm[{RGBColor[
           0.6274509803921569, 0.8156862745098039, 0.49411764705882355`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6.221999645233154, 18.73400115966797}, {9.045999526977539, 
            18.73400115966797}, {9.045999526977539, 8.734001159667969}, {
            6.221999645233154, 8.734001159667969}, {6.221999645233154, 
            18.73400115966797}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            12.81100082397461, 18.73400115966797}, {15.635000228881836`, 
            18.73400115966797}, {15.635000228881836`, 8.734001159667969}, {
            12.81100082397461, 8.734001159667969}, {12.81100082397461, 
            18.73400115966797}}}]}, 
          {FaceForm[{Hue[0.5247747747747747, 0.43, 0.86], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            19.39900016784668, 18.73400115966797}, {22.222999572753906`, 
            18.73400115966797}, {22.222999572753906`, 8.734001159667969}, {
            19.39900016784668, 8.734001159667969}, {19.39900016784668, 
            18.73400115966797}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            9.98699951171875, 15.73439884185791}, {11.868999481201172`, 
            13.73439884185791}, {9.98699951171875, 11.73439884185791}, {
            9.98699951171875, 15.73439884185791}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            16.575298309326172`, 15.73439884185791}, {18.457298278808594`, 
            13.73439884185791}, {16.575298309326172`, 11.73439884185791}, {
            16.575298309326172`, 15.73439884185791}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-3.9999999999999987, 1.0717958811647137*^-7}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6.486000061035156, 15.5}, {9.486000061035156, 15.5}, {
            9.486000061035156, 12.5}, {6.486000061035156, 12.5}, {
            6.486000061035156, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            9.48599910736084, 15.5}, {12.48599910736084, 15.5}, {
            12.48599910736084, 12.5}, {9.48599910736084, 12.5}, {
            9.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            12.48599910736084, 15.5}, {15.48599910736084, 15.5}, {
            15.48599910736084, 12.5}, {12.48599910736084, 12.5}, {
            12.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            15.48599910736084, 15.5}, {18.486000061035156`, 15.5}, {
            18.486000061035156`, 12.5}, {15.48599910736084, 12.5}, {
            15.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.], Thickness[0.03571428571428571], CapForm["Butt"], 
           JoinForm[{"Miter", 1.}]}], FaceForm[{RGBColor[
           0.5, 0.73275, 0.67689], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            18.486000061035156`, 15.5}, {21.486000061035156`, 15.5}, {
            21.486000061035156`, 12.5}, {18.486000061035156`, 12.5}, {
            18.486000061035156`, 15.5}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-2.999999999999999, 8.038469108735353*^-8}], 
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
     FontSize->10]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{35., 35.}, {35., 25.}},
  ImageSize->{539.9999999999999, 81.00001736309328},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.950958046584465*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"2ea3aeee-ac63-9d4a-9b9f-5d39ffef7ad6"]
}, Open  ]],

Cell["\<\
If you zoom in on the \
\[OpenCurlyDoubleQuote]embedding\[CloseCurlyDoubleQuote] block, notice that a \
raw token-level embedding is combined with a positional embedding. A \
transformer does not inherently take into account the order of input \
sequences, and so this positional embedding is needed for successfully \
learning language:\
\>", "Text",
 CellChangeTimes->{{3.9509583977067623`*^9, 3.950958460185772*^9}, {
   3.9509584928100586`*^9, 3.9509585690981064`*^9}, 
   3.9509587247552643`*^9},ExpressionUUID->"fab0dcac-225c-814d-9abf-\
a67d2d802753"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{
   RowBox[{"NetExtract", "[", 
    RowBox[{"languagemodel", ",", "\"\<embedding\>\""}], "]"}], ",", 
   "\"\<FullSummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9509583021098175`*^9, 3.950958354970932*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"906d7980-60e1-1c42-84b8-e1afe0588ebc"],

Cell[BoxData[
 GraphicsBox[{{
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -9}, {-3.9999999999999987, 1.0717958811647137*^-7}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"embedding..\"\>",
         "\"embeddingtokens\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "embeddingtokens", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-41, 2]}, {-2.999999973205102, 
         1.0000000803846907`}], 
        Offset[{0, -20.5}, {-2.999999973205102, 1.0000000803846907`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"posembed\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-2.999999999999999, 
         8.038469108735353*^-8}], 
        Offset[{0, -20.5}, {-2.999999999999999, 8.038469108735353*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"embedding..\"\>",
         "\"embeddingpos\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "embeddingpos", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-41, 2]}, {-1.9999999999999993`, 
         5.3589794058235685`*^-8}], 
        Offset[{0, -20.5}, {-1.9999999999999993`, 5.3589794058235685`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"inputComb..\"\>",
         "\"inputCombine\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "inputCombine", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-41, 2]}, {-0.9999999732051026, 
         1.0000000267948967`}], 
        Offset[{0, -20.5}, {-0.9999999732051026, 1.0000000267948967`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Output\"\>", 
       Offset[{0, -9}, {2.6794897029117842*^-8, 0.9999999999999997}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->RGBColor[
      0.4658823529411765, 0.6176470588235294, 0.6494117647058824]], 
    StyleBox[{InsetBox[
       StyleBox[
        StyleBox["\<\"n\"\>",
         StripOnInput->False,
         FontSlant->Italic],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{-4.532230505142574, 3.1159086392664164}, \
{-3.4499999852628056, 0.5500000924423946}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.5665288435029848, 0.8240419100259225}], InsetBox[
       StyleBox[
        StyleBox["\<\"n\"\>",
         StripOnInput->False,
         FontSlant->Italic],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.4999999999999964}, \
{-3.449999999999999, 9.244239475045655*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{-4.532230505142574, 3.1159086392664173}, \
{-1.449999985262806, 0.5500000388526006}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.5665288435029849, 0.8240419100259225}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917041401417*^-7, 5.4999999999999964}, \
{-1.9111110843162136, 1.0000000512080252}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974394620729846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917663126237*^-7, 5.499999999999996}, \
{-0.44999997320510277, 1.0000000120577033}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.897439575113861*^-8}], InsetBox[
       StyleBox[
        StyleBox["\<\"n\"\>",
         StripOnInput->False,
         FontSlant->Italic],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.143591762329427*^-7, 5.4999999999999964}, \
{-2.4499999999999993, 6.564749772133872*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439567871685*^-8}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}, 
   {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.9999999999999987`, 
       1.0717958811647137`*^-7}, {-2.999999973205102, 1.0000000803846907`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.9999999999999987`, 
       1.0717958811647137`*^-7}, {-2.999999999999999, 8.038469108735353*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-1.9999999999999993`, 
       5.3589794058235685`*^-8}, {-0.9999999732051026, 1.0000000267948967`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"2\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "2"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQPS00/c///+wH8v9NFmVg+GD/SsXh0Ov57Adc59iC
+R7zGkp2mbIf8FO6JwLirzuoIZxzkO1Ax4RSMF+m32IegzPbgc/PmMH8KWwb
RCt2sR6YoNopDOKLaPRXXlJnPRDnwwrmz/189SR/N8uBuOgKIRDfILOFzeAJ
84EJQY8EQfxTHbP0jY2ZD3wydAbzM2qfnFOvZTqQ1zpfAMTnKNLLkznOeODl
jd/8IP7KtApeQUHGA2k6EWC+e/ShNazRDAce1m/hA/HPzJeY8cXz//7YywJg
Pk/nmmt37/7df1MtlxfE9ypyED1e+Gd/SNVJHhC/I/pK8AbW3/svnFUF84+5
ZEyaOfPnfh/FJm4Q/0/zlCfzzX/sX8/wmAvEV8j/GPvg5bf9D7/7gPnGbPX/
ojZ83f+Q7QAniG/iaXuMv/vL/nW6NmC+soXO1n+Vn/d75xzkAPEZLnufVq/9
tH/bIX8w/4zkHI7uKR/3fzB4zg7it/HI5moc+LD/x7Z2MD8mbO7H///f7z8f
YgjmAwBfZMKG
       "]],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"1\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "1"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
       2.6794897029117842`*^-8, 0.9999999999999997}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-2.999999999999999, 
       8.038469108735353*^-8}, {-1.9999999999999993`, 
       5.3589794058235685`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "1024", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 1024, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, {
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-3.4499999852628056, 0.5500000924423946}, \
{-0.25, 0}, Offset[10], {1.0000000267948965`, 1.4545454155710584`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-3.449999999999999, 9.244239475045655*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439567871685*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-1.449999985262806, 0.5500000388526006}, {-0.25, 0},
        Offset[10], {1.0000000267948967`, 1.4545454155710584`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"2\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "2"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-1.9111110843162136, 1.0000000512080252}, \
{-0.25, 0}, Offset[10], {0.08888888888888857, -3.464390632953754*^-9}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"1\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "1"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-0.44999997320510277, 1.0000000120577033}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.897439575113863*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-2.4499999999999993, 6.564749772133872*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999998, -3.897439567871687*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "1024", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 1024, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
        Offset[{2., 2.}, {0., 0.}]]}, InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[
          0.817375, 0.31808499999999995`, 0.3521274999999998], Thickness[
          0.03]}], FaceForm[RGBColor[0.9939125, 0.9772695, 0.97840425]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], FaceForm[{RGBColor[
          0.7565, 0.09078, 0.1361699999999998], Opacity[1.]}], 
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}}}, {{{11.381540374364704`, 18.50282032438554}, {
           16.8150922707282, 18.50282032438554}, {16.8150922707282, 
           17.226951245917007`}, {12.889097121311352`, 17.226951245917007`}, {
           12.889097121311352`, 15.056069530313835`}, {16.218417179305106`, 
           15.056069530313835`}, {16.218417179305106`, 13.783374255523086`}, {
           12.889097121311352`, 13.783374255523086`}, {12.889097121311352`, 
           11.272895546397194`}, {16.94521822151728, 11.272895546397194`}, {
           16.94521822151728, 10.000200271606445`}, {11.381540374364704`, 
           10.000200271606445`}, {11.381540374364704`, 18.50282032438554}}}]}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-2.999999973205102, 1.0000000803846907}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{5.573196887969971, 11.896499633789062`}, {
            5.573196887969971, 12.648452758789062`}, {6.709915637969971, 
            12.648452758789062`}, {6.709915637969971, 15.992202758789062`}, {
            5.774368762969971, 15.992202758789062`}, {5.774368762969971, 
            16.568374633789062`}, {6.028275012969971, 16.615249633789062`}, {
            6.248978137969971, 16.673843383789062`}, {6.432571887969971, 
            16.740249633789062`}, {6.616165637969971, 16.806655883789062`}, {
            6.789993762969971, 16.886734008789062`}, {6.950150012969971, 
            16.984390258789062`}, {7.637650012969971, 16.984390258789062`}, {
            7.637650012969971, 12.648452758789062`}, {8.63765001296997, 
            12.648452758789062`}, {8.63765001296997, 11.896499633789062`}, {
            5.573196887969971, 11.896499633789062`}}}]}, 
          {FaceForm[{RGBColor[
           0.3254901960784314, 0.3254901960784314, 0.3254901960784314], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGZiAIMGVhslBxDDaY4qiG5ofa8I5h+KVQPzXYMh
8kwtEH7rAgi/aQeUfw3K/wXl8yhD9FurQ/jqED5TM4TvqgrlX4TKc6LyWc8r
ofCPzoTwDz2G6s+GynNpQPTbQu3Xh/Bd1aD8VFS+02o0+TcQ/lGo/5kUNVHM
b/LURLHfqRAqfxEq3wrlCyuj8tNR+UeXQ/2XBpW/BuE7qUH4rCwqEP5zqPuk
IXymPlR+kxSaPDQ8WT9B7WOAhtc8KH8iNP58oPYpQ/hHr0LdfxES38jxDwDI
jWFB
            "]]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxt008oBGEYx/F5dw/CTRwcHDDM7K7d5eKmluzJn8PStq0/iTYHITcph43j
FlFyUS5syc1BKUqbwubgtA67xcHJZSO1nCzPdw7zZuqt+dQ77/s+z/ze1tnl
WMprGIaqjoHq8Bh/z8zNmhn5ffHkrYjLJVsc6hBnfOJHHPSL5zrF1/gTjwfE
K5a4iAs42SXus8VPOINHguIcvsBf2AqJm3ziLc3vmtfD4jLfv+FjcbqlWzyF
o/hDzquSeF6zV3NW6lfDeAyHsSFON+Az+vnCeRbwDk6Z7vVKOIMTMl9d4gJ+
xnH29/ZQP/s34iPL7Tbb7V2xqscVXHH6Jf1Vr049+B5/4yzu98v6m3gVO/07
FCsfvhV7yvSjiDc012ne5//ncDvexqfkaRr34mZ8RR5z5GcQL+I8ea7Fo3iP
fD1wH0wnz/iE/N9xn/w4gpdwFJ/jIVzDejEcxwl8gCdxUfNE4H/r97/qHx2Y
ymA=
            "]]}, 
          {FaceForm[{RGBColor[
           0.3254901960784314, 0.3254901960784314, 0.3254901960784314], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGZiAAOHVhUdBxDDaY4qiHZgvaEN5h+KVQPzj1pD
5JlaIHzWTgi/aQeUvx/K/wXlf4XwD1mrQ/gCuhD9zRD+UV4o/yJU/pMOCr91
OyrftQlq3mOo/mCoPJcGRL8a1H59CP8oH5Sfisp3Wo0m/wbCd1WFmqeoiWJ+
k6cmiv1OhVD5nVD5Vij/NxrfXxeF7zoB6t80qPw+CN9JDcJvfQPlP4e6j1kP
or4Pld8khSYPDc/WW1D7GKDh1Q7lT4TGnwnUfGUI33Uf1L0XIfGNHP8A24Ve
vA==
            "]]}, 
          {FaceForm[{RGBColor[
           0.3254901960784314, 0.3254901960784314, 0.3254901960784314], 
           Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxtkj9Lw1AUxUMyutmI6CBoh5pOvr4k4iYGKTiab9BaHB0yqouC6BwpuIlF
HJwk38CKCB0FP4BB/LNGHJy0efdeONFAuPwI95xzD5nv7Gz2HMuyxu/M72tb
5um21ep4Lpw3yplPIjtvS+W07wzH94ZvJxbLWbs0fBAbTk4NP19X2PWQ9z3Y
X3vyQN+ea5YzfSW/XhPyXZwY5vzM+S6yvlKwnzwo0M/eFfgPvxXkE3YrTPfV
PxTeT/rcD/tLf3vY75/++xq/d5APlzXoPU5p8Es/W5CnyFuQV5juEaZ7eZ/7
YH3uq0b+3Cfnk/77yN0RcvaF+8W0D/p6xQf/aMOHfMJuhem+Ae3L/aTP/bC/
9DfCfqv9Fy8BcHKDnB4FoJdvBeA3iALI4+gA8grTPcJ0L+9zH6zPfdXJX/5v
ysd9c37mZDYEHq6HsO9sh6AfHYfgH5+FkE/YrTDdl9G+3E/63A/7S3+U77/+
fwCpIdku
            "]]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-2.999999999999999, 8.038469108735353*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], FaceForm[{RGBColor[
          0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}}}, {{{11.381540374364704`, 18.50282032438554}, {
           16.8150922707282, 18.50282032438554}, {16.8150922707282, 
           17.226951245917007`}, {12.889097121311352`, 17.226951245917007`}, {
           12.889097121311352`, 15.056069530313835`}, {16.218417179305106`, 
           15.056069530313835`}, {16.218417179305106`, 13.783374255523086`}, {
           12.889097121311352`, 13.783374255523086`}, {12.889097121311352`, 
           11.272895546397194`}, {16.94521822151728, 11.272895546397194`}, {
           16.94521822151728, 10.000200271606445`}, {11.381540374364704`, 
           10.000200271606445`}, {11.381540374364704`, 18.50282032438554}}}]}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-1.9999999999999993, 5.3589794058235685*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], FaceForm[{RGBColor[
          0., 0.46549999999999997`, 0.3537800000000001], Opacity[1.]}], 
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}}}, {{{13.19140625, 13.171142578125}, {
           10.551025390625, 13.171142578125}, {10.551025390625, 
           14.731201171875}, {13.19140625, 14.731201171875}, {13.19140625, 
           17.48876953125}, {14.81005859375, 17.48876953125}, {14.81005859375,
            14.731201171875}, {17.450439453125, 14.731201171875}, {
           17.450439453125, 13.171142578125}, {14.81005859375, 
           13.171142578125}, {14.81005859375, 10.409912109375}, {13.19140625, 
           10.409912109375}, {13.19140625, 13.171142578125}}}]}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-0.9999999732051026, 1.0000000267948967}], 
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
        Offset[{2., 2.}, {0., 0.}]]}},
     FontSize->10]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{35., 35.}, {35., 25.}},
  ImageSize->{354.5000014737193, 171.13793349660224`},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.9509583261105385`*^9, 3.9509583578745785`*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"0710d552-23c3-8b47-a003-bc21b6eb9b32"]
}, Open  ]],

Cell["\<\
If you zoom in on the \[OpenCurlyDoubleQuote]decoder\[CloseCurlyDoubleQuote] \
block, there are multiple \[OpenCurlyDoubleQuote]attention blocks\
\[CloseCurlyDoubleQuote] inside. This is a graphic of one of them:\
\>", "Text",
 CellChangeTimes->{
  3.9509582123298435`*^9},ExpressionUUID->"667f35bd-be96-524f-ab3c-\
7bef9eff46ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{
   RowBox[{"NetExtract", "[", 
    RowBox[{"languagemodel", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<decoder\>\"", ",", "1"}], "}"}]}], "]"}], ",", 
   "\"\<FullSummaryGraphic\>\""}], "]"}]], "Input",
 CellLabel->
  "In[223]:=",ExpressionUUID->"cc76a82c-c114-464e-883c-5b3e0945b032"],

Cell[BoxData[
 GraphicsBox[{{
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -9}, {-11.999999999999996, 3.2153876434941414*^-7}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"1\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-11.000000026794893`, -0.9999997052561324}], 
        Offset[{0, -20.5}, {-11.000000026794893`, -0.9999997052561324}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"8\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-5.999999999999998, 
         1.6076938217470707`*^-7}], 
        Offset[{0, -20.5}, {-5.999999999999998, 1.6076938217470707`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"2\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-9.000000080384687, -2.999999758845926}], 
        Offset[{0, -20.5}, {-9.000000080384687, -2.999999758845926}]], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"3\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-10.000000026794893`, -0.9999997320510293}], 
        Offset[{0, -20.5}, {-10.000000026794893`, -0.9999997320510293}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"4\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-9.00000005358979, -1.9999997588459262`}], 
        Offset[{0, -20.5}, {-9.00000005358979, -1.9999997588459262`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"10\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-4.000000026794896, -0.9999998928204116}], 
        Offset[{0, -20.5}, {-4.000000026794896, -0.9999998928204116}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"11\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-3.000000026794896, -0.9999999196153085}], 
        Offset[{0, -20.5}, {-3.000000026794896, -0.9999999196153085}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"12\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-2.0000000267948965`, -0.9999999464102056}], 
        Offset[{0, -20.5}, {-2.0000000267948965`, -0.9999999464102056}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"13\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-0.9999999999999997, 
         2.6794897029117842`*^-8}], 
        Offset[{0, -20.5}, {-0.9999999999999997, 2.6794897029117842`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Output\"\>", Offset[{0, -9}, {0., 0.}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"6\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-8.000000053589792, -1.9999997856408231`}], 
        Offset[{0, -20.5}, {-8.000000053589792, -1.9999997856408231`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"5\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-9.000000026794893, -0.9999997588459264}], 
        Offset[{0, -20.5}, {-9.000000026794893, -0.9999997588459264}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"7\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-7.000000053589791, -1.9999998124357201`}], 
        Offset[{0, -20.5}, {-7.000000053589791, -1.9999998124357201`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"9\"\>", NCache[
       Offset[{0, 
          Rational[-41, 2]}, {-5.000000026794895, -0.9999998660255145}], 
        Offset[{0, -20.5}, {-5.000000026794895, -0.9999998660255145}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->RGBColor[
      0.4658823529411765, 0.6176470588235294, 0.6494117647058824]], 
    StyleBox[{InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{4.532230661050465, 3.1159084124913012}, \
{-11.450000014737189, -0.5499996931984289}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.5665288022711457, -0.8240419383728118}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294523*^-7, 5.499999999999996}, \
{-9.311111111111106, 2.4949026344889723*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678717315`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{3.346030076648146, 4.3650982493142125}, \
{-9.909148874044323, -2.924912019685385}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.7936542271480387, -0.6083691048451174}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917574308392*^-7, 5.4999999999999964}, \
{-10.450000026794893, -0.9999997199933257}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439558965162*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.2628188885965024, 5.012948301888908}, \
{-9.893031335209525, -1.9563511681773347}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9114451457979833, -0.41142161610845496`}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"3072\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917574308392*^-7, 5.4999999999999964}, \
{-3.4500000267948963, -0.9999999075576049}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439558965162*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"3072\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917663126244*^-7, 5.4999999999999964}, \
{-2.4500000267948963, -0.9999999343525019}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395751138626`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{-4.532230505142572, 3.1159086392664177}, \
{-1.450000012057703, -0.44999996114739915}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.566528843502985, 0.8240419100259223}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.499999999999996}, \
{-0.4499999999999998, 1.2057703663103027*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"12\"", 
          "\"64\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{-4.532230505142576, 3.1159086392664133}, \
{-8.450000065647494, -2.4499997735831194}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.5665288435029843, 0.824041910025923}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"12\"", 
          "\"64\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917663126234*^-7, 5.4999999999999964}, \
{-9.450000026794893, -0.9999997467882227}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395751138606`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"12\"", 
          "\"64\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917574308432*^-7, 5.4999999999999964}, \
{-8.450000053589791, -1.9999997735831196}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395589651695`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"12\"", 
          "\"64\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{4.532230661050468, 3.1159084124912972}, \
{-8.450000041532087, -1.5499997735831197}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.566528802271145, -0.8240419383728124}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"12\"", 
          "\"64\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917574308373*^-7, 5.4999999999999964}, \
{-7.4500000535897914, -1.9999998003780164}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439558965159*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{-5.201276259356924, 1.7879388339230275}, \
{-6.455901723869171, -0.9118032258897678}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.325079787986005, 0.9456865926103499}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294078*^-7, 5.499999999999996}, \
{-3.7333333333333325, 1.0003428224203995*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.897439567871651*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{4.532230661050465, 3.1159084124913012}, \
{-5.450000014737192, -0.549999853967811}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.5665288022711457, -0.8240419383728118}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917663126252*^-7, 5.4999999999999964}, \
{-4.450000026794895, -0.999999880762708}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439575113864*^-8}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}, 
   {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
    TagBox[
     TooltipBox[
      LineBox[{{-11.999999999999996`, 
       3.2153876434941414`*^-7}, {-11.000000026794893`, -0.9999997052561324}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[LineBox[CompressedData["
1:eJwt031MU1cYBvAKY5vVDZ0VaGmlX9xLFgoYxHSOvJLRGEA2I2FTo2hlQEjX
MNGqyKaiSL8otLe3VyUjYKKRLHGTpYYZGPLi3FAYLmGauDgYk48OgyiCBpjB
ea7nyb05/9xz8jvPzasp/DKvOEwikWS8esm6+JKExd5bf+xb5AUYSD00vRBi
Udrx1XjxMQHez3uzqayfxcq19lJHiQARO1tfPSwqDDPPC3MFMH9iS0Afi6Hv
rnNzyQJAItnA4lhw1pi1UoCm2ezm2WwW39vomtz6JABVLTtnftayWLal6tLq
/gCMmhxhy+cZnBv9s4JvCUDfbyQMBl8KW/uOB2CabG9m8I2C6pThzwIg7ylX
9pQzuL19X+QzQwAyTSQMfhu9e2ppRAAs3VHW7igG/7Nt7l/zFw9+mOBhIh5z
B4yXUoM8tHeQxGNTMlOb5ebhgbF+xFgfj088qywFe3mQtpmXtZnj8aOHkuz9
Rh56RY8ePTtOqQ4F/fBU9OhxsK38hdvtB4Xo0WOKbM/95r1+6tFjdXlu+xWj
n3r0eOf2Bw23Iv3Uo0Mmka0YGueoR4cVLtm2mU4O/hE9OuwdX7L+bYGjHh0q
TY9lKitHPVosCe6fUId8tB8tXl1hvpl2zQexokeL0rKPW3IEH/VosaBvg32P
1Uc9Wvw+IaHYlumjHg1K7KtNLoWPejR4/teITekjXtqPBrNODIeXcF7q0eDk
hx3d3o1e+r/UWKW4bjmTVk/7UaPubmNC90gd9ajxpvfw+EOuDkSOSY3WnLwL
sow6+EL0qHFFhKEQpjygPzrAHh2Iwytdb6lLGz1w8DBJHG6vfDDI5XjgBjlO
GYcv1nV+0zFXCzIrOWANnnt8ZsfYxVo43UCiwnW3m8IeNbphjCcXVOE95xGM
2uyG9eQ6I0r8OjP/WMa8C+xOEiVqFpPSLS0uuHvScO+kQYk3ri5d4D91ASN6
YrH0wOiPneEusImeWFye1HUw9IMTfhE9sdj6b0PqSrOTehSYf942veFdJxSV
kChwrmDL5aKfHLCWjNc7CrTyPeY7VgcstGbJK9rlWH2tcv53jQOQ1GGVY/rf
pUe23bfTeZGj8IwbtjTYIf3z6MvHh2LQu+R5knSXnfYdg4nhQlGazg4XyefF
MWhZKDsxOVUD+WdXqaQpMZgdqq5J7qqB1/MeTee9Bv4HIoD1zA==
       "]],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"1\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "1"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQPUPrGZBUOyC+7VDi///v9//8bac69ZnqgXmBsrlr
p33cf4PdL+v6cdUDQdGhcp1Nn/cb+glfOLZY9YB6ReeRSYe/7mc93xeWXKV6
QGLFzvhTkT/2B3cd+LvGW/WAzuun7/Vdf++Xa1hxdLG46oEER77Sw63/9qds
cFvnfk/lQGTozPJDvIwH1KRnb58xX+XA5Mma+lbMzAeSDix9OC1a5UDMbfOH
HsqsB9p7GVddc1U5cED1VrnAXtYD5258uu6lq3KA6VXy5AMubAeMFlVmfxZU
OaCicdU4chfbgc0vp6Zc+Kx8QPGBbuQtWfYDQevdDz+8pHzgj2Aes0s++wGB
z33t6uuVD2zfO9Vo2jr2A2+2ZG9c2KF8wO/xkmcXbrMfeP7lrkNAvPKBw02z
5b98Yz/wf9NTU2Nj5QNicyrv/v/PfuCplTbDFzblAyk6J8F8rxth/DZ3lQ6c
NRC5B+Lrdmckc29TOuC7MgrM7w1O+JM4UenAs6lzwPwsQ7tb9vlKB6Z9uwnm
H1Nh+rvEX+lA0mmh+yD+At01KRONlA64iLiD+d+9bQRZJZQOOFwsA/PP1G8C
RpvSgVCmRWA+AKES6PQ=
       "]],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-11.000000026794893`, -0.9999997052561324}, \
{-10.000000026794893`, -0.9999997320510293}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQPUPrGZBUOyC+7VDi///v93OK7om1fa56IFf+ySmR
Yx/2L3kY5lNxSvVA4Mo7YbZrPu7PmrDtzIaVqgc2/zgVUrnp0/4Ixdv3nrWo
HpjCu/7IiRuf9xdOOdIkFaN64OvzjmXa8l/3b3lZtMNbX/XAtfaIXwtbv+1X
UHxWX/VP5YD5W9kD2jw/9m+zkru57KTKAXGJm99PbPq5v8xM+siFCSoHyji6
FlZW/t6fWxZ7+km+yoErAtqO83P+7FdydV9Z66tyQOqw2l1N57/7Jyy6ETtb
U+WAm3xtqeTfv/u39Qm+tGVRORChqseVN+vf/hmcn7xS7yofCLhqOVtd+v9+
E+GqZsGtygf09BdouNX/39+1euUkp27lAx+NEjedPPZ//6xLDRU/4pUPzHlQ
Y7Hp4//9qR3/TYyNlQ/oWnze9f////3eAq7/P7MpHzgZMWk3iL9hbQGfzV2l
AzMTNfaA+JMTmpK4tykdmB20Fcz/rFH1O3Gi0oEz2pZ7QfwLbBE37fOVDui9
3Qzm6/yS/rPEX+nAkWmq+0B8NuZjyRONlA50afSB+XGKYQKsEkoHmha9BfON
Qs8wMjAoHVjN4rIfxAcADb/4hA==
       "]],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-4.000000026794896, -0.9999998928204116}, \
{-3.000000026794896, -0.9999999196153085}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-2.0000000267948965`, -0.9999999464102056}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-2.0000000267948965`, -0.9999999464102056}, \
{-0.9999999999999997, 2.6794897029117842`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"2\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "2"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 0.}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-9.000000080384687, -2.999999758845926}, {-8.000000053589792, \
-1.9999997856408231`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Key\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Key"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-10.000000026794893`, -0.9999997320510293}, \
{-9.000000026794893, -0.9999997588459264}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-9.00000005358979, -1.9999997588459262`}, \
{-8.000000053589792, -1.9999997856408231`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Value\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Value"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-9.000000026794893, -0.9999997588459264}, \
{-8.000000053589792, -1.9999997856408231`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Query\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Query"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-8.000000053589792, -1.9999997856408231`}, \
{-7.000000053589791, -1.9999998124357201`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-7.000000053589791, -1.9999998124357201`}, \
{-5.999999999999998, 1.6076938217470707`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"2\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "2"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[LineBox[CompressedData["
1:eJwtk38s1GEcx4/cKYXz4+5S+iEqxmm0RlYfK/2YKbVsIaqLzIkOkROu7s6d
SKkdqauLtahNDbXSJvX9SJdV00nKzY/Rr8MS4ihXqO8zr+3Z88/zeT+v9549
LjHJ++LMGQyG3/9F7zOzNDx8/ep9ykyxEu7ED32e0PEw5J5rdItQCfsrFm3q
ucZDT7W/gL1RCVZ1goV1Ah4eu2QvabZQAmoG9kpdeMhU3X8w9kYBORH0ABcZ
ZRwzVZECNg8Ww2AxFw88BGHlLgUw9jw2nN3ORfsPXgNeLAW8KbBhLh7joDuj
T+r+JBeuqmk4qNkQ4Xs1MRcM9DhwMHDUd7TRKRf8ir74F31xxK9V1tXfm+WQ
T3DE/LiBRE6GHDrkfL2c74ieK5s8At3ksFrStlbS5oC6zhv9wjYZZIhpHDDt
cmalSioDbapzc6qzA3L3hsU2eMuAk9TITWq0x3orbxdDt3TOxw7L2xJKuirP
QD/xsUPDzhXsdeZnwJ/4sNH7aXuh/NBpOEt82Cj2PWf5sV4y58PGZ3cCcz14
EthlqthjqrBF1rKJmZy0HBgaprHBUFVVVqsuG87Tcf42WGopmHT1ygZPPR1g
jb05nBPi/CzwWU+zEFkBri/y0jNBt5YuaIW7a/SBna1iIHWaF2CpW9ETPl8M
bDuaBdirDvKTFWRANTOqlhk1H9fYTj1o/3YSQomPJYoU1d7uW08C0RlmYd1U
bFV2WTpcID4snBY5rdGZ0oBPfJi44+vbm6vC08CX+MxD0c3ucZ+gVHhHfMzx
EVeVrCxPgRTiY4Ym3sWP938lz/mY4QVzU0tErQhqiA8Dl/44qp0VHgeNMbjc
GDxLVXXoGm67JEFXD800FfA84OHuzmOwhI5L/Uu9uld516hKgMhaOuAPFXmF
fet6iBCukPeaogZk2de2WsRDi177vdzvN1UfHi0wexkHY02r4voGJykHC4+m
EfVRINfXTlDGvE/PraWxwCwTtdgWGqmIPuXhqMwYMJ4/2DBzapzaxuaq9fIj
c/3GqDrSTwAa+njJTyq6f1zbpDkM4UdC091xlDoQet3QtfwQTJP/NULFxCzZ
EqaNhn/SvLHe
       "]],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"1\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "1"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.999999999999998, 
       1.6076938217470707`*^-7}, {-5.000000026794895, -0.9999998660255145}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.000000026794895, -0.9999998660255145}, \
{-4.000000026794896, -0.9999998928204116}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, {
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-11.450000014737189, -0.5499996931984289}, {-0.25, 0}, Offset[10], {
       0.999999973205103, -1.4545454935198499`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-9.311111111111106, 2.4949026344889723*^-7}, {-0.25, 0}, Offset[10], {
       0.17777777777777537`, -6.9287814539941005`*^-9}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"1\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "1"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-9.909148874044323, -2.924912019685385}, {-0.25, 0},
        Offset[10], {0.134100825405147, -0.10279388217194388`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-10.450000026794893, -0.9999997199933257}, {-0.25, 0}, Offset[10], {
       1., -3.897439558965165*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-9.893031335209525, -1.9563511681773347}, \
{-0.25, 0}, Offset[10], {0.07876418437371768, -0.03555374470520434}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-3.4500000267948963, -0.9999999075576049}, {-0.25, 0}, Offset[10], {
       1., -3.897439558965165*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-2.4500000267948963, -0.9999999343525019}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439575113863*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]3072\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]3072\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-1.450000012057703, -0.44999996114739915}, {-0.25, 0}, Offset[10], {
       1.000000026794897, 1.4545454155710584`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"2\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "2"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-0.4499999999999998, 1.2057703663103027*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.8974395678716865`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          
          0.3333333333333333}}]}], {-8.450000065647494, -2.4499997735831194}, \
{-0.25, 0}, Offset[10], {1.0000000267948952`, 1.4545454155710587`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Key\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Key"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-9.450000026794893, -0.9999997467882227}, \
{-0.25, 0}, Offset[10], {1., -3.897439575113863*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.450000053589791, -1.9999997735831196}, \
{-0.25, 0}, Offset[10], {0.9999999999999982, -3.897439558965165*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Value\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Value"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.450000041532087, -1.5499997735831197}, \
{-0.25, 0}, Offset[10], {0.9999999732051013, -1.4545454935198499`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Query\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Query"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-7.4500000535897914, -1.9999998003780164}, {-0.25, 0}, Offset[10], {
       1.0000000000000009`, -3.897439558965165*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]12\[Times]64\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"array", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]12\[Times]64\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-6.455901723869171, -0.9118032258897678}, \
{-0.25, 0}, Offset[10], {1.000000053589793, 2.9090908701165126`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"2\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "2"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-3.7333333333333325, 1.0003428224203995*^-7}, {-0.25, 0}, Offset[10], {
       0.08888888888888902, -3.464390726997031*^-9}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"1\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "1"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-5.450000014737192, -0.549999853967811}, {-0.25, 0},
        Offset[10], {0.999999973205103, -1.4545454935198499`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-4.450000026794895, -0.999999880762708}, {-0.25, 0},
        Offset[10], {0.9999999999999991, -3.897439575113863*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{-11.999999999999996`, 3.2153876434941414`*^-7}, 
        Offset[{2., 2.}, {0., 0.}]]}, InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], FaceForm[{RGBColor[
          0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
           3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJpIGZiAIOEBfJqDiDGhgYjEJ3QYKCJwl+wVxfMf5Cn
DeY/CNYH8x0uqYP5CemofIVwCF9hiwZE3gEqvwxsbsIBFSh/lRaEzwXlr4OY
f+CvHkT/Kh0UfsN8XRQ+1H0GB94bYOUzMKhA3H9OD4Xf4Ai2lyFhOsS8B2vA
7mSYMN0AYv50VP6ClRC+gQqEn3AAwncI04fwb0H4ByL0IPwvEP6DGIj5DMyQ
8HRI0UHhw8ITxoe7Fxof6HyQ/wDn9FU8
           "]]}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-11.000000026794893, -0.9999997052561324}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], FaceForm[{RGBColor[
          0., 0.46549999999999997`, 0.3537800000000001], Opacity[1.]}], 
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}}}, {{{13.19140625, 13.171142578125}, {
           10.551025390625, 13.171142578125}, {10.551025390625, 
           14.731201171875}, {13.19140625, 14.731201171875}, {13.19140625, 
           17.48876953125}, {14.81005859375, 17.48876953125}, {14.81005859375,
            14.731201171875}, {17.450439453125, 14.731201171875}, {
           17.450439453125, 13.171142578125}, {14.81005859375, 
           13.171142578125}, {14.81005859375, 10.409912109375}, {13.19140625, 
           10.409912109375}, {13.19140625, 13.171142578125}}}]}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-5.999999999999998, 1.6076938217470707*^-7}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 19.75}, {
            18.312500953674316`, 19.75}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 15.916699409484863`}, {
            18.312500953674316`, 15.916699409484863`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 12.083300590515137`}, {
            18.312500953674316`, 12.083300590515137`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 8.25}, {
            18.312500953674316`, 8.25}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 20.687000274658203`}, {19.249998092651367`, 
            20.687000274658203`}, {19.249998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            21.187000274658203`}, {16.875, 21.187000274658203`}, {16.875, 
            18.312000274658203`}, {19.75, 18.312000274658203`}, {19.75, 
            21.187000274658203`}}, {{18.75, 19.312000274658203`}, {17.875, 
            19.312000274658203`}, {17.875, 20.187000274658203`}, {18.75, 
            20.187000274658203`}, {18.75, 19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 16.8539981842041}, {19.249998092651367`, 
            16.8539981842041}, {19.249998092651367`, 14.978998184204102`}, {
            17.374998092651367`, 14.978998184204102`}, {17.374998092651367`, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            17.3539981842041}, {16.875, 17.3539981842041}, {16.875, 
            14.478998184204102`}, {19.75, 14.478998184204102`}, {19.75, 
            17.3539981842041}}, {{18.75, 15.478999137878418`}, {17.875, 
            15.478999137878418`}, {17.875, 16.354000091552734`}, {18.75, 
            16.354000091552734`}, {18.75, 15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 13.021000862121582`}, {19.249998092651367`, 
            13.021000862121582`}, {19.249998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            13.521000862121582`}, {16.875, 13.521000862121582`}, {16.875, 
            10.646000862121582`}, {19.75, 10.646000862121582`}, {19.75, 
            13.521000862121582`}}, {{18.75, 11.645999908447266`}, {17.875, 
            11.645999908447266`}, {17.875, 12.520999908447266`}, {18.75, 
            12.520999908447266`}, {18.75, 11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 9.188000679016113}, {19.249998092651367`, 
            9.188000679016113}, {19.249998092651367`, 7.313000679016113}, {
            17.374998092651367`, 7.313000679016113}, {17.374998092651367`, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            9.688000679016113}, {16.875, 9.688000679016113}, {16.875, 
            6.813000679016113}, {19.75, 6.813000679016113}, {19.75, 
            9.688000679016113}}, {{18.75, 7.812000274658203}, {17.875, 
            7.812000274658203}, {17.875, 8.687000274658203}, {18.75, 
            8.687000274658203}, {18.75, 7.812000274658203}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 20.687000274658203`}, {10.625, 20.687000274658203`}, {
            10.625, 18.812000274658203`}, {8.75, 18.812000274658203`}, {8.75, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            21.187000274658203`}, {8.250000953674316, 21.187000274658203`}, {
            8.250000953674316, 18.312000274658203`}, {11.125000953674316`, 
            18.312000274658203`}, {11.125000953674316`, 
            21.187000274658203`}}, {{10.125000953674316`, 
            19.312000274658203`}, {9.250000953674316, 19.312000274658203`}, {
            9.250000953674316, 20.187000274658203`}, {10.125000953674316`, 
            20.187000274658203`}, {10.125000953674316`, 
            19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 16.8539981842041}, {10.625, 16.8539981842041}, {10.625, 
            14.978998184204102`}, {8.75, 14.978998184204102`}, {8.75, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            17.3539981842041}, {8.250000953674316, 17.3539981842041}, {
            8.250000953674316, 14.478998184204102`}, {11.125000953674316`, 
            14.478998184204102`}, {11.125000953674316`, 17.3539981842041}}, {{
            10.125000953674316`, 15.478999137878418`}, {9.250000953674316, 
            15.478999137878418`}, {9.250000953674316, 16.354000091552734`}, {
            10.125000953674316`, 16.354000091552734`}, {10.125000953674316`, 
            15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 13.021000862121582`}, {10.625, 13.021000862121582`}, {
            10.625, 11.146000862121582`}, {8.75, 11.146000862121582`}, {8.75, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            13.521000862121582`}, {8.250000953674316, 13.521000862121582`}, {
            8.250000953674316, 10.646000862121582`}, {11.125000953674316`, 
            10.646000862121582`}, {11.125000953674316`, 
            13.521000862121582`}}, {{10.125000953674316`, 
            11.645999908447266`}, {9.250000953674316, 11.645999908447266`}, {
            9.250000953674316, 12.520999908447266`}, {10.125000953674316`, 
            12.520999908447266`}, {10.125000953674316`, 
            11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 9.188000679016113}, {10.625, 9.188000679016113}, {10.625, 
            7.313000679016113}, {8.75, 7.313000679016113}, {8.75, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            9.688000679016113}, {8.250000953674316, 9.688000679016113}, {
            8.250000953674316, 6.813000679016113}, {11.125000953674316`, 
            6.813000679016113}, {11.125000953674316`, 9.688000679016113}}, {{
            10.125000953674316`, 7.812000274658203}, {9.250000953674316, 
            7.812000274658203}, {9.250000953674316, 8.687000274658203}, {
            10.125000953674316`, 8.687000274658203}, {10.125000953674316`, 
            7.812000274658203}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-9.000000080384687, -2.999999758845926}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 19.75}, {
            18.312500953674316`, 19.75}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 15.916699409484863`}, {
            18.312500953674316`, 15.916699409484863`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 12.083300590515137`}, {
            18.312500953674316`, 12.083300590515137`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 8.25}, {
            18.312500953674316`, 8.25}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 20.687000274658203`}, {19.249998092651367`, 
            20.687000274658203`}, {19.249998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            21.187000274658203`}, {16.875, 21.187000274658203`}, {16.875, 
            18.312000274658203`}, {19.75, 18.312000274658203`}, {19.75, 
            21.187000274658203`}}, {{18.75, 19.312000274658203`}, {17.875, 
            19.312000274658203`}, {17.875, 20.187000274658203`}, {18.75, 
            20.187000274658203`}, {18.75, 19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 16.8539981842041}, {19.249998092651367`, 
            16.8539981842041}, {19.249998092651367`, 14.978998184204102`}, {
            17.374998092651367`, 14.978998184204102`}, {17.374998092651367`, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            17.3539981842041}, {16.875, 17.3539981842041}, {16.875, 
            14.478998184204102`}, {19.75, 14.478998184204102`}, {19.75, 
            17.3539981842041}}, {{18.75, 15.478999137878418`}, {17.875, 
            15.478999137878418`}, {17.875, 16.354000091552734`}, {18.75, 
            16.354000091552734`}, {18.75, 15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 13.021000862121582`}, {19.249998092651367`, 
            13.021000862121582`}, {19.249998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            13.521000862121582`}, {16.875, 13.521000862121582`}, {16.875, 
            10.646000862121582`}, {19.75, 10.646000862121582`}, {19.75, 
            13.521000862121582`}}, {{18.75, 11.645999908447266`}, {17.875, 
            11.645999908447266`}, {17.875, 12.520999908447266`}, {18.75, 
            12.520999908447266`}, {18.75, 11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 9.188000679016113}, {19.249998092651367`, 
            9.188000679016113}, {19.249998092651367`, 7.313000679016113}, {
            17.374998092651367`, 7.313000679016113}, {17.374998092651367`, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            9.688000679016113}, {16.875, 9.688000679016113}, {16.875, 
            6.813000679016113}, {19.75, 6.813000679016113}, {19.75, 
            9.688000679016113}}, {{18.75, 7.812000274658203}, {17.875, 
            7.812000274658203}, {17.875, 8.687000274658203}, {18.75, 
            8.687000274658203}, {18.75, 7.812000274658203}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 20.687000274658203`}, {10.625, 20.687000274658203`}, {
            10.625, 18.812000274658203`}, {8.75, 18.812000274658203`}, {8.75, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            21.187000274658203`}, {8.250000953674316, 21.187000274658203`}, {
            8.250000953674316, 18.312000274658203`}, {11.125000953674316`, 
            18.312000274658203`}, {11.125000953674316`, 
            21.187000274658203`}}, {{10.125000953674316`, 
            19.312000274658203`}, {9.250000953674316, 19.312000274658203`}, {
            9.250000953674316, 20.187000274658203`}, {10.125000953674316`, 
            20.187000274658203`}, {10.125000953674316`, 
            19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 16.8539981842041}, {10.625, 16.8539981842041}, {10.625, 
            14.978998184204102`}, {8.75, 14.978998184204102`}, {8.75, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            17.3539981842041}, {8.250000953674316, 17.3539981842041}, {
            8.250000953674316, 14.478998184204102`}, {11.125000953674316`, 
            14.478998184204102`}, {11.125000953674316`, 17.3539981842041}}, {{
            10.125000953674316`, 15.478999137878418`}, {9.250000953674316, 
            15.478999137878418`}, {9.250000953674316, 16.354000091552734`}, {
            10.125000953674316`, 16.354000091552734`}, {10.125000953674316`, 
            15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 13.021000862121582`}, {10.625, 13.021000862121582`}, {
            10.625, 11.146000862121582`}, {8.75, 11.146000862121582`}, {8.75, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            13.521000862121582`}, {8.250000953674316, 13.521000862121582`}, {
            8.250000953674316, 10.646000862121582`}, {11.125000953674316`, 
            10.646000862121582`}, {11.125000953674316`, 
            13.521000862121582`}}, {{10.125000953674316`, 
            11.645999908447266`}, {9.250000953674316, 11.645999908447266`}, {
            9.250000953674316, 12.520999908447266`}, {10.125000953674316`, 
            12.520999908447266`}, {10.125000953674316`, 
            11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 9.188000679016113}, {10.625, 9.188000679016113}, {10.625, 
            7.313000679016113}, {8.75, 7.313000679016113}, {8.75, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            9.688000679016113}, {8.250000953674316, 9.688000679016113}, {
            8.250000953674316, 6.813000679016113}, {11.125000953674316`, 
            6.813000679016113}, {11.125000953674316`, 9.688000679016113}}, {{
            10.125000953674316`, 7.812000274658203}, {9.250000953674316, 
            7.812000274658203}, {9.250000953674316, 8.687000274658203}, {
            10.125000953674316`, 8.687000274658203}, {10.125000953674316`, 
            7.812000274658203}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-10.000000026794893, -0.9999997320510293}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 19.75}, {
            18.312500953674316`, 19.75}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 15.916699409484863`}, {
            18.312500953674316`, 15.916699409484863`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 12.083300590515137`}, {
            18.312500953674316`, 12.083300590515137`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 8.25}, {
            18.312500953674316`, 8.25}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 20.687000274658203`}, {19.249998092651367`, 
            20.687000274658203`}, {19.249998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            21.187000274658203`}, {16.875, 21.187000274658203`}, {16.875, 
            18.312000274658203`}, {19.75, 18.312000274658203`}, {19.75, 
            21.187000274658203`}}, {{18.75, 19.312000274658203`}, {17.875, 
            19.312000274658203`}, {17.875, 20.187000274658203`}, {18.75, 
            20.187000274658203`}, {18.75, 19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 16.8539981842041}, {19.249998092651367`, 
            16.8539981842041}, {19.249998092651367`, 14.978998184204102`}, {
            17.374998092651367`, 14.978998184204102`}, {17.374998092651367`, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            17.3539981842041}, {16.875, 17.3539981842041}, {16.875, 
            14.478998184204102`}, {19.75, 14.478998184204102`}, {19.75, 
            17.3539981842041}}, {{18.75, 15.478999137878418`}, {17.875, 
            15.478999137878418`}, {17.875, 16.354000091552734`}, {18.75, 
            16.354000091552734`}, {18.75, 15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 13.021000862121582`}, {19.249998092651367`, 
            13.021000862121582`}, {19.249998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            13.521000862121582`}, {16.875, 13.521000862121582`}, {16.875, 
            10.646000862121582`}, {19.75, 10.646000862121582`}, {19.75, 
            13.521000862121582`}}, {{18.75, 11.645999908447266`}, {17.875, 
            11.645999908447266`}, {17.875, 12.520999908447266`}, {18.75, 
            12.520999908447266`}, {18.75, 11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 9.188000679016113}, {19.249998092651367`, 
            9.188000679016113}, {19.249998092651367`, 7.313000679016113}, {
            17.374998092651367`, 7.313000679016113}, {17.374998092651367`, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            9.688000679016113}, {16.875, 9.688000679016113}, {16.875, 
            6.813000679016113}, {19.75, 6.813000679016113}, {19.75, 
            9.688000679016113}}, {{18.75, 7.812000274658203}, {17.875, 
            7.812000274658203}, {17.875, 8.687000274658203}, {18.75, 
            8.687000274658203}, {18.75, 7.812000274658203}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 20.687000274658203`}, {10.625, 20.687000274658203`}, {
            10.625, 18.812000274658203`}, {8.75, 18.812000274658203`}, {8.75, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            21.187000274658203`}, {8.250000953674316, 21.187000274658203`}, {
            8.250000953674316, 18.312000274658203`}, {11.125000953674316`, 
            18.312000274658203`}, {11.125000953674316`, 
            21.187000274658203`}}, {{10.125000953674316`, 
            19.312000274658203`}, {9.250000953674316, 19.312000274658203`}, {
            9.250000953674316, 20.187000274658203`}, {10.125000953674316`, 
            20.187000274658203`}, {10.125000953674316`, 
            19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 16.8539981842041}, {10.625, 16.8539981842041}, {10.625, 
            14.978998184204102`}, {8.75, 14.978998184204102`}, {8.75, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            17.3539981842041}, {8.250000953674316, 17.3539981842041}, {
            8.250000953674316, 14.478998184204102`}, {11.125000953674316`, 
            14.478998184204102`}, {11.125000953674316`, 17.3539981842041}}, {{
            10.125000953674316`, 15.478999137878418`}, {9.250000953674316, 
            15.478999137878418`}, {9.250000953674316, 16.354000091552734`}, {
            10.125000953674316`, 16.354000091552734`}, {10.125000953674316`, 
            15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 13.021000862121582`}, {10.625, 13.021000862121582`}, {
            10.625, 11.146000862121582`}, {8.75, 11.146000862121582`}, {8.75, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            13.521000862121582`}, {8.250000953674316, 13.521000862121582`}, {
            8.250000953674316, 10.646000862121582`}, {11.125000953674316`, 
            10.646000862121582`}, {11.125000953674316`, 
            13.521000862121582`}}, {{10.125000953674316`, 
            11.645999908447266`}, {9.250000953674316, 11.645999908447266`}, {
            9.250000953674316, 12.520999908447266`}, {10.125000953674316`, 
            12.520999908447266`}, {10.125000953674316`, 
            11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 9.188000679016113}, {10.625, 9.188000679016113}, {10.625, 
            7.313000679016113}, {8.75, 7.313000679016113}, {8.75, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            9.688000679016113}, {8.250000953674316, 9.688000679016113}, {
            8.250000953674316, 6.813000679016113}, {11.125000953674316`, 
            6.813000679016113}, {11.125000953674316`, 9.688000679016113}}, {{
            10.125000953674316`, 7.812000274658203}, {9.250000953674316, 
            7.812000274658203}, {9.250000953674316, 8.687000274658203}, {
            10.125000953674316`, 8.687000274658203}, {10.125000953674316`, 
            7.812000274658203}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-9.00000005358979, -1.9999997588459262}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 19.75}, {
            18.312500953674316`, 19.75}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 15.916699409484863`}, {
            18.312500953674316`, 15.916699409484863`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 12.083300590515137`}, {
            18.312500953674316`, 12.083300590515137`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 8.25}, {
            18.312500953674316`, 8.25}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 20.687000274658203`}, {19.249998092651367`, 
            20.687000274658203`}, {19.249998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            21.187000274658203`}, {16.875, 21.187000274658203`}, {16.875, 
            18.312000274658203`}, {19.75, 18.312000274658203`}, {19.75, 
            21.187000274658203`}}, {{18.75, 19.312000274658203`}, {17.875, 
            19.312000274658203`}, {17.875, 20.187000274658203`}, {18.75, 
            20.187000274658203`}, {18.75, 19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 16.8539981842041}, {19.249998092651367`, 
            16.8539981842041}, {19.249998092651367`, 14.978998184204102`}, {
            17.374998092651367`, 14.978998184204102`}, {17.374998092651367`, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            17.3539981842041}, {16.875, 17.3539981842041}, {16.875, 
            14.478998184204102`}, {19.75, 14.478998184204102`}, {19.75, 
            17.3539981842041}}, {{18.75, 15.478999137878418`}, {17.875, 
            15.478999137878418`}, {17.875, 16.354000091552734`}, {18.75, 
            16.354000091552734`}, {18.75, 15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 13.021000862121582`}, {19.249998092651367`, 
            13.021000862121582`}, {19.249998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            13.521000862121582`}, {16.875, 13.521000862121582`}, {16.875, 
            10.646000862121582`}, {19.75, 10.646000862121582`}, {19.75, 
            13.521000862121582`}}, {{18.75, 11.645999908447266`}, {17.875, 
            11.645999908447266`}, {17.875, 12.520999908447266`}, {18.75, 
            12.520999908447266`}, {18.75, 11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 9.188000679016113}, {19.249998092651367`, 
            9.188000679016113}, {19.249998092651367`, 7.313000679016113}, {
            17.374998092651367`, 7.313000679016113}, {17.374998092651367`, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            9.688000679016113}, {16.875, 9.688000679016113}, {16.875, 
            6.813000679016113}, {19.75, 6.813000679016113}, {19.75, 
            9.688000679016113}}, {{18.75, 7.812000274658203}, {17.875, 
            7.812000274658203}, {17.875, 8.687000274658203}, {18.75, 
            8.687000274658203}, {18.75, 7.812000274658203}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 20.687000274658203`}, {10.625, 20.687000274658203`}, {
            10.625, 18.812000274658203`}, {8.75, 18.812000274658203`}, {8.75, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            21.187000274658203`}, {8.250000953674316, 21.187000274658203`}, {
            8.250000953674316, 18.312000274658203`}, {11.125000953674316`, 
            18.312000274658203`}, {11.125000953674316`, 
            21.187000274658203`}}, {{10.125000953674316`, 
            19.312000274658203`}, {9.250000953674316, 19.312000274658203`}, {
            9.250000953674316, 20.187000274658203`}, {10.125000953674316`, 
            20.187000274658203`}, {10.125000953674316`, 
            19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 16.8539981842041}, {10.625, 16.8539981842041}, {10.625, 
            14.978998184204102`}, {8.75, 14.978998184204102`}, {8.75, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            17.3539981842041}, {8.250000953674316, 17.3539981842041}, {
            8.250000953674316, 14.478998184204102`}, {11.125000953674316`, 
            14.478998184204102`}, {11.125000953674316`, 17.3539981842041}}, {{
            10.125000953674316`, 15.478999137878418`}, {9.250000953674316, 
            15.478999137878418`}, {9.250000953674316, 16.354000091552734`}, {
            10.125000953674316`, 16.354000091552734`}, {10.125000953674316`, 
            15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 13.021000862121582`}, {10.625, 13.021000862121582`}, {
            10.625, 11.146000862121582`}, {8.75, 11.146000862121582`}, {8.75, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            13.521000862121582`}, {8.250000953674316, 13.521000862121582`}, {
            8.250000953674316, 10.646000862121582`}, {11.125000953674316`, 
            10.646000862121582`}, {11.125000953674316`, 
            13.521000862121582`}}, {{10.125000953674316`, 
            11.645999908447266`}, {9.250000953674316, 11.645999908447266`}, {
            9.250000953674316, 12.520999908447266`}, {10.125000953674316`, 
            12.520999908447266`}, {10.125000953674316`, 
            11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 9.188000679016113}, {10.625, 9.188000679016113}, {10.625, 
            7.313000679016113}, {8.75, 7.313000679016113}, {8.75, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            9.688000679016113}, {8.250000953674316, 9.688000679016113}, {
            8.250000953674316, 6.813000679016113}, {11.125000953674316`, 
            6.813000679016113}, {11.125000953674316`, 9.688000679016113}}, {{
            10.125000953674316`, 7.812000274658203}, {9.250000953674316, 
            7.812000274658203}, {9.250000953674316, 8.687000274658203}, {
            10.125000953674316`, 8.687000274658203}, {10.125000953674316`, 
            7.812000274658203}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-4.000000026794896, -0.9999998928204116}], InsetBox[
       GraphicsBox[{{
          {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
           0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
           RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
            RoundingRadius->7]}, 
          {Thickness[0.03571428571428571]}}, InsetBox[
          GraphicsBox[{{}, {{}, {}, 
             TagBox[
              {Hue[0.47, 0.97, 0.61], PointSize[
                NCache[
                 Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
               1.3], LineBox[CompressedData["
1:eJxdkm1Ik1EUx0domWSgpUVmWQStNcuXLMj0mFJCITqtIFSC0LAx24Q0U8kI
kvow/TLMtlBBTdNaiTI3HZ7NbdWiVEwxG5qrp8yyqZsvW24un+e5nzpwuRzu
vb/zv+f8910VZ+Rt4HA4MeuL3knoItt31zgTWlC95/5vgXoNJTm1wkl7GxbG
+481SjyoqU4Kv+5V4qHs6v4lrht5p46m7njVgdbS7coU618sftemM2/sQvlj
Olx4wRvGi7qjwgwG6MSDE+I61VYN0rR4/xU0f7jn06DsxXUYTURZva/dIejD
MhpXuohlh2NrY4t0GMOEAz8Fjp3WdOpxVkADF1AtLSrZa+nHJgktcB5vid6G
rk4ZiH4bpg/K45Y1RmTo3FlMab0pXb1sIvpmULpiCRR2mYieabxdwLcJtCZk
vlNKYbfonFOdayL1rPjzj4+DajAS/iQOUe6AZ7kGrGV441g+qvrV2aTHcub9
CG4alBeqXvSR+wOYUHPgm4FSYwlzbsTzyTmdoqkOvMvkXZgXNDcs4zci578g
5yAPKdBGmJuBzY3w8vua5WJwN+hYPtR/tLvmzvQDyx+BG/qqS9N1ZiD64POR
hCZ4MwREP6Q/r8z1+I4C+R9QfJvhUeU4sPopUNiPb7uWPAlb2P6AsnfnEldh
hSds/0Ct2B9cwaeA9BdCoqO/FA//IHwbUMK67JGHM0DmA7zXD1LFabOk3gII
EzOvJIXPwTF2vuBKd/pr3fOk/iIEiFtkJ0V2IP4As8IvTDLhAOIfiGjLkmSm
LQHxF1T0nAjl6JeB+A+aNSuVqignfGX9CXEDm4MsDS7gsf6F/Hxt6mLAKkhY
f4Od61fVWuIm+tfgfVaks2fKA2QMiU93pcX5nfXCP7/es1w=
                "]]},
              Annotation[#, "Charting`Private`Tag#1"]& ]}, {{}, {}}},
           AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
           Axes->{True, True},
           AxesLabel->{None, None},
           AxesOrigin->{0, 0},
           AxesStyle->GrayLevel[0, 0.3],
           Background->GrayLevel[0, 0],
           DisplayFunction->Identity,
           Frame->{{False, False}, {False, False}},
           FrameLabel->{{None, None}, {None, None}},
           FrameTicks->{{None, None}, {None, None}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{25, 25},
           
           Method->{
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
             Automatic, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}},
           PlotRange->{{-2., 2.}, {-0.16980957154815338`, 1.954597694087775}},
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.1], 
              Scaled[0.1]}, {
              Scaled[0.1], 
              Scaled[0.1]}},
           Ticks->{{}, {}}], {14, 14}, Center, Scaled[0.784]]},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-3.000000026794896, -0.9999999196153085}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 19.75}, {
            18.312500953674316`, 19.75}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 15.916699409484863`}, {
            18.312500953674316`, 15.916699409484863`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 12.083300590515137`}, {
            18.312500953674316`, 12.083300590515137`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 8.25}, {
            18.312500953674316`, 8.25}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 20.687000274658203`}, {19.249998092651367`, 
            20.687000274658203`}, {19.249998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            21.187000274658203`}, {16.875, 21.187000274658203`}, {16.875, 
            18.312000274658203`}, {19.75, 18.312000274658203`}, {19.75, 
            21.187000274658203`}}, {{18.75, 19.312000274658203`}, {17.875, 
            19.312000274658203`}, {17.875, 20.187000274658203`}, {18.75, 
            20.187000274658203`}, {18.75, 19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 16.8539981842041}, {19.249998092651367`, 
            16.8539981842041}, {19.249998092651367`, 14.978998184204102`}, {
            17.374998092651367`, 14.978998184204102`}, {17.374998092651367`, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            17.3539981842041}, {16.875, 17.3539981842041}, {16.875, 
            14.478998184204102`}, {19.75, 14.478998184204102`}, {19.75, 
            17.3539981842041}}, {{18.75, 15.478999137878418`}, {17.875, 
            15.478999137878418`}, {17.875, 16.354000091552734`}, {18.75, 
            16.354000091552734`}, {18.75, 15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 13.021000862121582`}, {19.249998092651367`, 
            13.021000862121582`}, {19.249998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            13.521000862121582`}, {16.875, 13.521000862121582`}, {16.875, 
            10.646000862121582`}, {19.75, 10.646000862121582`}, {19.75, 
            13.521000862121582`}}, {{18.75, 11.645999908447266`}, {17.875, 
            11.645999908447266`}, {17.875, 12.520999908447266`}, {18.75, 
            12.520999908447266`}, {18.75, 11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 9.188000679016113}, {19.249998092651367`, 
            9.188000679016113}, {19.249998092651367`, 7.313000679016113}, {
            17.374998092651367`, 7.313000679016113}, {17.374998092651367`, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            9.688000679016113}, {16.875, 9.688000679016113}, {16.875, 
            6.813000679016113}, {19.75, 6.813000679016113}, {19.75, 
            9.688000679016113}}, {{18.75, 7.812000274658203}, {17.875, 
            7.812000274658203}, {17.875, 8.687000274658203}, {18.75, 
            8.687000274658203}, {18.75, 7.812000274658203}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 20.687000274658203`}, {10.625, 20.687000274658203`}, {
            10.625, 18.812000274658203`}, {8.75, 18.812000274658203`}, {8.75, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            21.187000274658203`}, {8.250000953674316, 21.187000274658203`}, {
            8.250000953674316, 18.312000274658203`}, {11.125000953674316`, 
            18.312000274658203`}, {11.125000953674316`, 
            21.187000274658203`}}, {{10.125000953674316`, 
            19.312000274658203`}, {9.250000953674316, 19.312000274658203`}, {
            9.250000953674316, 20.187000274658203`}, {10.125000953674316`, 
            20.187000274658203`}, {10.125000953674316`, 
            19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 16.8539981842041}, {10.625, 16.8539981842041}, {10.625, 
            14.978998184204102`}, {8.75, 14.978998184204102`}, {8.75, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            17.3539981842041}, {8.250000953674316, 17.3539981842041}, {
            8.250000953674316, 14.478998184204102`}, {11.125000953674316`, 
            14.478998184204102`}, {11.125000953674316`, 17.3539981842041}}, {{
            10.125000953674316`, 15.478999137878418`}, {9.250000953674316, 
            15.478999137878418`}, {9.250000953674316, 16.354000091552734`}, {
            10.125000953674316`, 16.354000091552734`}, {10.125000953674316`, 
            15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 13.021000862121582`}, {10.625, 13.021000862121582`}, {
            10.625, 11.146000862121582`}, {8.75, 11.146000862121582`}, {8.75, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            13.521000862121582`}, {8.250000953674316, 13.521000862121582`}, {
            8.250000953674316, 10.646000862121582`}, {11.125000953674316`, 
            10.646000862121582`}, {11.125000953674316`, 
            13.521000862121582`}}, {{10.125000953674316`, 
            11.645999908447266`}, {9.250000953674316, 11.645999908447266`}, {
            9.250000953674316, 12.520999908447266`}, {10.125000953674316`, 
            12.520999908447266`}, {10.125000953674316`, 
            11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 9.188000679016113}, {10.625, 9.188000679016113}, {10.625, 
            7.313000679016113}, {8.75, 7.313000679016113}, {8.75, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            9.688000679016113}, {8.250000953674316, 9.688000679016113}, {
            8.250000953674316, 6.813000679016113}, {11.125000953674316`, 
            6.813000679016113}, {11.125000953674316`, 9.688000679016113}}, {{
            10.125000953674316`, 7.812000274658203}, {9.250000953674316, 
            7.812000274658203}, {9.250000953674316, 8.687000274658203}, {
            10.125000953674316`, 8.687000274658203}, {10.125000953674316`, 
            7.812000274658203}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-2.0000000267948965, -0.9999999464102056}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], FaceForm[{RGBColor[
          0., 0.46549999999999997`, 0.3537800000000001], Opacity[1.]}], 
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}}}, {{{13.19140625, 13.171142578125}, {
           10.551025390625, 13.171142578125}, {10.551025390625, 
           14.731201171875}, {13.19140625, 14.731201171875}, {13.19140625, 
           17.48876953125}, {14.81005859375, 17.48876953125}, {14.81005859375,
            14.731201171875}, {17.450439453125, 14.731201171875}, {
           17.450439453125, 13.171142578125}, {14.81005859375, 
           13.171142578125}, {14.81005859375, 10.409912109375}, {13.19140625, 
           10.409912109375}, {13.19140625, 13.171142578125}}}]}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-0.9999999999999997, 2.6794897029117842*^-8}], 
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}, InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            21.5, 14.}, {21.5, 14.}, {18.142000198364258`, 19.}, {14., 19.}, {
            9.857999801635742, 19.}, {6.5, 14.}, {6.5, 14.}, {6.5, 14.}, {
            9.857999801635742, 9.}, {14., 9.}, {18.142000198364258`, 9.}, {
            21.5, 14.}, {21.5, 14.}}},
            CurveClosed->{1}]}, 
          {FaceForm[{RGBColor[0.5, 0.73275, 0.67689], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAEdBzDVYASi43ad1EXm9+Sk64Po+iwZMP9K
hacBiG7IqjEE0R48j8D8WTNvGkD0OYDFbyz+oI/MBwI9ZL5CDL8Osv4DZ3y0
kM1n0GbXRLafQfu4Oqr7GNQdUNwP4S9yNdNC5pdMnqGBrD+CL1cd2fyC59Zq
yPYDfaaK7D4YH+F+CB/mP5h+mP9h5sPCB2Y/LPwQ7oOELwNy+AMA0xJGWA==

            "]]}, 
          {RGBColor[0., 0.46549999999999997`, 0.3537800000000001], Opacity[
           1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAEdBzDVYASi43ad1EXm9+Sk64Po+iwZMP9K
hacBiG7IqjEE0R48j8D8WTNvGkD0OYDFbyz+oI/MBwI9ZL5CDL8Osv4DZ3y0
kM1n0GbXRLafQfu4Oqr7GNQdUNwP4S9yNdNC5pdMnqGBrD+CL1cd2fyC59Zq
yPYDfaaK7D4YH+F+CB/mP5h+mP9h5sPCB2Y/LPwQ7oOELwNy+AMA0xJGWA==

            "],
            CurveClosed->{1}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-8.000000053589792, -1.9999997856408231}], InsetBox[
       GraphicsBox[{{
          {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
           0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
           RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
            RoundingRadius->7]}, 
          {Thickness[0.03571428571428571]}}, InsetBox[
          GraphicsBox[{{}, {{}, {}, 
             TagBox[
              {Hue[0.47, 0.97, 0.61], PointSize[
                NCache[
                 Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
               1.3], LineBox[CompressedData["
1:eJxd0z9IQlEUx/FHozQ2B23Waquctmadm4LmbItXQ0PNLQ4V4ZKLiyAIKojn
mU/8g0qDEC2BIUQkkmT0h5K8735p6MLjMzze75577nkr27vxnQXHcSLzx8jy
LDdaXD55jhVn2NO9aOj2KvGDXV3dOr1+C39jRwfuUnZz8IVtvTg36xNbGg+C
PrCpJiUaeseGzkNMEtb1wMS4U/Q1EqxXrOkoZoImWNV0whT2gh51j7GiQXp4
hGXqesISdTxiQYNjuEPMs88Ac+TeY1bPgpw7zOhh8F0f0399tKZ0n3NZk3rE
PtZjdf4t3gvv0cekeDYfU2Jz+5gW6sOMUD9mhfNhTmzdQ8zLou0PFuTS9g9L
Qn+xTO4YK8L9oMc+E6zKur1frLHvFH1hPrAuzA82hPnCpjB/2JIHO5/YljU7
v9iRhJ1v7FL3DHvCNWzwf8gvjpmkMA==
                "]]},
              Annotation[#, "Charting`Private`Tag#1"]& ]}, {{}, {}}},
           AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
           Axes->{True, True},
           AxesLabel->{None, None},
           AxesOrigin->{0, 0},
           AxesStyle->GrayLevel[0, 0.3],
           Background->GrayLevel[0, 0],
           DisplayFunction->Identity,
           Frame->{{False, False}, {False, False}},
           FrameLabel->{{None, None}, {None, None}},
           FrameTicks->{{None, None}, {None, None}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{25, 25},
           
           Method->{
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
             Automatic, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}},
           PlotRange->{{-2., 2.}, {-0.25, 0.25}},
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.1], 
              Scaled[0.1]}, {
              Scaled[0.1], 
              Scaled[0.1]}},
           Ticks->{{}, {}}], {14, 14}, Center, Scaled[0.784]]},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-9.000000026794893, -0.9999997588459264}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 19.75}, {
            18.312500953674316`, 19.75}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 15.916699409484863`}, {
            18.312500953674316`, 15.916699409484863`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 12.083300590515137`}, {
            18.312500953674316`, 12.083300590515137`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{9.6875, 8.25}, {
            18.312500953674316`, 8.25}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 20.687000274658203`}, {19.249998092651367`, 
            20.687000274658203`}, {19.249998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            18.812000274658203`}, {17.374998092651367`, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            21.187000274658203`}, {16.875, 21.187000274658203`}, {16.875, 
            18.312000274658203`}, {19.75, 18.312000274658203`}, {19.75, 
            21.187000274658203`}}, {{18.75, 19.312000274658203`}, {17.875, 
            19.312000274658203`}, {17.875, 20.187000274658203`}, {18.75, 
            20.187000274658203`}, {18.75, 19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 16.8539981842041}, {19.249998092651367`, 
            16.8539981842041}, {19.249998092651367`, 14.978998184204102`}, {
            17.374998092651367`, 14.978998184204102`}, {17.374998092651367`, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            17.3539981842041}, {16.875, 17.3539981842041}, {16.875, 
            14.478998184204102`}, {19.75, 14.478998184204102`}, {19.75, 
            17.3539981842041}}, {{18.75, 15.478999137878418`}, {17.875, 
            15.478999137878418`}, {17.875, 16.354000091552734`}, {18.75, 
            16.354000091552734`}, {18.75, 15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 13.021000862121582`}, {19.249998092651367`, 
            13.021000862121582`}, {19.249998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            11.146000862121582`}, {17.374998092651367`, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            13.521000862121582`}, {16.875, 13.521000862121582`}, {16.875, 
            10.646000862121582`}, {19.75, 10.646000862121582`}, {19.75, 
            13.521000862121582`}}, {{18.75, 11.645999908447266`}, {17.875, 
            11.645999908447266`}, {17.875, 12.520999908447266`}, {18.75, 
            12.520999908447266`}, {18.75, 11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[0.7972296, 0.656405, 0.8635], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            17.374998092651367`, 9.188000679016113}, {19.249998092651367`, 
            9.188000679016113}, {19.249998092651367`, 7.313000679016113}, {
            17.374998092651367`, 7.313000679016113}, {17.374998092651367`, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.75, 
            9.688000679016113}, {16.875, 9.688000679016113}, {16.875, 
            6.813000679016113}, {19.75, 6.813000679016113}, {19.75, 
            9.688000679016113}}, {{18.75, 7.812000274658203}, {17.875, 
            7.812000274658203}, {17.875, 8.687000274658203}, {18.75, 
            8.687000274658203}, {18.75, 7.812000274658203}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 20.687000274658203`}, {10.625, 20.687000274658203`}, {
            10.625, 18.812000274658203`}, {8.75, 18.812000274658203`}, {8.75, 
            20.687000274658203`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            21.187000274658203`}, {8.250000953674316, 21.187000274658203`}, {
            8.250000953674316, 18.312000274658203`}, {11.125000953674316`, 
            18.312000274658203`}, {11.125000953674316`, 
            21.187000274658203`}}, {{10.125000953674316`, 
            19.312000274658203`}, {9.250000953674316, 19.312000274658203`}, {
            9.250000953674316, 20.187000274658203`}, {10.125000953674316`, 
            20.187000274658203`}, {10.125000953674316`, 
            19.312000274658203`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 16.8539981842041}, {10.625, 16.8539981842041}, {10.625, 
            14.978998184204102`}, {8.75, 14.978998184204102`}, {8.75, 
            16.8539981842041}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            17.3539981842041}, {8.250000953674316, 17.3539981842041}, {
            8.250000953674316, 14.478998184204102`}, {11.125000953674316`, 
            14.478998184204102`}, {11.125000953674316`, 17.3539981842041}}, {{
            10.125000953674316`, 15.478999137878418`}, {9.250000953674316, 
            15.478999137878418`}, {9.250000953674316, 16.354000091552734`}, {
            10.125000953674316`, 16.354000091552734`}, {10.125000953674316`, 
            15.478999137878418`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 13.021000862121582`}, {10.625, 13.021000862121582`}, {
            10.625, 11.146000862121582`}, {8.75, 11.146000862121582`}, {8.75, 
            13.021000862121582`}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            13.521000862121582`}, {8.250000953674316, 13.521000862121582`}, {
            8.250000953674316, 10.646000862121582`}, {11.125000953674316`, 
            10.646000862121582`}, {11.125000953674316`, 
            13.521000862121582`}}, {{10.125000953674316`, 
            11.645999908447266`}, {9.250000953674316, 11.645999908447266`}, {
            9.250000953674316, 12.520999908447266`}, {10.125000953674316`, 
            12.520999908447266`}, {10.125000953674316`, 
            11.645999908447266`}}}]}, 
          {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            8.75, 9.188000679016113}, {10.625, 9.188000679016113}, {10.625, 
            7.313000679016113}, {8.75, 7.313000679016113}, {8.75, 
            9.188000679016113}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
            2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.125000953674316`, 
            9.688000679016113}, {8.250000953674316, 9.688000679016113}, {
            8.250000953674316, 6.813000679016113}, {11.125000953674316`, 
            6.813000679016113}, {11.125000953674316`, 9.688000679016113}}, {{
            10.125000953674316`, 7.812000274658203}, {9.250000953674316, 
            7.812000274658203}, {9.250000953674316, 8.687000274658203}, {
            10.125000953674316`, 8.687000274658203}, {10.125000953674316`, 
            7.812000274658203}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-7.000000053589791, -1.9999998124357201}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], FaceForm[{RGBColor[
          0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
          FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
           3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJpIGZiAIOEBfJqDiDGhgYjEJ3QYKCJwl+wVxfMf5Cn
DeY/CNYH8x0uqYP5CemofIVwCF9hiwZE3gEqvwxsbsIBFSh/lRaEzwXlr4OY
f+CvHkT/Kh0UfsN8XRQ+1H0GB94bYOUzMKhA3H9OD4Xf4Ai2lyFhOsS8B2vA
7mSYMN0AYv50VP6ClRC+gQqEn3AAwncI04fwb0H4ByL0IPwvEP6DGIj5DMyQ
8HRI0UHhw8ITxoe7Fxof6HyQ/wDn9FU8
           "]]}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-5.000000026794895, -0.9999998660255145}]},
     FontSize->10]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{35., 35.}, {35., 25.}},
  ImageSize->{729.9999999999998, 300.0000064307752},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.950958229285536*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"cca3cd2a-d6fe-6e40-b7e1-118600412c1e"]
}, Open  ]],

Cell["\<\
Each attention block has multiple attention heads to \
\[OpenCurlyDoubleQuote]pay attention\[CloseCurlyDoubleQuote] to different \
parts of the data. The graphic below shows the weights for this four-token \
input:\
\>", "Text",
 CellChangeTimes->{{3.950211855168751*^9, 3.950211860872278*^9}, {
  3.9502118951380024`*^9, 3.950211930535656*^9}, {3.9509587740102463`*^9, 
  3.95095879888365*^9}},ExpressionUUID->"d7d0897e-b7cc-e24b-bc5c-\
669de4d904ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"prompt", ",", "weights"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prompt", "=", "\"\<2 + 2 =\>\""}], ";", 
    RowBox[{"weights", "=", 
     RowBox[{
      RowBox[{
      "NetModel", "[", "\"\<GPT2 Transformer Trained on WebText Data\>\"", 
       "]"}], "[", 
      RowBox[{"prompt", ",", 
       RowBox[{"NetPort", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<decoder\>\"", ",", "1", 
          RowBox[{"(*", "level", "*)"}], ",", "1", 
          RowBox[{"(*", 
           RowBox[{"attention", " ", "residual", " ", "block"}], "*)"}], ",", 
          "\"\<attention\>\"", 
          RowBox[{"(*", 
           RowBox[{"attention", " ", "block"}], "*)"}], ",", "5", 
          RowBox[{"(*", 
           RowBox[{"attention", " ", "layer"}], "*)"}], ",", 
          "\"\<AttentionWeights\>\""}], "}"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"MatrixPlot", "[", 
            RowBox[{
             RowBox[{"weights", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "n"}], 
               RowBox[{"(*", "head", "*)"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FrameTicks", "\[Rule]", "None"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "12"}], "}"}]}], "]"}], ",", "6"}], "]"}], 
       "]"}], ",", 
      RowBox[{"Framed", "@", 
       RowBox[{"Style", "[", 
        RowBox[{"prompt", ",", "\"\<Text\>\"", ",", "Bold"}], "]"}]}], ",", 
      "Top"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9509238345950623`*^9, 3.9509238686750984`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"91db6606-7e10-5649-b99f-f8c854a72cc0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQW+3ULPZDfm/sc+xl17F5P7VnfWwc8WT7aftJT29u
eH/8jf3nS5u8vsQ8t7/ifqrGguGa/bec3sCQv2/tk7+kcNYavrHfz52ptTX0
mb1FVtMyrt1v7ac/a2BjNH9tX/Fmlqjuqcf2WtKtnPMmvbavdZgU3Xztof2C
V70Kx81q7DWSJxfbMr+x99nX8+QYwxP7ad8PVglOOmh/PNjopVTyO/sjhtcW
C216a/9s6uJKbrtX9gxg8AGDtvDXrXFvfmv/njFuk8el+/ZTXia8C9ucbx/Z
yzhjo9lbex6XgjJ/x5f2i7P8zRwL7+I0hxD9sEpknfvDW1A+DJBuDjoNAF+W
hmk=
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        195.42857142857142`, -191.69365333333337`}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ2zjk6kdD03f2Bvp8JtNZ3trXLftRf7bqhb2ok1HI
Squ39jXzFuc+Dnxpf20XQ+WmHXftU3Y35M878tbeTP/mBsPo1/Zsl2Xd/TWe
2O+7f023ueqtvQBDycTNj+/bH3TZ8KRTsMDexVrZYNa/t/ZSho8zfcze2Luc
9hG1SHpmH7psyaHbvW/tOSqZd7r0vLLnUcxiFeF7ZH/sya7bzRPf2a9Xeb8p
Zedde6XZM65z2SfZM4DBBwx6Y95SpS/Z7+xdLNTCmy6/tZ/KXfCPeeor+7xH
WS1Hg97bX/ki/6fA8o79go93vY/ZB+I0hxD9sEpknfvDW1A+DJBuDjoNAM0n
hfk=
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        586.2857142857142, -191.69365333333337`}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQe9+bGtbTjG/s/+lt/FL067H9k4PCS70SDtpv4Hu7
Nv3qW/vYzbvuzZ/12n7X9U49n7NP7GdvnMvIkfTW/v/2Yo0Vz17a20w69cwv
/oG9ml3L72+z39rrhlnNmnTwlf0543LFXTMe2Sutvx1/vve1vRTXibuetx/a
i4Sz3cwMrbFfv3td57bdb+wTWYVlG9Sf27sccHz4S/eqfZzr9GP9im/t/e+0
LHv65IX9j6PbOE+w3rFnAIMPGPSSte3bWGe8sxetmSpQvuau/ZG068uk3iTa
J01mFWc3fGfvWZd79fqXN/YqvuH91wNf4DSHEP2wSmSd+8NbUD4MkG4OOg0A
rwCN1g==
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        977.1428571428571, -191.69365333333337`}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQW3sf18adUe/sq6pSMzImvbWvikwvX/f6pT1X5HGV
wCdv7Z/WvhX9eem1/a2rjpl345/aS3KcaFMufGv/L2NJ6z75V/Y9nz3kz3x+
YN+RM0E49v8be45fSQz6OQ/sr0u+tglTKraXKAsxS5F9Z38/2r1vyao39tZP
ok2uT3huf2ra3Y0xum/tT/3jaWqQeGmvyPCK+cCFO/azvGdsWnX8rf0kNW7X
LK/79tIbG8K2eOfYM4DBBwy61uiji/rKt/bJSZd2ZHx+ZZ/4t1AyWuqx/d4v
u/Rmv3ln736lXDCb5a79DWeR9cI50TjNIUQ/rBJZ5/7wFpQPA6Sbg04DAOx+
iCc=
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {1368., -191.69365333333337`}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ+4r6rLlyX9/Yy/X5Pu9WemE/cdckuwTOm/bfvj2Y
uMjyrf3U5W3tTH4v7VeXX7ZtXXLX/pSET9hksXf2lSni8o8nvLFP5eeWven7
3F65vU1/aewb+7WuO8MVe57ah86f3Mmy46w9y9F7qbbLX9uLtSw/X5T3yN5i
eeQhhqtL7A9fZFn4ZNdb+++xqlGFZq/tecp3Jmw/8dj+1TQOkc8r3ti7cy38
XXj1mX0G53cp+9eX7RnA4AMGPa9e29V46lv7xOP/Xq9dd9/+6befJm/P5dkz
/LjF8aforf2dUFOmHWqv7JkUlwZ/YH2I0xxC9MMqkXXuD29B+TBAujnoNAAt
nIng
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        1758.8571428571427`, -191.69365333333337`}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQO2PJpT0Z+9/ac3rZ/m10f20fnBE5RerrY3v2uu2S
H/6+tfc1dd900viNPSvz/8AN0c/sv8c49x7Kfmff1Cf369ilt/b9XU5LZSa/
srcLkLcJ03pvL7f8f8Kxzjv2Z26eC653C7VnvNS4fWLPG3uZstlLQyOf2XdE
fa6SYr5kr7rN7FaF6Tv7oDxr1cWsb+3Dt+8paKt9Yb9Lpb0z+MBre6kZK5Ol
Vz60T7Vic6wRrrZnAIMPGHTAAyPxaMe39vYz2Lz1s1/ay7au5/S2uWcf/+Oq
/rLFb+111j2Q+jnxvj3zuVWTj4jl4TSHEP2wSmSd+8NbUD4MkG4OOg0AZRGD
jQ==
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        2149.7142857142853`, -191.69365333333337`}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQuz12gZHlvDf2SRNdn3cue2b/9m3huYNGl+3F2zkj
SwLf2IdcF22/GPbUPtExKna5yBn75hdCeyJl3tnnv+CYvXXZG/s7+4K45rQ9
t3d/vy6uX/itfWa66oxVy1/Ys2TL8X0RuW3fp/epKcnsjX311dpVV4wf2lvG
zs1XUK6wr/xrXHL//lt7A5MKHr1Dr+0nVlyz0zd5av/la8ec5VFv7Zt+eqWd
OPXS/vq1fbrnxB7YM4DBBwzae/NaD2agex7cnmd9fdE9+4Tj2S2rJTLsbaaw
nW2d+9b+z5SSRaXHX9mfWiHLy7XiEU5zCNEPq0TWuT+8BeXDAOnmoNMAsfGJ
UA==
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        195.42857142857142`, -575.0809600000001}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQe140R3zxzzf2Ze+LFtaYvrB3DVR6fi/4pn2SkPT0
6wVv7X8skJ4yX+6VfcW95wcffnhgz/NuecdE/jf2NgKy1zaYPbGf91hDUNvq
sD3Tj89Z4Rve2qevLNOexPfaPv7CzbmMiY/t5z18z7Nt1ht7pudPL+pOf2Zv
21WUE/Htkr151ikDr0Wv7R8m7Dj58dhDe88AloXPLlXbGyX4HON69db+wo/v
wbNfvLYP80u4rTTjqT0DGHzAoK2+Pm6JPvnOvu6o/cUir7v2L1bKBM56F2fv
FFtjM8PhnT3PE/u1q/Tf2m+3XvPixqsXOM0hRD+sElnn/vAWlA8DpJuDTgMA
FrCOnQ==
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        586.2857142857142, -575.0809600000001}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQW+2NS/OnlW/tRVZy78r49sq+xeTPPg2lx/Yh7ytS
Q1nf2LsKT5rSl/LQft6hAx+2R1faa8ddMF/67a29m26IlbXEG/uOWZJczCLP
7Dle1SgL6b6zt1u6Q+3J0zf2Tt3duZ+1XtjLT5p+zUjsrb3ozskNJptf2K9W
dlULc7ptL2x+ufTgpTf20jJG1116ntt7s6avDdh1zf7p6oQ5vjZv7C0YQ02C
fj2xv9PFdI7b9qQ9Axh8wKB3PIjWWsf/1r6n99i0n9EP7LdcfLUkaleRvUOL
e8Gkjjf2C8qEd95yf2YvsreRM2rfRZzmEKIfVomsc394C8qHAdLNQacB8WOD
2A==
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        977.1428571428571, -575.0809600000001}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQe3LepBNJwm/s477uq0hyf2KvNPXMhJq9h+0frHqw
5hnvW3vOyAbX130v7O/4ZObO23zLXvhtHseeyW/tZZvTflcsemW/SZPT9ar7
I/u9gVk8l6Xf2V/95rpyx5I39u4/sq0LGp/bax16KZY467U9Q8a8irPnHtpX
vlwrG8BaY/9hwVQO29Nv7L2Fr4mkZj+3fyX1I5fF8pp9ntivn2eC3to3PVHc
JbX2pX2ebuMX88n37RnA4AMGrSKwur37/1t7loKlWmm379mzWIseamzOtP96
fUnErlNAd65e4Ode9Nr+winWzVEpT3CaQ4h+WCWyzv3hLSgfBkg3B50GAEbB
ipU=
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {1368., -575.0809600000001}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ+8Sm4IshGm/s18zaGvh70RP7lHtSqsx9x+wvcrdY
u7e/tf8m7BKcXvzKPkHxllD62Yf2iivF9+qqvrP/UhA4RfDEG/ugin77xLvP
7TdeYCoXsn1rf6ZcN/d/1Ev7KZav3oq+uGt/PHfW56zDr+2rTP6Ycy57aP9i
jd2hE/+r7H1UrBUEHry1331n6/enh17bv/mWvojX7Kn9x0rWxxlf3tjXKlrp
Fcq/sL/TPLFe6+8NewYw+IBBC++aYOrL/9a+conM88iYB/bHW9+0HtlTZF9r
NGlFbscb++3fGB5auj+z/9J5Ouvh7os4zSFEP6wSWef+8BaUDwOkm4NOAwDn
94zs
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        1758.8571428571427`, -575.0809600000001}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[
         RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQe+HDzD+ZO1/bv9HJ1ny795H9Cos/34/NXGc/6znH
zDvSb+2to+qrf5x+Yc8eEimxb/Fte9kLncULPr213/K5/AQ35xt72ZuPSpvf
PLXnn8ZVG2X0zn6bbWTorZ9v7E/rHSq+H/fCfnaqv91Lpjf2SvJX5n9Le2i/
pUWMXSO70t5cQn1O44E39usn/3Eos3lu73yCYXpOw1V7X83X6c82vbU3555u
bCvx2v5ClWmyetVjewYw+IBBe3wN+fqa9Z39Gj+dj7vO3bPn42ieZW2UaX/C
dY99bMJb+7hFDr3RD17at+msiH/j9wCnOYToh1Ui69wf3oLyYYB0c9BpAFrL
iaI=
          "], {{0, 0}, {4, 4}}, {0, 1}], {
         DisplayFunction -> Identity, 
          ImagePadding -> {{0.5, 0.5}, {0.5, 0.5}}, Frame -> True, 
          FrameLabel -> {None, None}, 
          FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}}], {
        2149.7142857142853`, -575.0809600000001}, 
        ImageScaled[{0.5, 0.5}], {360., 359.4256000000001}, 
        BaseStyle -> {
         Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}}, 
    ImageSize -> {
      UpTo[600], 
      UpTo[700]}, {PlotRangePadding -> Automatic}, 
    Method -> {"IgnoreImageSizeAutomaticLimit" -> True}], 
   FrameBox[
    StyleBox["\"2 + 2 =\"", "Text", Bold, StripOnInput -> False], 
    StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.950923847152649*^9, 3.950923869422497*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"a581c0ce-bcb0-b347-92ec-307c47ff9adb"]
}, {2}]],

Cell[TextData[{
 "The above matrices being lower triangular are a consequence of using ",
 StyleBox["causal attention",
  FontWeight->"Bold"],
 ": the model can\[CloseCurlyQuote]t \[OpenCurlyDoubleQuote]cheat\
\[CloseCurlyDoubleQuote] by reading the end of a string before it is \
generated. Enforcing the causality constraint is relevant for text prediction \
but can have disadvantages for other applications."
}], "Text",
 CellChangeTimes->{{3.9502119351155376`*^9, 3.9502119817762127`*^9}, {
  3.9509585980581284`*^9, 
  3.9509586990269413`*^9}},ExpressionUUID->"149164b2-30b5-f14a-9417-\
b65c0c5d3a77"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vector Databases", "Section",
 CellChangeTimes->{{3.9502102869344406`*^9, 
  3.950210294687481*^9}},ExpressionUUID->"4d021222-d756-2b47-9109-\
e7daad6cdf83"],

Cell[TextData[{
 "A ",
 StyleBox["vector database",
  FontWeight->"Bold"],
 " is commonly used as a tool to give language models additional information \
that they wouldn\[CloseCurlyQuote]t know out-of-the-box. Vector databases \
allow search by semantic content, not just keywords."
}], "Text",
 CellChangeTimes->{{3.950227207036352*^9, 3.9502272942854137`*^9}, {
  3.950959099554291*^9, 
  3.95095912361957*^9}},ExpressionUUID->"4d796b87-6396-f643-b1d0-\
d25e40531f80"],

Cell[CellGroupData[{

Cell["Embeddings of Text", "Subsection",
 CellChangeTimes->{{3.950209650743143*^9, 
  3.9502096546009274`*^9}},ExpressionUUID->"24a62344-128a-4341-9d19-\
236407e8bce4"],

Cell["\<\
In the graphical representation of GPT-2, notice that right before the \
classification layer, there is a 768-dimensional vector produced by the model:\
\>", "Text",
 CellChangeTimes->{{3.95020968833366*^9, 3.9502097608916225`*^9}, 
   3.9502097968513737`*^9, {3.9502274584095345`*^9, 
   3.9502274585422554`*^9}},ExpressionUUID->"7fa26a31-6973-e74f-90ce-\
7d88d6e6b0db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"languagemodel", ",", "\"\<SummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.950209658827669*^9, 3.9502096700244865`*^9}, {
  3.9502102537372646`*^9, 3.9502102611396427`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"a50f09d9-b631-924e-8336-c67b79b66089"],

Cell[BoxData[
 GraphicsBox[{{
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -9}, {-5.999999999999998, 1.6076938217470707*^-7}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"embedding\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-4.999999999999998, 
         1.339744851455892*^-7}], 
        Offset[{0, -20.5}, {-4.999999999999998, 1.339744851455892*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"classifier\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-1.9999999999999993`, 
         5.3589794058235685`*^-8}], 
        Offset[{0, -20.5}, {-1.9999999999999993`, 5.3589794058235685`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"probabili..\"\>",
         "\"probabilities\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "probabilities", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-41, 2]}, {-0.9999999999999997, 
         2.6794897029117842`*^-8}], 
        Offset[{0, -20.5}, {-0.9999999999999997, 2.6794897029117842`*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"decoder\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-3.9999999999999987`, 
         1.0717958811647137`*^-7}], 
        Offset[{0, -20.5}, {-3.9999999999999987`, 1.0717958811647137`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"last\"\>", NCache[
       Offset[{0, Rational[-41, 2]}, {-2.999999999999999, 
         8.038469108735353*^-8}], 
        Offset[{0, -20.5}, {-2.999999999999999, 8.038469108735353*^-8}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Output\"\>", Offset[{0, -9}, {0., 0.}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->RGBColor[
      0.4658823529411765, 0.6176470588235294, 0.6494117647058824]], 
    StyleBox[{InsetBox[
       StyleBox[
        StyleBox["\<\"n\"\>",
         StripOnInput->False,
         FontSlant->Italic],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294277*^-7, 5.4999999999999964}, \
{-5.4499999999999975, 1.4603218880869225*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716865`*^-8}], InsetBox[
       StyleBox["\<\"50257\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.499999999999996}, \
{-1.4499999999999993, 3.885260069222087*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.4999999999999964}, \
{-3.449999999999999, 9.244239475045655*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", 
          StyleBox["\"n\"", Italic, StripOnInput -> False], "\"768\""},
         "RowWithSeparators"],
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.4999999999999964}, \
{-4.449999999999998, 1.192372917795744*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.8974395678716846`*^-8}], InsetBox[
       StyleBox["\<\"768\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.143591762329427*^-7, 5.4999999999999964}, \
{-2.4499999999999993, 6.564749772133872*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999993, -3.897439567871685*^-8}], InsetBox[
       StyleBox["\<\"50257\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FrontFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        BackFaceColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        GraphicsColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177],
        FontColor->RGBColor[
         0.5615686274509804, 0.6211764705882353, 0.6305882352941177]], 
       Offset[{2.1435917623294266*^-7, 5.499999999999996}, \
{-0.4499999999999998, 1.2057703663103027*^-8}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999992, -3.8974395678716846`*^-8}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}, 
   {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.999999999999998, 
       1.6076938217470707`*^-7}, {-4.999999999999998, 1.339744851455892*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-1.9999999999999993`, 
       5.3589794058235685`*^-8}, {-0.9999999999999997, 
       2.6794897029117842`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.9999999999999987`, 
       1.0717958811647137`*^-7}, {-2.999999999999999, 8.038469108735353*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-4.999999999999998, 
       1.339744851455892*^-7}, {-3.9999999999999987`, 
       1.0717958811647137`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-2.999999999999999, 
       8.038469108735353*^-8}, {-1.9999999999999993`, 
       5.3589794058235685`*^-8}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 0.}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, {
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-5.4499999999999975, 1.4603218880869225*^-7}, {-0.25, 0}, Offset[10], {
       1., -3.897439567871689*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector of \"", 
            StyleBox["\"n\"", Italic, StripOnInput -> False], "\" indices \"", 
            StyleBox[
             
             TemplateBox[{
              "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "50257", 
               "\"\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Input\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector of ", 
          Style["n", Italic], " indices ", 
          Style[
           
           Row[{"(\[VeryThinSpace]range: ", 1, "..", 50257, 
             "\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}], 
        Style[
         Row[{"Input", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-1.4499999999999993, 3.885260069222087*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.8974395678716865`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-3.449999999999999, 9.244239475045655*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439567871685*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-4.449999999999998, 1.192372917795744*^-7}, {-0.25, 0}, Offset[10], {
       0.9999999999999996, -3.897439567871685*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
             TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
               StyleBox["\"n\"", Italic, StripOnInput -> False], 
               "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style[
           Row[{"(\[VeryThinSpace]size: ", 
             Style["n", Italic], "\[Times]768\[VeryThinSpace])"}], 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-2.4499999999999993, 6.564749772133872*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999998, -3.897439567871687*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823],
          PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-0.4499999999999998, 1.2057703663103027*^-8}, {-0.25, 0}, Offset[10], {
       0.9999999999999997, -3.8974395678716865`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                RGBColor[
                0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[10], {
                 0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   EdgeForm[
                    RGBColor[
                    0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   RGBColor[
                   0.6317647058823529, 0.6988235294117647, 
                    0.7094117647058823], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Output\""}, "RowDefault"], 
           RGBColor[
           0.4658823529411765, 0.6176470588235294, 0.6494117647058824], 
           StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 50257\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              RGBColor[
              0.6317647058823529, 0.6988235294117647, 0.7094117647058823], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 
                  0.7094117647058823]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[10], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 EdgeForm[
                  RGBColor[
                  0.6317647058823529, 0.6988235294117647, 
                   0.7094117647058823]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 RGBColor[
                 0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Output"}], 
         RGBColor[
         0.4658823529411765, 0.6176470588235294, 0.6494117647058824]]}, 
       Center], "Tooltip"]& ]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
        Offset[{2., 2.}, {0., 0.}]]}, InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{19.903200149536133`, 20.}, {
            19.903200149536133`, 16.}, {17.903200149536133`, 14.}, {
            13.903200149536133`, 14.}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
            9.903200149536133, 14.}, {7.903200149536133, 16.}, {
            7.903200149536133, 20.}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{1, 4, 3}}}, {{{13.903200149536133`, 14.}, {
            9.903200149536133, 14.}, {7.903200149536133, 12.}, {
            7.903200149536133, 8.}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[
           0.8313725490196079, 0.4117647058823529, 0.12941176470588237`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            18., 21.}, {22., 21.}, {22., 17.}, {18., 17.}, {18., 21.}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            12., 16.}, {16., 16.}, {16., 12.}, {12., 12.}, {12., 16.}}}]}, 
          {FaceForm[{RGBColor[
           0.6274509803921569, 0.8156862745098039, 0.49411764705882355`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6., 21.}, {10., 21.}, {10., 17.}, {6., 17.}, {6., 21.}}}]}, 
          {FaceForm[{Hue[0.5247747747747747, 0.43, 0.86], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6., 10.}, {10., 10.}, {10., 6.}, {6., 6.}, {6., 10.}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-4.999999999999998, 1.339744851455892*^-7}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {7.250000953674316, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {14.000000953674316`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{10.625000953674316`, 
            9.64120101928711}, {20.750001907348633`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {7.249997138977051, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {13.999998092651367`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Round"], JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{17.374998092651367`, 
            9.64120101928711}, {20.749998092651367`, 18.079200744628906`}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
            3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
            3, 3}}}, CompressedData["
1:eJxtlDFoE1EYxw/FJbgoLbU1Yi6X5nKmTc5cExxSeZuii+jQxSEIXaTabsXt
TSJOoYOTYEVwdnRwOFpcujkVtBSXSqHURbL75b33vfd/lxyEyz/H9/++7/fP
vfDZ5uP1i0EQXKLPPH0uBObKe2J86x3dFk7Lveb6WIvByVA9XxX/0vF957yv
9Mv7H5TeG512x/fdRw+V7pe2u9qvnGq/wNP56M0KalGaW8H6rav7GfrvLmxm
2J8qMpiPNcyvn6+KJx2s329+76D/TjSfYf/B9ReZP9/7zJ9fa7ef1rw/1zMf
42/5cX/my/NN8pftKdrumx+EbeRR+fWqhbzk2Y9l5Cln/i4V8vC0PLvSRD2Y
ad3C+t+11wn6i+5xw89DNvw8lMb5G7gv1zMP9uc8uD/zdPPZPJZQu/2MNvtz
PfNhf+bn8tB8XR4T/MMpGvMIC3lUkFdw+Okm8gySoxuFPMqePowWPJ08vebV
P7g8h/7y+bdZ7E/XrPDyUBrm1895X663PIw/8+L+zNPNZ/Moe9ruZ7TZH/Ko
oD/zgzxC4edR4J/r3ze+Rqjl2kFV9TkZai3/qLrheV//z4Z3lc5Hp8pHfHyn
5hClbe27cadi9vE0nQcpajovUqyn/28b/dPucQv707cWzsfaza/1lvxc8+rX
3i6if3qvU8f+X3o/64X54sL8cWG/GPfneubD/paf6c98eb5J/jKZpnlfyjdB
HpR/A3nR+xojT3qf68ibLk/TebCIms6LGtYTrwj96bypYn/6VsX5WMP8VdzX
1rs8Io+X6c88YT7Oo44a9otxf65nPuxv+dk8NF+XB/D/D5kFgAI=
            "]]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-1.9999999999999993, 5.3589794058235685*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Thickness[0.02903571512017931], Opacity[1.], CapForm["Round"], 
           JoinForm["Round"], 
           JoinedCurveBox[{{{0, 2, 0}}}, {{{8.375, 15.344499588012695`}, {
            19.625, 15.344499588012695`}}},
            CurveClosed->{0}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            13.945324897766113`, 6.005837440490723}, {8.312512397766113, 
            6.005837440490723}, {8.312512397766113, 6.517556190490723}, {
            10.984387397766113`, 9.669899940490723}, {8.824231147766113, 
            12.517556190490723`}, {8.824231147766113, 13.048806190490723`}, {
            13.625012397766113`, 13.048806190490723`}, {13.679699897766113`, 
            11.224587440490723`}, {12.945324897766113`, 
            11.224587440490723`}, {12.855481147766113`, 
            12.341774940490723`}, {9.921887397766113, 12.341774940490723`}, {
            11.937512397766113`, 9.654274940490723}, {9.464856147766113, 
            6.712868690490723}, {13.167981147766113`, 6.712868690490723}, {
            13.222668647766113`, 7.990212440490723}, {13.945324897766113`, 
            7.990212440490723}, {13.945324897766113`, 6.005837440490723}}}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQQHGj8bOABphdMCSiDa2cnOEERP6dygAqLzToaA
+QcEjoP5MwOywfwtj6+A+S/vNoH5Na23wHz1FzPBfJMl98H8Wxs2gPlLtj0C
82u+HUPhF3z5jcK3O6hhBKJ5PC6A+VnzfMH8D29Xg/kqe4vA/CuT28H8E7oT
wPwjaaFg/iPDZUYQ94mA+b9M90D5V5RB9J/uU2A+l2wnmP/G+CKYv6ffEMy/
c/s6mB9VfxMcHg7iEP4F20owny35nBFyeKGEHwBPclvI
             "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQSPY3gNHID0gcZiGRAtVvRTH0QHzDgD5i+59wDM
v8FiIguiXX6eB/M7zq4C879M2w/mS0xQkAPRBde2gPkbaueC+WesNoD5Pzrl
5UG0yvzVYL7DtIVgvoXSGjA/67qQAojWOLUJzP/zPgzMlyjaCeZP4pgN5ves
PwzmT+C4DeZn/L8A5vMXiyuC6Ckb34H5JybOAfOXqPOD/NdgtkReCcS3f6MP
9m/DhoVg/u0NAWD+qT3KyiB1TeU1YL7St+lg/tp/m8D8Off/gfio4QUAM1NU
yQ==
             "], CompressedData["
1:eJxV1HtIU1EcB/CLqdVAHUtzPtLNJ77mVHpgMTcKm0tq1KAhNWZoTIvSzNAs
d+2BLkVNLCaa0yIxkVBTjLQcaZkIaZuvSG2RxKQSnZBCSnm+1z/m4PLlwz33
nN/5ncP45y6fTHegKOrUxkNy41d2nI4TbyQ7Z5JHslNbAieF8vgkIzMq4GpV
BkwnPyCmbdwX8Fh0LbFRJF+Dp50NGP+IlRhAMmhXI8ZPvCmHs/yf4L1bziQ8
lvIY5tT7Bdp/P5uQBs91YH6q6dszWJlYDTtm/4IHHHTw4u+IIJLu6fmwpugO
rA9Og5UKEyw/kgQPnPcIxn74Ali6poS5P1xh3nAlzHb7GYvvzL1wef4grFfN
wzadAZY2sUJIyvpzYGULD97dcxTOer4vhKnPC95hk8ARImuMvbk9xfY2drVE
w9LQzfkqLUKSU+4zZH36Wu59WKmtQT16+TFYYT4Ea/musJ71Hvv/MNcYTdIq
OQGnFR6Ehatv0c+XZVYB+tLGh3l+D4lpk4bGeWnClcTi0woTzlvfLhAw5+kJ
j/Y4CZh61bhPFutKFMk8WaY/ydYuR7yf+hzpR7LEiQPn5S75os9/42EjNeuD
c/amGRcteyMPvINHHXbC9LZQ1G9pk3uRPLP+lPHdIS7J2gIO9k+lHoY7FKkw
PfzPk+SSrs/e4uVO5xg70+ulMlg9GIbva+SlsLDvJhxYNQyzuz/Blfnbcb5U
mQz1fLwtgoUiK1w1kgs3rBWj/sI/TXCbVor91hWY4GZzhC+zzjo8GsXeQzLZ
KwD3U53ojv5ppAnM/fXcz/TXfAHjV3UGWLaQAludv2K8JSYR1tiE8MX6KGa8
So/5Lw25x26ui/UXVKvYn7H1Ojz9ZZLph48LLPHshql7BtQf9LoKluuTiemr
skymP/EceGBSwsw3PkH2L15heTAOe0VscZn7LrQzHZkxssVns3s2z7MfDhc1
ww0j495M/dWw/Mg8PD9zC16ccUB9nPgrsLouwIc5z2G4t6Id93V17404e2/5
f/wP099AUQ==
             "]}]}, 
          {FaceForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQIXXLQdgNSCyufGIJot8BaYfyvC3BREx8Sz64Do
gjlOYP6mXBMw/1WrJ5gf1JEM5p8L8wHzz82ZCOZrPfMD80309oP5SfkBYH7F
ztco/IStobrI/D9+68F8MQt3MD+E8yeYz8FtCuafcHPWA9G/7iqB+QIadWB+
0XFOMN/FYJUexH0vTUB0icU1KP8kmF/x5BOYP3XRYjA/woRBH0S/u10O5lu0
8IL5ey97g/kMv7nB/B+bpMH8nkm/9JDDCyX8AJxVUUc=
             "], CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQRubRWaDkC64ctvQxA9zS4czFexEjIC06vtwHw3
UR0w/8hRXTC/6LgnmF+SLAvmi1mkg/kfFgmB+TXFbWC+DzsfmN/3bRmYvySb
E8xfUHkczN/xDsI/Wv8CzF8xTQDM5+vhMgbRM+zEwfzIGTpgPk+NIpgfMcMH
zH9xWg/Eb5h+NgvMF6nzAct/iVkL5p+QrgHxHbSfvQPz/y3ZC5YPeKNvAqLN
9P6D+aWfCsD81t1hWiBakX81mH/75GEw/17zPTAfJbwAZcRNfQ==
             "], CompressedData["
1:eJxV1GtIk1EYB/CXpaKIWGyEknhBbdN539SRImulrHVxeYEUK6+FzjnK/GBe
mLrSyspMbKLYupCWYiqalxKFhZfMkLygNclshJqm1JIyyzz/tw9zMP78OHvP
+5znOcwpURGRwqAoKnLrS3Lr85rv7SPcSvWIhEfSkBJIrGxjK+D08BCsx2pv
w31+B4mFVzSdMGu3hDjeO3gGtls+iudP2TL4xMm/wvH7nMy9cLNpBNbvjEhg
1v7j2N82KYNv9Dy1ybsFu1Rhf+qTSRus9jgAlx+ZgE0WUC9lbvkDjjrMgV9G
OfmTnLJkwsEhYtgxetWb5PmBVFhp3Q3zy6/BzeocWJNdB2sWeXBnXg9c07vk
RTJOOwYnz9bA/LN6mBUZCgenrsCNomVPkmLZOlxfWQazrKgAkpNir21uFsk9
jKz84tTDJW5j/99vyR7OrR2B5R1Kd5Ivxhro+uUGN5LdeXlwvvVFOM5WBItb
NjnoW7sZrJdUwZyyPvRPEBMGS5cUfPr839lkftliB3h+rZ1YExQyiHnb5Jey
6XmmwdKSJDZdrzUc3x4NNz3q8iPpUZgIX5akweZvFXDGuT3w6IAaFlZM+pJU
fZ6BlYZqWGjqzKHnmwBToypYLOTBuqEdOG9J1i74mbbQjT7PCu6BPssR/Vo1
+wAnzuqMrTwTIOMar+fov8HzlxbgVvkFzEdX9BfuXzXA4wVMvE/Tm4557uzw
he3G38E1zjHwQ9kh3A8BswDO7WqAN3gtcKeWgfu2br4Iz0piYJWDM/pjs3kP
rndNhqUndfDcdCM8lemP/W6s9cOsx0z41UQlLPRZRD1PpDL4hEUX/IYbCsed
Lvakz2dP++oxWNj7B/UIVFbwfOwczPg9jPOXrfXDg2FFsMu+Vjg1wQ+uuP8A
tsj9iH4qhyqIlRlzxbRrrxP3VVe4Gpuart1wN3bQ03F3ep434QlxE/yzGPuR
+mGXlCo4oiQJLh2+S/dfKII5z+t86Xka4K/vA3FfBXZcH2Nv+3/8B3j6SDI=

             "]}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-0.9999999999999997, 2.6794897029117842*^-8}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.5654919999999999, 0.263725, 0.7075], Thickness[
          0.03]}], FaceForm[RGBColor[0.9855164, 0.9754575, 0.99025]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {FaceForm[{RGBColor[
           0.6274509803921569, 0.8156862745098039, 0.49411764705882355`], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6.221999645233154, 18.73400115966797}, {9.045999526977539, 
            18.73400115966797}, {9.045999526977539, 8.734001159667969}, {
            6.221999645233154, 8.734001159667969}, {6.221999645233154, 
            18.73400115966797}}}]}, 
          {FaceForm[{RGBColor[
           0.42065599999999986`, 0.018300000000000014`, 0.61], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            12.81100082397461, 18.73400115966797}, {15.635000228881836`, 
            18.73400115966797}, {15.635000228881836`, 8.734001159667969}, {
            12.81100082397461, 8.734001159667969}, {12.81100082397461, 
            18.73400115966797}}}]}, 
          {FaceForm[{Hue[0.5247747747747747, 0.43, 0.86], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            19.39900016784668, 18.73400115966797}, {22.222999572753906`, 
            18.73400115966797}, {22.222999572753906`, 8.734001159667969}, {
            19.39900016784668, 8.734001159667969}, {19.39900016784668, 
            18.73400115966797}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            9.98699951171875, 15.73439884185791}, {11.868999481201172`, 
            13.73439884185791}, {9.98699951171875, 11.73439884185791}, {
            9.98699951171875, 15.73439884185791}}}]}, 
          {FaceForm[{RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            16.575298309326172`, 15.73439884185791}, {18.457298278808594`, 
            13.73439884185791}, {16.575298309326172`, 11.73439884185791}, {
            16.575298309326172`, 15.73439884185791}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-3.9999999999999987, 1.0717958811647137*^-7}], InsetBox[
       GraphicsBox[{
         {EdgeForm[{RGBColor[0.25, 0.599125, 0.5153350000000001], Thickness[
          0.03]}], FaceForm[RGBColor[0.975, 0.9866375000000001, 0.9838445]], 
          RectangleBox[{-1.5, -1.5}, {29.5, 29.5},
           RoundingRadius->7]}, 
         {Thickness[0.03571428571428571], 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            6.486000061035156, 15.5}, {9.486000061035156, 15.5}, {
            9.486000061035156, 12.5}, {6.486000061035156, 12.5}, {
            6.486000061035156, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            9.48599910736084, 15.5}, {12.48599910736084, 15.5}, {
            12.48599910736084, 12.5}, {9.48599910736084, 12.5}, {
            9.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            12.48599910736084, 15.5}, {15.48599910736084, 15.5}, {
            15.48599910736084, 12.5}, {12.48599910736084, 12.5}, {
            12.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {RGBColor[
           0.6509803921568628, 0.6509803921568628, 0.6509803921568628], 
           Opacity[1.], CapForm["Butt"], JoinForm[{"Miter", 1.}], 
           JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            15.48599910736084, 15.5}, {18.486000061035156`, 15.5}, {
            18.486000061035156`, 12.5}, {15.48599910736084, 12.5}, {
            15.48599910736084, 15.5}}},
            CurveClosed->{1}]}, 
          {EdgeForm[{RGBColor[0., 0.46549999999999997`, 0.3537800000000001], 
           Opacity[1.], Thickness[0.03571428571428571], CapForm["Butt"], 
           JoinForm[{"Miter", 1.}]}], FaceForm[{RGBColor[
           0.5, 0.73275, 0.67689], Opacity[1.]}], 
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
            18.486000061035156`, 15.5}, {21.486000061035156`, 15.5}, {
            21.486000061035156`, 12.5}, {18.486000061035156`, 12.5}, {
            18.486000061035156`, 15.5}}}]}}},
        Background->GrayLevel[1, 0],
        BaseStyle->GrayLevel[1],
        ImageSize->36,
        PlotRange->{{-2, 30}, {-2, 
         30}}], {-2.999999999999999, 8.038469108735353*^-8}], 
      {RGBColor[0.6317647058823529, 0.6988235294117647, 0.7094117647058823], 
       EdgeForm[RGBColor[
       0.6317647058823529, 0.6988235294117647, 0.7094117647058823]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
     FontSize->10]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{35., 35.}, {35., 25.}},
  ImageSize->{548.4999999999999, 82.27501763640123},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.950959162608345*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"affa5b2f-71b4-744f-ba81-bb04122011d2"]
}, Open  ]],

Cell[TextData[{
 "In other words, the thing being classified to determine what should come \
next is an ",
 StyleBox["embedding vector",
  FontWeight->"Bold"],
 " in a ",
 StyleBox["latent space",
  FontWeight->"Bold"],
 ", not the text directly. This is a standard technique in language models \
and many kinds of classification tasks."
}], "Text",
 CellChangeTimes->{{3.950209799910185*^9, 3.950209898882105*^9}, {
  3.9502273125085793`*^9, 3.9502273519805527`*^9}, {3.9509591775872746`*^9, 
  3.950959221171625*^9}},ExpressionUUID->"f2a1f52d-f351-1c43-b289-\
229542330674"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"embeddingmodel", "=", 
  RowBox[{"NetTake", "[", 
   RowBox[{"languagemodel", ",", "\"\<last\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9509592997293243`*^9, 3.950959319627302*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"df6356e7-d562-9349-8c3e-f720f421052e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"string\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> "Weights"|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    "decoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> "Causal",
                     "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "add" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Tanh[0.7978845608028654 (# + 
                    0.044715 #^3)])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "last" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Type" -> 
                    "Function", "Function" -> Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[75402943]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> False, "$Version" -> 
                    "14.1.2", 
                    "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"decoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "13", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"last\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 501161080, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 501161080, 
            6843615156671593097256010839510399070622879626994752797840, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<3>]"& )],
  False,
  BoxID -> 6843615156671593097256010839510399070622879626994752797840,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9509593204288807`*^9, 3.950960777000227*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"eb935acd-1fa2-1441-93f0-eb20b377575b"]
}, Open  ]],

Cell["\<\
This model now maps strings to vectors. In the latent space, it is most \
common to use cosine distance as the relevant metric (as most embedding \
models also normalize their outputs).\
\>", "Text",
 CellChangeTimes->{{3.9509594307308044`*^9, 3.9509594310437927`*^9}, {
  3.9509594952277164`*^9, 3.950959505227247*^9}, {3.95095974519516*^9, 
  3.95095979016308*^9}},ExpressionUUID->"0a09af19-a467-154a-90a3-\
6fa12693c163"],

Cell["\<\
You can compute the pairwise distance between embeddings in the latent space:\
\>", "Text",
 CellChangeTimes->{{3.9509597994830456`*^9, 
  3.9509598314201164`*^9}},ExpressionUUID->"cac00287-78e8-b342-9d76-\
14c3707536c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CosineDistance", "@@", 
  RowBox[{"embeddingmodel", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<king\>\"", ",", "\"\<queen\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9509593336379795`*^9, 3.950959360779522*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"288c531b-2e65-3040-9dfc-abd73b86bd52"],

Cell[BoxData["0.02727241569759742`"], "Output",
 CellChangeTimes->{3.950959361580097*^9, 3.9509607272768936`*^9, 
  3.9509607800301247`*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"460510d7-28b3-c246-a83c-bba3893f2467"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CosineDistance", "@@", 
  RowBox[{"embeddingmodel", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<princess\>\"", ",", "\"\<queen\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9509593787169914`*^9, 3.9509593852997704`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"fe886c45-cecc-2c40-ba64-0bb495466ecc"],

Cell[BoxData["0.008201080330101806`"], "Output",
 CellChangeTimes->{3.950959386111084*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"9586e369-d91f-ac40-8977-994abe7d38e3"]
}, Open  ]],

Cell["\<\
You can get some sense of the topology of the embedding into the latent space \
space with plots like these:\
\>", "Text",
 CellChangeTimes->{{3.950961064387537*^9, 3.950961103267563*^9}, {
  3.950961159364662*^9, 
  3.9509611616760883`*^9}},ExpressionUUID->"16515182-4228-3c46-9d2e-\
4055c1b6cf05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"words", ",", "embeddings", ",", "graph", ",", "minmax"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"words", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<king\>\"", ",", "\"\<queen\>\"", ",", "\"\<prince\>\"", ",", 
       "\"\<princess\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"embeddings", "=", 
     RowBox[{"embeddingmodel", "@", "words"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"graph", "=", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{
       RowBox[{"Length", "@", "words"}], ",", 
       RowBox[{"VertexLabels", "->", 
        RowBox[{"{", 
         RowBox[{"v_", ":>", 
          RowBox[{"words", "[", 
           RowBox[{"[", "v", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"EdgeWeight", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i_", "\[UndirectedEdge]", "j_"}], ":>", 
          RowBox[{"CosineDistance", "[", 
           RowBox[{
            RowBox[{"embeddings", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"embeddings", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "}"}]}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"minmax", "=", 
     RowBox[{"MinMax", "@", 
      RowBox[{"AnnotationValue", "[", 
       RowBox[{"graph", ",", "EdgeWeight"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Graph", "[", 
     RowBox[{"graph", ",", 
      RowBox[{"EdgeShapeFunction", "->", 
       RowBox[{"Function", "[", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w", "=", 
            RowBox[{"AnnotationValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"graph", ",", "#2"}], "}"}], ",", "EdgeWeight"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<ThermometerColors\>\"", "]"}], 
             "[", 
             RowBox[{"1", "-", 
              RowBox[{"Rescale", "[", 
               RowBox[{"w", ",", "minmax"}], "]"}]}], "]"}], ",", 
            RowBox[{"Thickness", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Rescale", "[", 
                 RowBox[{"w", ",", "minmax"}], "]"}]}], ")"}], "/", "75"}], 
             "]"}], ",", 
            RowBox[{"Line", "[", "#1", "]"}]}], "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"EdgeLabels", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<EdgeWeight\>\"", ",", "Tooltip"}], "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9509600248312225`*^9, 3.950960047054676*^9}, {
  3.9509600942170277`*^9, 3.950960109126314*^9}, {3.950960201318594*^9, 
  3.9509602673904095`*^9}, {3.9509603215288486`*^9, 3.9509603218439465`*^9}, {
  3.9509604145884247`*^9, 3.9509604555890408`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"8b9969ef-5ee2-2a41-943e-601bdd0db5f4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
          1}, {2}, {3}}}, Pattern}]}, {EdgeLabels -> {
         Placed["EdgeWeight", Tooltip]}, 
       EdgeShapeFunction -> {
        With[{$CellContext`w$ = 
           AnnotationValue[{$CellContext`graph$429034, #2}, EdgeWeight]}, {
           ColorData["ThermometerColors"][
           1 - Rescale[$CellContext`w$, $CellContext`minmax$429034]], 
           
           Thickness[(1 - 
             Rescale[$CellContext`w$, $CellContext`minmax$429034])/75], 
           Line[#]}]& }, 
       EdgeWeight -> {0.027272404489864455`, 0.03310337745549874, 
        0.04644708333589731, 0.003511222947693571, 0.008201080330101806, 
        0.004629705707324017}, 
       GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "StarEmbedding"}, 
       VertexLabels -> {
        4 -> "princess", 3 -> "prince", 1 -> "king", 2 -> "queen"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.821333297525585, 0.8992920852085116, 0.8736043674749374], 
           Thickness[0.005954518724027072], 
           LineBox[{{0., 0.}, {0.8660254037844389, -0.5000000000000012}}]},
          "0.027272404489864455`"],
         Annotation[#, 0.027272404489864455`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.6345258565043524, 0.7843887438522634, 0.9414344018587196], 
           Thickness[0.004143764135542867], 
           LineBox[{{0., 0.}, {1.8369701987210297`*^-16, 1.}}]},
          "0.03310337745549874`"],
         Annotation[#, 0.03310337745549874, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.163302, 0.119982, 0.79353], Thickness[0.], 
           LineBox[{{0., 0.}, {-0.8660254037844386, -0.49999999999999917`}}]},
          "0.04644708333589731`"],
         Annotation[#, 0.04644708333589731, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.534081, 0.0853132, 0.16669], Thickness[
           0.013333333333333334`], 
           LineBox[{{0.8660254037844389, -0.5000000000000012}, {
            1.8369701987210297`*^-16, 1.}}]},
          "0.003511222947693571`"],
         Annotation[#, 0.003511222947693571, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.7085588115857682, 0.28349785966541674`, 0.2931914317242552], 
           Thickness[0.011876941608559068`], 
           LineBox[{{
            0.8660254037844389, -0.5000000000000012}, {-0.8660254037844386, \
-0.49999999999999917`}}]},
          "0.008201080330101806`"],
         Annotation[#, 0.008201080330101806, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.5775261313992349, 0.1303406082770977, 0.19579526363892308`], 
           Thickness[0.012985998883134765`], 
           LineBox[{{1.8369701987210297`*^-16, 
            1.}, {-0.8660254037844386, -0.49999999999999917`}}]},
          "0.004629705707324017`"],
         Annotation[#, 0.004629705707324017, "Tooltip"]& ]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.020399597244776413], 
         InsetBox["\<\"king\"\>", {0.02473319721732639, 0.014279718071343463},
           ImageScaled[{-0.14951905283832934, 0.1250000000000006}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.020399597244776413], 
         InsetBox["\<\"queen\"\>", {0.8907586010017654, -0.5142797180713448}, 
          ImageScaled[{-0.14951905283832911, 0.8749999999999998}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297`*^-16, 1.}, 0.020399597244776413], 
         InsetBox["\<\"prince\"\>", {1.942890293094024*^-16, 1.0285594361426869},
           ImageScaled[{0.49999999999999967, -0.25}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844386, -0.49999999999999917`}, 
          0.020399597244776413], 
         InsetBox["\<\"princess\"\>", {-0.890758601001765, -0.5142797180713427},
           ImageScaled[{1.1495190528383292, 0.8749999999999994}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9509600508475895`*^9, 3.950960109973713*^9, 
  3.950960217958576*^9, 3.950960268450268*^9, 3.9509603243069267`*^9, 
  3.950960458344246*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"283dca3e-4fcc-3e48-b8b5-c1aa534eef39"]
}, {2}]],

Cell["\<\
One of the reasons why GPT-2 is less proficient than its newer cousins is \
because the embeddings it produces don\[CloseCurlyQuote]t map as cleanly onto \
our human intuitions of related concepts.\
\>", "Text",
 CellChangeTimes->{{3.9509611872920074`*^9, 3.950961233324131*^9}, {
  3.9509615575808277`*^9, 
  3.9509615691412487`*^9}},ExpressionUUID->"567f7477-70d5-cd45-a86e-\
7f4653bf812f"],

Cell["Compare to a different embedding model, BERT:", "Text",
 CellChangeTimes->{{3.950961588779949*^9, 3.9509616248687897`*^9}, 
   3.950961655308241*^9},ExpressionUUID->"783d4dd4-8d76-9c41-935d-\
95c3ce6d0ce3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sentenceembedding", "=", 
  RowBox[{"NetAppend", "[", 
   RowBox[{
    RowBox[{
    "NetModel", "[", "\"\<BERT Trained on BookCorpus and Wikipedia Data\>\"", 
     "]"}], ",", 
    RowBox[{"\"\<pooling\>\"", "->", 
     RowBox[{"SequenceLastLayer", "[", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9509608924985313`*^9, 3.9509608924992943`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"f1e56929-ebba-7644-818f-4839d1541179"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"string\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], {
                    FaceForm[{
                    RGBColor[
                    0.6274509803921569, 0.8156862745098039, 
                    0.49411764705882355`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{6.221999645233154, 18.73400115966797}, {
                    9.045999526977539, 18.73400115966797}, {9.045999526977539,
                     8.734001159667969}, {6.221999645233154, 
                    8.734001159667969}, {6.221999645233154, 
                    18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.81100082397461, 18.73400115966797}, {
                    15.635000228881836`, 18.73400115966797}, {
                    15.635000228881836`, 8.734001159667969}, {
                    12.81100082397461, 8.734001159667969}, {12.81100082397461,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    Hue[0.5247747747747747, 0.43, 0.86], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{19.39900016784668, 18.73400115966797}, {
                    22.222999572753906`, 18.73400115966797}, {
                    22.222999572753906`, 8.734001159667969}, {
                    19.39900016784668, 8.734001159667969}, {19.39900016784668,
                     18.73400115966797}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    9.98699951171875, 15.73439884185791}, {
                    11.868999481201172`, 13.73439884185791}, {
                    9.98699951171875, 11.73439884185791}, {9.98699951171875, 
                    15.73439884185791}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6509803921568628, 0.6509803921568628, 
                    0.6509803921568628], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    16.575298309326172`, 15.73439884185791}, {
                    18.457298278808594`, 13.73439884185791}, {
                    16.575298309326172`, 11.73439884185791}, {
                    16.575298309326172`, 15.73439884185791}}}]}}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "part1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 1}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>|>, 
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{30522, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 30522, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 512, "$Length" -> 
                    NeuralNetworks`LengthVar[2045792693]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 512]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 512, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 512]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "part2" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 2}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Min[2, #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693]}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 2]]|>|>, 
                    "embeddingsegments" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{2, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 2, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`IndexIntegerT[1, 2]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "normalize" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.1, "Method" -> "Dropout", 
                    "OutputPorts" -> NeuralNetworks`ValidatedParameter[{
                    "Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "part1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "part2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "part1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "part1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "part2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingsegments", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingsegments", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "normalize", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "normalize", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"]}|>, 
                    "encoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2045792693], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 
                    NeuralNetworks`LengthVar[2045792693]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 # (1 + Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2045792693], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False, 
                    "GroupNumber" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "pooling" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "encoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "encoder", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2045792693], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]], "Type" -> 
                    "Function", "Function" -> Composition[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    Map[List]], "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[881101690], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> True, "$Version" -> "14.1.2",
                     "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]2\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "30522", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"encoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "encoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "12", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "encoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "encoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 440356504, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 440356504, 
            6843615156671593097256010839510399070641326371067584440904, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<3>]"& )],
  False,
  BoxID -> 6843615156671593097256010839510399070641326371067584440904,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9509609088850536`*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"18dbb4c9-5545-b84c-aa03-e6c34018e47b"]
}, Open  ]],

Cell["\<\
This embedding model maps a bit better onto human intuitions:\
\>", "Text",
 CellChangeTimes->{{3.950967799896654*^9, 
  3.9509678270423717`*^9}},ExpressionUUID->"e28c9a61-0d96-9f43-b24a-\
e20e8e6f3b69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"words", ",", "embeddings", ",", "graph", ",", "minmax"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"words", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<king\>\"", ",", "\"\<queen\>\"", ",", "\"\<prince\>\"", ",", 
       "\"\<princess\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"embeddings", "=", 
     RowBox[{"sentenceembedding", "@", "words"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"graph", "=", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{
       RowBox[{"Length", "@", "words"}], ",", 
       RowBox[{"VertexLabels", "->", 
        RowBox[{"{", 
         RowBox[{"v_", ":>", 
          RowBox[{"words", "[", 
           RowBox[{"[", "v", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"EdgeWeight", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i_", "\[UndirectedEdge]", "j_"}], ":>", 
          RowBox[{"CosineDistance", "[", 
           RowBox[{
            RowBox[{"embeddings", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"embeddings", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "}"}]}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"minmax", "=", 
     RowBox[{"MinMax", "@", 
      RowBox[{"AnnotationValue", "[", 
       RowBox[{"graph", ",", "EdgeWeight"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Graph", "[", 
     RowBox[{"graph", ",", 
      RowBox[{"EdgeShapeFunction", "->", 
       RowBox[{"Function", "[", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w", "=", 
            RowBox[{"AnnotationValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"graph", ",", "#2"}], "}"}], ",", "EdgeWeight"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<ThermometerColors\>\"", "]"}], 
             "[", 
             RowBox[{"1", "-", 
              RowBox[{"Rescale", "[", 
               RowBox[{"w", ",", "minmax"}], "]"}]}], "]"}], ",", 
            RowBox[{"Thickness", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Rescale", "[", 
                 RowBox[{"w", ",", "minmax"}], "]"}]}], ")"}], "/", "75"}], 
             "]"}], ",", 
            RowBox[{"Line", "[", "#1", "]"}]}], "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"EdgeLabels", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<EdgeWeight\>\"", ",", "Tooltip"}], "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.95096093020714*^9, 3.950960932352186*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"924296eb-7a46-4c4b-a165-fcca0e72651b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
          1}, {2}, {3}}}, Pattern}]}, {EdgeLabels -> {
         Placed["EdgeWeight", Tooltip]}, 
       EdgeShapeFunction -> {
        With[{$CellContext`w$ = 
           AnnotationValue[{$CellContext`graph$434281, #2}, EdgeWeight]}, {
           ColorData["ThermometerColors"][
           1 - Rescale[$CellContext`w$, $CellContext`minmax$434281]], 
           
           Thickness[(1 - 
             Rescale[$CellContext`w$, $CellContext`minmax$434281])/75], 
           Line[#]}]& }, 
       EdgeWeight -> {0.011349429386613874`, 0.016277444416421427`, 
        0.014740907046209006`, 0.015307154171652293`, 0.011211952505508882`, 
        0.007714700354533144}, 
       GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "StarEmbedding"}, 
       VertexLabels -> {
        4 -> "princess", 3 -> "prince", 1 -> "king", 2 -> "queen"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        TagBox[
         TooltipBox[
          {RGBColor[0.898931995265673, 0.8501372187574826, 0.733143348164484],
            Thickness[0.007673575969244938], 
           LineBox[{{0., 0.}, {0.8660254037844389, -0.5000000000000012}}]},
          "0.011349429386613874`"],
         Annotation[#, 0.011349429386613874`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.163302, 0.119982, 0.79353], Thickness[0.], 
           LineBox[{{0., 0.}, {1.8369701987210297`*^-16, 1.}}]},
          "0.016277444416421427`"],
         Annotation[#, 0.016277444416421427`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.40312676529533176`, 0.5374987202718591, 0.9370884891924712], 
           Thickness[0.0023925934009112176`], 
           LineBox[{{0., 0.}, {-0.8660254037844386, -0.49999999999999917`}}]},
          "0.014740907046209006`"],
         Annotation[#, 0.014740907046209006`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.29190557545676865`, 0.36994460663129725`, 0.9040330319030103], 
           Thickness[0.0015108711845272065`], 
           LineBox[{{0.8660254037844389, -0.5000000000000012}, {
            1.8369701987210297`*^-16, 1.}}]},
          "0.015307154171652293`"],
         Annotation[#, 0.015307154171652293`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.9013244984449756, 0.834115023922265, 0.7119703926276821], 
           Thickness[0.007887645789404395], 
           LineBox[{{
            0.8660254037844389, -0.5000000000000012}, {-0.8660254037844386, \
-0.49999999999999917`}}]},
          "0.011211952505508882`"],
         Annotation[#, 0.011211952505508882`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.534081, 0.0853132, 0.16669], Thickness[
           0.013333333333333334`], 
           LineBox[{{1.8369701987210297`*^-16, 
            1.}, {-0.8660254037844386, -0.49999999999999917`}}]},
          "0.007714700354533144`"],
         Annotation[#, 0.007714700354533144, "Tooltip"]& ]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.020399597244776413], 
         InsetBox["\<\"king\"\>", {0.02473319721732639, 0.014279718071343463},
           ImageScaled[{-0.14951905283832934, 0.1250000000000006}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.020399597244776413], 
         InsetBox["\<\"queen\"\>", {0.8907586010017654, -0.5142797180713448}, 
          ImageScaled[{-0.14951905283832911, 0.8749999999999998}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297`*^-16, 1.}, 0.020399597244776413], 
         InsetBox["\<\"prince\"\>", {1.942890293094024*^-16, 1.0285594361426869},
           ImageScaled[{0.49999999999999967, -0.25}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844386, -0.49999999999999917`}, 
          0.020399597244776413], 
         InsetBox["\<\"princess\"\>", {-0.890758601001765, -0.5142797180713427},
           ImageScaled[{1.1495190528383292, 0.8749999999999994}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9509609347197647`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"4edefc34-28cf-384a-9798-b1a3eae2a5e5"]
}, {2}]],

Cell["\<\
A \[OpenCurlyDoubleQuote]better\[CloseCurlyDoubleQuote] embedding model, \
SentenceBERT, maps onto human intuition for analogies even more cleanly:\
\>", "Text",
 CellChangeTimes->{{3.950961619716694*^9, 3.950961672445135*^9}, {
  3.950967851410486*^9, 
  3.9509678823547745`*^9}},ExpressionUUID->"94f5e1ea-443d-be41-9787-\
2bbae4325c24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"words", ",", "embeddings", ",", "graph", ",", "minmax"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"words", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<king\>\"", ",", "\"\<queen\>\"", ",", "\"\<prince\>\"", ",", 
       "\"\<princess\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"embeddings", "=", 
     RowBox[{"Normal", "@", 
      RowBox[{
       RowBox[{
       "ResourceFunction", "[", "\"\<SentenceBERTEmbedding\>\"", "]"}], "@", 
       "words"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"graph", "=", 
     RowBox[{"CompleteGraph", "[", 
      RowBox[{
       RowBox[{"Length", "@", "words"}], ",", 
       RowBox[{"VertexLabels", "->", 
        RowBox[{"{", 
         RowBox[{"v_", ":>", 
          RowBox[{"words", "[", 
           RowBox[{"[", "v", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"EdgeWeight", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i_", "\[UndirectedEdge]", "j_"}], ":>", 
          RowBox[{"CosineDistance", "[", 
           RowBox[{
            RowBox[{"embeddings", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"embeddings", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "}"}]}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"minmax", "=", 
     RowBox[{"MinMax", "@", 
      RowBox[{"AnnotationValue", "[", 
       RowBox[{"graph", ",", "EdgeWeight"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Graph", "[", 
     RowBox[{"graph", ",", 
      RowBox[{"EdgeShapeFunction", "->", 
       RowBox[{"Function", "[", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"w", "=", 
            RowBox[{"AnnotationValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"graph", ",", "#2"}], "}"}], ",", "EdgeWeight"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<ThermometerColors\>\"", "]"}], 
             "[", 
             RowBox[{"1", "-", 
              RowBox[{"Rescale", "[", 
               RowBox[{"w", ",", "minmax"}], "]"}]}], "]"}], ",", 
            RowBox[{"Thickness", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Rescale", "[", 
                 RowBox[{"w", ",", "minmax"}], "]"}]}], ")"}], "/", "75"}], 
             "]"}], ",", 
            RowBox[{"Line", "[", "#1", "]"}]}], "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"EdgeLabels", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<EdgeWeight\>\"", ",", "Tooltip"}], "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9509609638469887`*^9, 3.9509609713173847`*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"7d44ff3f-fad3-9744-9a69-a0f6cf20cbd7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
          1}, {2}, {3}}}, Pattern}]}, {EdgeLabels -> {
         Placed["EdgeWeight", Tooltip]}, 
       EdgeShapeFunction -> {
        With[{$CellContext`w$ = 
           AnnotationValue[{$CellContext`graph$434616, #2}, EdgeWeight]}, {
           ColorData["ThermometerColors"][
           1 - Rescale[$CellContext`w$, $CellContext`minmax$434616]], 
           
           Thickness[(1 - 
             Rescale[$CellContext`w$, $CellContext`minmax$434616])/75], 
           Line[#]}]& }, 
       EdgeWeight -> {0.3192872428219683, 0.4116078945526229, 
        0.5156941848319356, 0.42114671728953834`, 0.3956111845510373, 
        0.31937107244147467`}, 
       GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "StarEmbedding"}, 
       VertexLabels -> {
        4 -> "princess", 3 -> "prince", 1 -> "king", 2 -> "queen"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        TagBox[
         TooltipBox[
          {RGBColor[0.534081, 0.0853132, 0.16669], Thickness[
           0.013333333333333334`], 
           LineBox[{{0., 0.}, {0.8660254037844389, -0.5000000000000012}}]},
          "0.3192872428219683`"],
         Annotation[#, 0.3192872428219683, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.8836346932687765, 0.8841257236394621, 0.7890813567569034], 
           Thickness[0.007066029283495184], 
           LineBox[{{0., 0.}, {1.8369701987210297`*^-16, 1.}}]},
          "0.4116078945526229`"],
         Annotation[#, 0.4116078945526229, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.163302, 0.119982, 0.79353], Thickness[0.], 
           LineBox[{{0., 0.}, {-0.8660254037844386, -0.49999999999999917`}}]},
          "0.5156941848319356`"],
         Annotation[#, 0.5156941848319356, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.8497456292908814, 0.896615554596177, 0.840119831040693],
            Thickness[0.006418474253834278], 
           LineBox[{{0.8660254037844389, -0.5000000000000012}, {
            1.8369701987210297`*^-16, 1.}}]},
          "0.42114671728953834`"],
         Annotation[#, 0.42114671728953834`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.9042788389734744, 0.8143302980474244, 0.685825340369608], 
           Thickness[0.008151986146857908], 
           LineBox[{{
            0.8660254037844389, -0.5000000000000012}, {-0.8660254037844386, \
-0.49999999999999917`}}]},
          "0.3956111845510373`"],
         Annotation[#, 0.3956111845510373, "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
           0.534792824041551, 0.08605094875821728, 0.16716687337399172`], 
           Thickness[0.01332764245373078], 
           LineBox[{{1.8369701987210297`*^-16, 
            1.}, {-0.8660254037844386, -0.49999999999999917`}}]},
          "0.31937107244147467`"],
         Annotation[#, 0.31937107244147467`, "Tooltip"]& ]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.020399597244776413], 
         InsetBox["\<\"king\"\>", {0.02473319721732639, 0.014279718071343463},
           ImageScaled[{-0.14951905283832934, 0.1250000000000006}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.020399597244776413], 
         InsetBox["\<\"queen\"\>", {0.8907586010017654, -0.5142797180713448}, 
          ImageScaled[{-0.14951905283832911, 0.8749999999999998}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297`*^-16, 1.}, 0.020399597244776413], 
         InsetBox["\<\"prince\"\>", {1.942890293094024*^-16, 1.0285594361426869},
           ImageScaled[{0.49999999999999967, -0.25}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844386, -0.49999999999999917`}, 
          0.020399597244776413], 
         InsetBox["\<\"princess\"\>", {-0.890758601001765, -0.5142797180713427},
           ImageScaled[{1.1495190528383292, 0.8749999999999994}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9509610097418957`*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"2d6a56fc-6e1f-2b47-9911-3a6d8b2fe0a0"]
}, {2}]],

Cell["\<\
The (dimension-reduced) embeddings using this older model don\
\[CloseCurlyQuote]t give a particularly useful structure for analogy \
reasoning:\
\>", "Text",
 CellChangeTimes->{{3.9509621127086716`*^9, 
  3.9509621828755665`*^9}},ExpressionUUID->"e8591e0c-e376-6641-86b9-\
d0dae3dd96e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"words", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<king\>\"", ",", "\"\<queen\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<prince\>\"", ",", "\"\<princess\>\""}], "}"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"Framed", "@", 
      RowBox[{
       InterpretationBox[
        TagBox[
         FrameBox[
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                FontColor->GrayLevel[0.45]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.65 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["\<\"TextEmbeddingPlot\"\>", "ResourceFunctionLabel"],
                 " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->0.9 Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}],
          Background->RGBColor[0.968627, 0.976471, 0.984314],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
          RoundingRadius->4],
         {"FunctionResourceBox", 
          GrayLevel[0.45], "\"TextEmbeddingPlot\""},
         TagBoxNote->"FunctionResourceBox"],
        ResourceFunction[
         ResourceObject[<|
          "DocumentationLink" -> 
           URL["https://www.wolframcloud.com/obj/jmcnally0/DeployedResources/\
Function/TextEmbeddingPlot"], "ResourceLocations" -> {
             CloudObject[
             "https://www.wolframcloud.com/obj/jmcnally0/Resources/24e/\
24e8cf70-8968-4383-9550-9b89cc105893"]}, "Name" -> "TextEmbeddingPlot", 
           "UUID" -> "24e8cf70-8968-4383-9550-9b89cc105893", "ResourceType" -> 
           "Function", "Description" -> 
           "Create a plot of the dimension-reduced text embeddings of a \
collection of strings", "Version" -> None, 
           "Keywords" -> {
            "SentenceBERT", "text embeddings", "embedding visualization", 
             "natural language processing", "nlp"}, 
           "Categories" -> {
            "Knowledge Representation & Natural Language", "Strings & Text", 
             "Machine Learning", "Visualization & Graphics"}, 
           "Compatibility" -> <|
            "WolframLanguageVersionRequired" -> "14.0+", 
             "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
             "EvaluationEnvironment" -> {
              "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
               "Subkernel", "Scheduled"}, "CloudSupport" -> True, 
             "Features" -> {}|>, 
           "ContributorInformation" -> <|"ContributedBy" -> "John McNally"|>, 
           "DefinitionNotebook" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/jmcnally0/DeployedResources/\
Function/TextEmbeddingPlot/TextEmbeddingPlot-DefinitionNotebook.nb"], 
           "ExampleNotebook" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/jmcnally0/DeployedResources/\
Function/TextEmbeddingPlot/TextEmbeddingPlot-ExampleNotebook.nb"], 
           "ExampleNotebookData" -> Automatic, "FunctionLocation" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/jmcnally0/Resources/24e/\
24e8cf70-8968-4383-9550-9b89cc105893/download/DefinitionData"], 
           "RelatedSymbols" -> {
            "FeatureSpacePlot", "ListPlot", "ListPointPlot3D", 
             "DimensionReduction", "ServiceConnect"}, 
           "SeeAlso" -> {"SentenceBERTEmbedding"}, "ShortName" -> 
           "TextEmbeddingPlot", "SymbolName" -> 
           "FunctionRepository`$24e8cf708968438395509b89cc105893`\
TextEmbeddingPlot", "PageHeaderClickToCopy" -> 
           "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
jmcnally0/DeployedResources/Function/TextEmbeddingPlot\"]]"|>]],
        Selectable->False], "[", 
       RowBox[{"words", ",", "2", ",", 
        RowBox[{"Joined", "->", "True"}], ",", 
        RowBox[{"PlotMarkers", "->", "Automatic"}], ",", 
        RowBox[{"LabelingFunction", "->", "Callout"}], ",", 
        RowBox[{"\"\<EmbeddingFunction\>\"", "->", "embeddingmodel"}], ",", 
        RowBox[{
        "\"\<ReductionMethod\>\"", "->", 
         "\"\<MultidimensionalScaling\>\""}]}], "]"}]}], ",", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<GPT-2 Embeddings\>\"", ",", "\"\<Text\>\"", ",", "Bold", ",", 
           RowBox[{"GrayLevel", "[", ".4", "]"}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringRiffle", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringRiffle", "[", 
                 RowBox[{"#", ",", "\"\< : \>\""}], "]"}], "&"}], ",", 
               "words"}], "]"}], ",", "\"\< :: \>\""}], "]"}], ",", 
           "\"\<Text\>\"", ",", "Bold", ",", 
           RowBox[{"GrayLevel", "[", ".4", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", "Top"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.950961338364805*^9, 3.9509613516568546`*^9}, {
  3.9509614031506577`*^9, 3.950961484141409*^9}, {3.9509617237830772`*^9, 
  3.950961734188881*^9}, {3.950961901847492*^9, 3.950961933030445*^9}, {
  3.950961981294506*^9, 3.9509620023583794`*^9}, {3.9509620747836285`*^9, 
  3.9509620825736504`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"e4768c82-9750-0c41-b457-5c901125bc07"],

Cell[BoxData[
 TemplateBox[{
   FrameBox[
    GraphicsBox[{{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          LineBox[{{
           72.85713266161628, -38.34106718017605}, {-23.87717617150755, 
           29.47393042913523}, {-23.87717617150755, 29.47393042913523}}]}, 
         Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[{
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          
          LineBox[{{-37.83493214305722, 
           19.38548392617153}, {-11.114893014466373`, -10.526269241486784`}, \
{-11.114893014466373`, -10.526269241486784`}}]}, 
         Annotation[#, "Charting`Private`Tag#2"]& ]}, {
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10.976]], {{{
           72.85713266161628, -38.34106718017605}}, {{-23.87717617150755, 
           29.47393042913523}}, {{-23.87717617150755, 29.47393042913523}}}]}, 
         Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                PlotRangePadding -> Scaled[0.15]], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10.5]], {{{-37.83493214305722, 
           19.38548392617153}}, {{-11.114893014466373`, \
-10.526269241486784`}}, {{-11.114893014466373`, -10.526269241486784`}}}]}, 
         Annotation[#, "Charting`Private`Tag#2"]& ]}}, {{}, {{{{
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-10.528946790859528`, \
-9.8891976078889}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{52.65685424949238, 
                 14.056854249492385`}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{52.65685424949238, 
                 0.05685424949238449}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{9.65685424949238, 
                 0.05685424949237561}, {-10.528946790859528`, \
-9.8891976078889}], 
                
                Offset[{9.65685424949238, 
                 14.056854249492375`}, {-10.528946790859528`, \
-9.8891976078889}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"princess\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{31.15685424949238, 
               7.05685424949238}, {-10.528946790859528`, -9.8891976078889}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-37.24898591945038, 
                 20.022555559769415`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{42.65685424949238, 
                 14.056854249492384`}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{42.65685424949238, 
                 0.0568542494923836}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{9.65685424949238, 
                 0.056854249492376496`}, {-37.24898591945038, 
                 20.022555559769415`}], 
                
                Offset[{9.65685424949238, 
                 14.056854249492376`}, {-37.24898591945038, 
                 20.022555559769415`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"prince\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{26.15685424949238, 
               7.05685424949238}, {-37.24898591945038, 20.022555559769415`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-23.291229947900707`, 
                 30.111002062733114`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{42.65685424949238, 
                 12.856854249492384`}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{42.65685424949238, 
                 0.8568542494923843}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{9.65685424949238, 
                 0.8568542494923772}, {-23.291229947900707`, 
                 30.111002062733114`}], 
                
                Offset[{9.65685424949238, 
                 12.856854249492377`}, {-23.291229947900707`, 
                 30.111002062733114`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"queen\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{26.15685424949238, 
               6.856854249492381}, {-23.291229947900707`, 
               30.111002062733114`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{-2.1213203435596424`, 2.121320343559643}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-5.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-7.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-9.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-9.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{-2.1213203435596424`, 2.121320343559643}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-5.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-7.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-9.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-9.65685424949238, 5.656854249492381}, {
                 72.27118643800944, -37.70399554657816}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{-9.656854249492381, 14.056854249492382`}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-9.656854249492378, 0.056854249492382714`}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-33.656854249492376`, 0.056854249492377384`}, {
                 72.27118643800944, -37.70399554657816}], 
                
                Offset[{-33.65685424949238, 14.056854249492378`}, {
                 72.27118643800944, -37.70399554657816}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"king\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{-21.65685424949238, 7.05685424949238}, {
               72.27118643800944, -37.70399554657816}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{None, None}, {None, None}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
        "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-37.83493214305722, 
       72.85713266161628}, {-38.34106718017605, 29.47393042913523}}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.08]}, {
         Scaled[0.05], 
         Scaled[0.12944271909999158`]}}, Ticks -> {Automatic, Automatic}}], 
    StripOnInput -> False], 
   TagBox[
    GridBox[{{
       StyleBox["\"GPT-2 Embeddings\"", "Text", Bold, 
        GrayLevel[0.4], StripOnInput -> False]}, {
       StyleBox["\"king : queen :: prince : princess\"", "Text", Bold, 
        GrayLevel[0.4], StripOnInput -> False]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.950961375312895*^9, 3.9509614182164917`*^9, 3.950961485567339*^9, 
   3.9509617445432796`*^9, {3.950961918057823*^9, 3.9509619427905674`*^9}, 
   3.950961994468031*^9, 3.95096209250247*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"5063b56e-2f86-3946-a6f4-7e97723048f6"]
}, {2}]],

Cell["\<\
However, using a better embedding model (and appropriate dimension reduction) \
lets you \[OpenCurlyDoubleQuote]see\[CloseCurlyDoubleQuote] an analogy as \
mapped into the latent space:\
\>", "Text",
 CellChangeTimes->{{3.950962186628477*^9, 
  3.95096227281316*^9}},ExpressionUUID->"f12e9f70-1add-c641-bd52-\
4b0e110fc348"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"words", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<king\>\"", ",", "\"\<queen\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<prince\>\"", ",", "\"\<princess\>\""}], "}"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"Framed", "@", 
      RowBox[{
       InterpretationBox[
        TagBox[
         FrameBox[
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                FontColor->GrayLevel[0.45]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.65 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["\<\"TextEmbeddingPlot\"\>", "ResourceFunctionLabel"],
                 " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->0.9 Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}],
          Background->RGBColor[0.968627, 0.976471, 0.984314],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
          RoundingRadius->4],
         {"FunctionResourceBox", 
          GrayLevel[0.45], "\"TextEmbeddingPlot\""},
         TagBoxNote->"FunctionResourceBox"],
        ResourceFunction[
         ResourceObject[<|
          "DocumentationLink" -> 
           URL["https://www.wolframcloud.com/obj/jmcnally0/DeployedResources/\
Function/TextEmbeddingPlot"], "ResourceLocations" -> {
             CloudObject[
             "https://www.wolframcloud.com/obj/jmcnally0/Resources/24e/\
24e8cf70-8968-4383-9550-9b89cc105893"]}, "Name" -> "TextEmbeddingPlot", 
           "UUID" -> "24e8cf70-8968-4383-9550-9b89cc105893", "ResourceType" -> 
           "Function", "Description" -> 
           "Create a plot of the dimension-reduced text embeddings of a \
collection of strings", "Version" -> None, 
           "Keywords" -> {
            "SentenceBERT", "text embeddings", "embedding visualization", 
             "natural language processing", "nlp"}, 
           "Categories" -> {
            "Knowledge Representation & Natural Language", "Strings & Text", 
             "Machine Learning", "Visualization & Graphics"}, 
           "Compatibility" -> <|
            "WolframLanguageVersionRequired" -> "14.0+", 
             "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
             "EvaluationEnvironment" -> {
              "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
               "Subkernel", "Scheduled"}, "CloudSupport" -> True, 
             "Features" -> {}|>, 
           "ContributorInformation" -> <|"ContributedBy" -> "John McNally"|>, 
           "DefinitionNotebook" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/jmcnally0/DeployedResources/\
Function/TextEmbeddingPlot/TextEmbeddingPlot-DefinitionNotebook.nb"], 
           "ExampleNotebook" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/jmcnally0/DeployedResources/\
Function/TextEmbeddingPlot/TextEmbeddingPlot-ExampleNotebook.nb"], 
           "ExampleNotebookData" -> Automatic, "FunctionLocation" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/jmcnally0/Resources/24e/\
24e8cf70-8968-4383-9550-9b89cc105893/download/DefinitionData"], 
           "RelatedSymbols" -> {
            "FeatureSpacePlot", "ListPlot", "ListPointPlot3D", 
             "DimensionReduction", "ServiceConnect"}, 
           "SeeAlso" -> {"SentenceBERTEmbedding"}, "ShortName" -> 
           "TextEmbeddingPlot", "SymbolName" -> 
           "FunctionRepository`$24e8cf708968438395509b89cc105893`\
TextEmbeddingPlot", "PageHeaderClickToCopy" -> 
           "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
jmcnally0/DeployedResources/Function/TextEmbeddingPlot\"]]"|>]],
        Selectable->False], "[", 
       RowBox[{"words", ",", "2", ",", 
        RowBox[{"Joined", "->", "True"}], ",", 
        RowBox[{"PlotMarkers", "->", "Automatic"}], ",", 
        RowBox[{"LabelingFunction", "->", "Callout"}]}], "]"}]}], ",", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<SentenceBERT Embeddings\>\"", ",", "\"\<Text\>\"", ",", "Bold",
            ",", 
           RowBox[{"GrayLevel", "[", ".4", "]"}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringRiffle", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringRiffle", "[", 
                 RowBox[{"#", ",", "\"\< : \>\""}], "]"}], "&"}], ",", 
               "words"}], "]"}], ",", "\"\< :: \>\""}], "]"}], ",", 
           "\"\<Text\>\"", ",", "Bold", ",", 
           RowBox[{"GrayLevel", "[", ".4", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", "Top"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.9509612812075634`*^9, {3.9509614982411346`*^9, 3.9509615106771927`*^9}, {
   3.9509617848639336`*^9, 3.9509617856955643`*^9}, {3.950961828824911*^9, 
   3.950961828983198*^9}, {3.950961957815111*^9, 3.9509619678450165`*^9}, {
   3.950962008765135*^9, 3.95096206229475*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"46619a15-31b7-8840-927f-4919927233d2"],

Cell[BoxData[
 TemplateBox[{
   FrameBox[
    GraphicsBox[{{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          LineBox[{{-15.061862727313192`, 
           5.812294495471364}, {-9.486480892298918, -11.888970181657323`}, \
{-9.486480892298918, -11.888970181657323`}}]}, 
         Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[{
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          
          LineBox[{{8.27815515950949, 15.529110126687579`}, {
           16.27018846010262, -9.452434440501625}, {
           16.27018846010262, -9.452434440501625}}]}, 
         Annotation[#, "Charting`Private`Tag#2"]& ]}, {
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10.976]], {{{-15.061862727313192`, 
           5.812294495471364}}, {{-9.486480892298918, -11.888970181657323`}}, \
{{-9.486480892298918, -11.888970181657323`}}}]}, 
         Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          GeometricTransformationBox[
           InsetBox[
            BoxData[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 EdgeForm[], 
                 PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                PlotRangePadding -> Scaled[0.15]], 
               GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                   PointSize[0.012833333333333334`], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[2]]}, StripOnInput -> False], 
              TraditionalForm]], {0., 0.}, Automatic, 
            Offset[10.5]], {{{8.27815515950949, 15.529110126687579`}}, {{
           16.27018846010262, -9.452434440501625}}, {{
           16.27018846010262, -9.452434440501625}}}]}, 
         Annotation[#, "Charting`Private`Tag#2"]& ]}}, {{}, {{{{
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{-2.121320343559643, -2.1213203435596424`}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-5.6568542494923815`, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-7.6568542494923815`, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-9.656854249492381, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-9.656854249492381, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{-2.121320343559643, -2.1213203435596424`}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-5.6568542494923815`, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-7.6568542494923815`, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-9.656854249492381, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-9.656854249492381, -5.65685424949238}, {
                 16.104332875932982`, -9.71000698091202}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{-9.656854249492383, -0.05685424949237472}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-9.656854249492383, -14.056854249492375`}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-52.65685424949238, -14.056854249492384`}, {
                 16.104332875932982`, -9.71000698091202}], 
                
                Offset[{-52.65685424949238, -0.0568542494923836}, {
                 16.104332875932982`, -9.71000698091202}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"princess\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{-31.156854249492383`, -7.056854249492379}, {
               16.104332875932982`, -9.71000698091202}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 2.121320343559643}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{5.656854249492381, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{7.65685424949238, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{9.65685424949238, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{9.65685424949238, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 2.121320343559643}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{5.656854249492381, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{7.65685424949238, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{9.65685424949238, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{9.65685424949238, 5.656854249492381}, {
                 8.44401074367913, 15.786682667097974`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{42.65685424949238, 14.056854249492384`}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{42.65685424949238, 0.0568542494923836}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{9.65685424949238, 0.056854249492376496`}, {
                 8.44401074367913, 15.786682667097974`}], 
                
                Offset[{9.65685424949238, 14.056854249492376`}, {
                 8.44401074367913, 15.786682667097974`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"prince\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{26.15685424949238, 7.05685424949238}, {8.44401074367913,
                15.786682667097974`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-9.320625308129278, \
-11.631397641246927`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{42.65685424949238, 
                 12.856854249492384`}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{42.65685424949238, 
                 0.8568542494923843}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{9.65685424949238, 
                 0.8568542494923772}, {-9.320625308129278, \
-11.631397641246927`}], 
                
                Offset[{9.65685424949238, 
                 12.856854249492377`}, {-9.320625308129278, \
-11.631397641246927`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"queen\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{26.15685424949238, 
               6.856854249492381}, {-9.320625308129278, \
-11.631397641246927`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                
                Offset[{2.121320343559643, 
                 2.121320343559643}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{5.656854249492381, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{7.65685424949238, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{9.65685424949238, 
                 5.656854249492381}, {-14.896007143143553`, 
                 6.06986703588176}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{33.656854249492376`, 
                 14.056854249492382`}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{33.65685424949238, 
                 0.056854249492382714`}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{9.656854249492381, 
                 0.056854249492377384`}, {-14.896007143143553`, 
                 6.06986703588176}], 
                
                Offset[{9.656854249492378, 
                 14.056854249492378`}, {-14.896007143143553`, 
                 6.06986703588176}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox["\"king\"", BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{21.65685424949238, 
               7.05685424949238}, {-14.896007143143553`, 6.06986703588176}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{None, None}, {None, None}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
        "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-15.061862727313192`, 
       16.27018846010262}, {-11.888970181657323`, 15.529110126687579`}}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.08]}, {
         Scaled[0.05], 
         Scaled[0.12944271909999158`]}}, Ticks -> {Automatic, Automatic}}], 
    StripOnInput -> False], 
   TagBox[
    GridBox[{{
       StyleBox["\"SentenceBERT Embeddings\"", "Text", Bold, 
        GrayLevel[0.4], StripOnInput -> False]}, {
       StyleBox["\"king : queen :: prince : princess\"", "Text", Bold, 
        GrayLevel[0.4], StripOnInput -> False]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.950961306897436*^9, 3.950961516219105*^9, 3.950961794498022*^9, 
   3.950961832039215*^9, {3.9509620295342045`*^9, 3.950962066639326*^9}},
 CellLabel->
  "Out[266]=",ExpressionUUID->"262958b6-e4ec-3f49-9d03-d2b80f3c60f7"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Semantic Search", "Subsection",
 CellChangeTimes->{{3.9502363451520767`*^9, 
  3.9502363482760296`*^9}},ExpressionUUID->"524a7e04-c4fa-f44b-aa51-\
442588328c09"],

Cell["\<\
To use a vector database, the system will embed a query string, then return \
items whose embedding vectors are nearby the query vector.\
\>", "Text",
 CellChangeTimes->{{3.950228485619032*^9, 3.950228564035383*^9}, {
  3.9509623029720154`*^9, 
  3.950962310636305*^9}},ExpressionUUID->"179d966b-b843-7d4f-b187-\
c6d6873e09e8"],

Cell["\<\
Keep in mind this only works if the database strings and query string are \
embedded into a latent space using the same mapping (i.e., the same embedding \
model).\
\>", "Text",
 CellChangeTimes->{{3.9509623229251213`*^9, 
  3.950962379612589*^9}},ExpressionUUID->"bb27ca19-1e5b-3149-9acc-\
573454cfba1a"],

Cell["\<\
Here is an example search index of resource functions in our repository:\
\>", "Text",
 CellChangeTimes->{{3.9502285712781143`*^9, 3.9502285750828476`*^9}, {
  3.950228724653181*^9, 
  3.950228754894556*^9}},ExpressionUUID->"0e5699b6-5674-bf49-bcc1-\
6ee1e0b22e4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index", "=", 
  RowBox[{
  "ResourceData", "[", 
   "\"\<Semantic Index of Wolfram Function Repository Documentation\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.95022751188834*^9, 3.950227559484659*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"f747844c-f25c-0840-ba71-3879f5277a0d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SemanticSearchIndex",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015226326882`, {0., 10.869015226326882`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Documentation - WFR\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["48362", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869015226326882`, {0., 10.869015226326882`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Documentation - WFR\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["48362", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Sources: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3050", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"File", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], 
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"C:\\\\Users\\\\jmcnally\\\\AppData\\\\Roaming\\\\\
Wolfram\\\\Objects\\\\Resources\\\\0a3\\\\0a3fb783-0a3a-4598-ae39-\
4133b253b647\\\\download\\\\DatabaseDirectory\\\\4a1c2ee55a55c42d\\\\data-\
Extracted\\\\Documentation_WFR.wxf\""}, "FileArgument"], "]"}]}, 
                   "ClickToCopy2"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SemanticSearchIndex[<|
   "Database" -> 
    VectorDatabaseObject[<|
      "DistanceFunction" -> EuclideanDistance, "FeatureExtractor" -> Identity,
        "GeneratedAssetLocation" -> 
       File["C:\\Users\\jmcnally\\AppData\\Roaming\\Wolfram\\Objects\\\
Resources\\0a3\\0a3fb783-0a3a-4598-ae39-4133b253b647\\download\\\
DatabaseDirectory\\4a1c2ee55a55c42d\\data-Extracted\\Documentation_WFR-\
Documentation - WFR-VectorDB-Autogenerated.wxf"], "ID" -> 
       "Documentation - WFR-VectorDB-Autogenerated", "Location" -> 
       File["C:\\Users\\jmcnally\\AppData\\Roaming\\Wolfram\\Objects\\\
Resources\\0a3\\0a3fb783-0a3a-4598-ae39-4133b253b647\\download\\\
DatabaseDirectory\\4a1c2ee55a55c42d\\data-Extracted\\Documentation_WFR-\
Documentation - WFR-VectorDB-Autogenerated.wxf"], "ResolvedFeatureExtractor" -> 
       Identity, 
       "VectorDatabaseInfo" -> <|
        "DistanceFunction" -> "l2sq", "WorkingPrecision" -> "f32", "Capacity" -> 
         48362, "Dimensions" -> 384, "Connectivity" -> 16, "ExpansionAdd" -> 
         128, "ExpansionSearch" -> 64|>, "Version" -> 1.1, "WorkingPrecision" -> 
       "Real32", "Evaluator" -> "c++", "DatabaseType" -> "USearch", 
       "MetadataKeys" -> {
        "Items", "ChunkUUID", "SourceUUID", "Source", "Tags"}, 
       "Dimensions" -> {48362, 384}, "Hash" -> 
       196980375535343099880143476551982600558|>], "DocumentCount" -> 3050, 
    "FeatureExtractor" -> "SentenceBERT", "GeneratedAssetLocation" -> 
    File["C:\\Users\\jmcnally\\AppData\\Roaming\\Wolfram\\Objects\\Resources\\\
0a3\\0a3fb783-0a3a-4598-ae39-4133b253b647\\download\\DatabaseDirectory\\\
4a1c2ee55a55c42d\\data-Extracted\\Documentation_WFR.wxf"], "ID" -> 
    "Documentation - WFR", "ItemCount" -> 48362, "Location" -> 
    File["C:\\Users\\jmcnally\\AppData\\Roaming\\Wolfram\\Objects\\Resources\\\
0a3\\0a3fb783-0a3a-4598-ae39-4133b253b647\\download\\DatabaseDirectory\\\
4a1c2ee55a55c42d\\data-Extracted\\Documentation_WFR.wxf"], 
    "TagKeys" -> {"Label"}, "Tokenizer" -> "GPT-4", "Version" -> 1, "Hash" -> 
    57440175925877465666941017020473932988|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.950227548200733*^9, 3.950227563104622*^9}},
 CellLabel->
  "Out[366]=",ExpressionUUID->"1c0894d8-c910-a64d-98fb-03957e8f5372"]
}, Open  ]],

Cell["\<\
The following snippets of documentation are \[OpenCurlyDoubleQuote]close\
\[CloseCurlyDoubleQuote] to the user\[CloseCurlyQuote]s query in embedding \
space:\
\>", "Text",
 CellChangeTimes->{{3.9502287632819977`*^9, 3.950228763784292*^9}, {
  3.9502290967807865`*^9, 
  3.950229112881956*^9}},ExpressionUUID->"e97e67d6-f71d-f24f-b968-\
63169f5d1f09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SemanticSearch", "[", 
   RowBox[{
   "index", ",", 
    "\"\<I want to add semantic labels, such as units, to structured \
data.\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Label\>\"", ",", "\"\<Item\>\""}], "}"}], ",", 
    RowBox[{"MaxItems", "->", "3"}]}], "]"}], "//", 
  RowBox[{"Function", "[", 
   RowBox[{"Dataset", "@", 
    RowBox[{"Association", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "#"}]}], "->", "#"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9502277234657803`*^9, 3.9502277330048103`*^9}, {
  3.950227802569975*^9, 3.9502278433983307`*^9}, {3.950228162641922*^9, 
  3.9502281720057316`*^9}, {3.9502282966809845`*^9, 3.9502283046073112`*^9}, {
  3.9502284448838367`*^9, 3.9502284695876694`*^9}, {3.950228768262659*^9, 
  3.9502288024574013`*^9}, {3.9502288401698704`*^9, 3.9502288729313545`*^9}, {
  3.950228917111864*^9, 3.950228955887762*^9}, {3.9502290089532585`*^9, 
  3.950229023747284*^9}, {3.9502290554632053`*^9, 
  3.950229074407276*^9}},ExpressionUUID->"bb2630c6-3633-e04c-bff9-\
83de74addd0e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"Label" -> "AddSemantics", "Item" -> 
         "\n\n* quantities\n\n* entities\n\n### Categories\n\n* Data \
Manipulation & Analysis\n\n* Knowledge Representation & Natural Language\n\n* \
Strings & Text\n\n### Related Symbols\n\n* SemanticImportString\n\n* \
SemanticInterpretation\n\n* Dataset\n\n* Entity\n\n* Quantity\n\n* \
Interpreter\n\n### Related Resource Objects\n\n* GetKeyValuePattern\n\n* \
ImportCSVToDataset\n\n* FromISOCountry\n\n* CrossTabulate\n\n### \
Source/Reference Citation\n\nSource, reference or citation information\n\n### \
Links\n\n* Link to other related material\n\n### Tests\n\n```wl\nIn[3]:= \
MyFunction[x, y]\n\nOut[3]= x y\n```"|>, 
       2 -> <|"Label" -> "RhumbLineDistanceList", "Item" -> 
         "\n\nOut[512]= {Quantity[503.20012377571265, \"Kilometers\"], \
Quantity[1052.7575682839695, \"Kilometers\"], Quantity[1036.9827657008464, \
\"Kilometers\"]}\n```\n\n### Options\n\n#### UnitSystem\n\nThe default unit \
of the result is \"Metric\":\n\n```wl\nIn[529]:= \
ResourceFunction[\"RhumbLineDistanceList\"][{Entity[\"City\", {\"SanFrancisco\
\", \"California\", \"UnitedStates\"}], Entity[\"City\", {\"Chicago\", \
\"Illinois\", \"UnitedStates\"}], Entity[\"City\", {\"NewYork\", \"NewYork\", \
\"UnitedStates\"}]}]//Normal"|>, 
       3 -> <|"Label" -> "PhysicalQuantityLookup", "Item" -> 
         "\n\n### Possible Issues\n\nCombinations of units can be queried by \
specifying them in a [Quantity](paclet:ref/Quantity) :\n\n```wl\nIn[1]:= \
ResourceFunction[\"PhysicalQuantityLookup\"][Quantity[1, \"Meters\" / \
\"Second\"]]\n\nOut[1]= {Entity[\"PhysicalQuantity\", \
\"ActualExhaustSpeed\"], Entity[\"PhysicalQuantity\", \"Airspeed\"], \
Entity[\"PhysicalQuantity\", \"AverageMovingSpeed\"], \
Entity[\"PhysicalQuantity\", \"AverageSpeed\"], Entity[\"PhysicalQuantity\", \
\"CalibratedAirspeed\"], Entity[\"Physica ... dParticleVelocity\"], \
Entity[\"PhysicalQuantity\", \"SoundPhaseSpeed\"], \
Entity[\"PhysicalQuantity\", \"SoundSpeed\"], Entity[\"PhysicalQuantity\", \
\"SpecificImpulseByMass\"], Entity[\"PhysicalQuantity\", \
\"VaporResistance\"], Entity[\"PhysicalQuantity\", \"WaveSpeed\"]}\n```"|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "Label"} -> 
        1, {All, "Item"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Label" -> TypeSystem`PackageScope`AtomShape[246.40000000000003`],
              "Item" -> TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 2, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"Label", "Item"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "Label"} -> 
        1, {All, "Item"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Label" -> TypeSystem`PackageScope`AtomShape[246.40000000000003`],
              "Item" -> TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 2, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"Label", "Item"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
     3, "DisplayedColumnCount" -> 2, "DataRowCount" -> 3, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{All, Keys}, 
                "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Label", 
                  Style[
                  "Label", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"]][{All, "Label"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{All, "Label"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Item", 
                  Style[
                  "Item", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"]][{All, "Item"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{All, "Item"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["AddSemantics", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[1], 
                 Key["Label"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["* quantities\n\n* entities \[DescendingEllipsis]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[1], 
                 Key["Item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["RhumbLineDistanceList", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[2], 
                 Key["Label"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Out[512]= {Quantity[503.20012377571265, \"Kilometers\"], \
Quantity[1052.7575682839695, \"Kilometers\"], Quantity[1036.9827657008464, \
\"Kilometers\"]}\n```\n \[DescendingEllipsis]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[2], 
                 Key["Item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PhysicalQuantityLookup", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[3], 
                 Key["Label"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "### Possible Issues\n\nCombinations of units can be queried by \
specifying them in a [Quantity](paclet:ref/Quantity) : \[DescendingEllipsis]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][{
                 Key[3], 
                 Key["Item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "1cef6282-1f5c-482a-ad26-7b16d97cb6d9", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "1cef6282-1f5c-482a-ad26-7b16d97cb6d9"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       1002.9000000000001`, {116.822533203125, 122.554466796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      1002.9000000000001`, {116.822533203125, 122.554466796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9502277393063736`*^9, 3.9502278166687393`*^9, 3.950227849906084*^9, 
   3.9502281799349117`*^9, 3.950228310868412*^9, {3.9502284532763996`*^9, 
   3.9502284768460503`*^9}, {3.950228774119623*^9, 3.950228808437748*^9}, {
   3.9502288533182907`*^9, 3.950228878742468*^9}, 3.950228963128525*^9, 
   3.9502290302674236`*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"bb0c8336-33d3-e34e-8386-b44813286d93"]
}, Open  ]],

Cell[TextData[{
 "This is used extensively by our ",
 ButtonBox["Notebook Assistant",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/notebook-assistant-llm-kit/"], None},
  ButtonNote->"https://www.wolfram.com/notebook-assistant-llm-kit/"],
 " and variations on it."
}], "Text",
 CellChangeTimes->{{3.9502291424580765`*^9, 3.9502291477018814`*^9}, {
  3.9502292310544434`*^9, 3.950229244785343*^9}, {3.9502292818026085`*^9, 
  3.9502292818046856`*^9}},ExpressionUUID->"9984eb3d-d9ad-d146-bee5-\
4e3270da0ed1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retrieval Augmented Generation", "Section",
 CellChangeTimes->{{3.950963840022974*^9, 3.950963848670866*^9}, 
   3.95096401103841*^9},ExpressionUUID->"78fc444c-9ca7-134c-af63-\
8a9b1ce1896a"],

Cell[TextData[{
 "The phenomenon of LLM hallucination occurs because language models will \
always say ",
 StyleBox["something",
  FontSlant->"Italic"],
 ", even if they don\[CloseCurlyQuote]t really have the appropriate context \
on which to generate appropriate text:"
}], "Text",
 CellChangeTimes->{{3.9509664408413277`*^9, 
  3.9509665071932983`*^9}},ExpressionUUID->"52aba8ac-fe35-c04a-a284-\
8c88159c312e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChatEvaluate", "[", 
  RowBox[{
   RowBox[{"ChatObject", "[", "]"}], ",", 
   "\"\<What are all the topical groups of the American Physical Society? \
Please list them.\>\"", ",", 
   RowBox[{"LLMEvaluator", "->", 
    RowBox[{"<|", 
     RowBox[{"\"\<Model\>\"", "->", "\"\<gpt-4.5-preview\>\""}], "|>"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9509641831215134`*^9, 3.950964207207199*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"397678f0-ee79-b341-8065-5762b5f3da95"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 PaneBox[
                  FrameBox[
                   TagBox[
                    GridBox[{{
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    RGBColor[0.49019607843137253`, 0.8235294117647058, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEmV8gECGEJi8Iol26dRSR+UCg
hMY3ReZ/+J1pimreAZi8CBrfFJkP04eQxyWOqu9dzX9FZL4RB8S9CH1w/6Dw
F3y8pIkqD6UbRYUwxAFRLy5n
                    "]]}, {
                    FaceForm[{
                    RGBColor[
                    0.18823529411764706`, 0.49411764705882355`, 
                    0.6549019607843137], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGmDhDaDEqLIPMbDpwSRJMXANIN9/17TZH4yObA
+ErIfIeEpwpo5img2adAgIaZq4UmborMR3IXTB7sboW7T1D4D2r+K6L5Czkc
4P5DMg9THQC6JyON
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQGmDmCqAUx/WO6GwsctjqrvQc1/RWR+QspuEL9B
YUMRmO/wsAosv39+FJjfcMALzL/s6wTmH5gvBeIfuOSrBDNfEdUeOF8LmZ+Q
tkwTmd/gmADhrzuugKLvm4YImjkKaHxc4qj6Ep4KocmD+Q4bilD4QKCExjdF
5sPDE24ePFxF0PiIcAYAYyg58Q==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"What are all the topical groups of the American \
Physical Society? Please list them.\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], Editable -> 
                    False, StripOnInput -> False, LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 10, 1, 0, 10}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0, 0], FrameMargins -> 5, FrameStyle -> None, 
                    RoundingRadius -> 5, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.08], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False], 
                    "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.15], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Role" -> "User", 
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "What are all the topical groups of the American Physical \
Society? Please list them."|>}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 3, 
                    29.5425657`9.223023120095242}, "Instant", 
                    "Gregorian", -5.]|>]], Evaluator -> Automatic, Method -> 
                    "Preemptive"], BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}, {
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
                    "]]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
                    "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
                    13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
                    12.375399589538574`, 8.781000137329102}, {
                    9.00040054321289, 6.081000328063965}, {9.00040054321289, 
                    8.}, {9.00040054321289, 9.}, {8.00040054321289, 9.}, {
                    5.000400543212891, 9.}, {5.000400543212891, 21.}, {
                    21.00040054321289, 21.}}}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"As of October 2023, the American Physical Society \
(APS) lists the following topical groups:\\n\\n1. **Energy Research and \
Applications (GERA)**\\n2. **Few-Body Systems and Multiparticle Dynamics \
(GFB)**\\n3. **Gravitation (GGR)**\\n4. **Hadronic Physics (GHP)**\\n5. \
**Instrument and Measurement Science (GIMS)**\\n6. **Magnetism and its \
Applications (GMAG)**\\n7. **Medical Physics (GMED)**\\n8. **Physics \
Education Research (GPER)**\\n9. **Plasma Astrophysics (GPAP)**\\n10. \
**Precision Measurement & Fundamental Constants (GPMFC)**\\n11. **Quantum \
Information (GQI)**\\n12. **Shock Compression of Condensed Matter \
(GSCCM)**\\n13. **Soft Matter (GSOFT)**\\n14. **Statistical and Nonlinear \
Physics (GSNP)**\\n15. **Physics of Climate (GPC)** \\n\\nThese topical \
groups provide specialized forums for APS members to focus on areas of broad \
interest within physics, promoting collaboration, research dissemination, and \
dialogue within the physics community.\\n\\nNote: APS continuously updates \
and modifies topical groups as appropriate. For the most accurate and \
up-to-date information, please visit the APS website \
directly:\\n[https://www.aps.org/membership/units/index.cfm](https://www.aps.\
org/membership/units/index.cfm)\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], Editable -> 
                    False, StripOnInput -> False, LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 10, 1, 0, 10}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0, 0], FrameMargins -> 5, FrameStyle -> None, 
                    RoundingRadius -> 5, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.08], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False], 
                    "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.15], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "As of October 2023, the American Physical Society (APS) \
lists the following topical groups:\n\n1. **Energy Research and Applications \
(GERA)**\n2. **Few-Body Systems and Multiparticle Dynamics (GFB)**\n3. \
**Gravitation (GGR)**\n4. **Hadronic Physics (GHP)**\n5. **Instrument and \
Measurement Science (GIMS)**\n6. **Magnetism and its Applications (GMAG)**\n\
7. **Medical Physics (GMED)**\n8. **Physics Education Research (GPER)**\n9. \
**Plasma Astrophysics (GPAP)**\n10. **Precision Measurement & Fundamental \
Constants (GPMFC)**\n11. **Quantum Information (GQI)**\n12. **Shock \
Compression of Condensed Matter (GSCCM)**\n13. **Soft Matter (GSOFT)**\n14. \
**Statistical and Nonlinear Physics (GSNP)**\n15. **Physics of Climate \
(GPC)** \n\nThese topical groups provide specialized forums for APS members \
to focus on areas of broad interest within physics, promoting collaboration, \
research dissemination, and dialogue within the physics community.\n\nNote: \
APS continuously updates and modifies topical groups as appropriate. For the \
most accurate and up-to-date information, please visit the APS website \
directly:\n\
[https://www.aps.org/membership/units/index.cfm](https://www.aps.org/\
membership/units/index.cfm)"|>}, "ToolRequests" -> {}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 3, 
                    57.1715192`9.509754566422991}, "Instant", 
                    "Gregorian", -5.], "Role" -> "Assistant"|>]], Evaluator -> 
                    Automatic, Method -> "Preemptive"], BaselinePosition -> 
                    Baseline, FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> 
                    None, ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> 
                    False], ItemSize -> 3, StripOnInput -> False]}}, 
                    AutoDelete -> False, BaseStyle -> "Text", 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, "Rows" -> {
                    GrayLevel[1], 
                    GrayLevel[
                    Rational[83, 85]]}}, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {None, {
                    RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745]}, None}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}],
                     "Grid"], FrameMargins -> 0, FrameStyle -> 
                   RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745], RoundingRadius -> 1.5, StripOnInput -> 
                   False], AppearanceElements -> None, ContentPadding -> 
                  False, ImageSize -> {{20, 600}, {20, 400}}, 
                  ScrollPosition -> {0., 72.}, 
                  Scrollbars -> {False, Automatic}], Deploy, DefaultBaseStyle -> 
                 "Deploy"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 PaneBox[
                  FrameBox[
                   TagBox[
                    GridBox[{{
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    RGBColor[0.49019607843137253`, 0.8235294117647058, 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEmV8gECGEJi8Iol26dRSR+UCg
hMY3ReZ/+J1pimreAZi8CBrfFJkP04eQxyWOqu9dzX9FZL4RB8S9CH1w/6Dw
F3y8pIkqD6UbRYUwxAFRLy5n
                    "]]}, {
                    FaceForm[{
                    RGBColor[
                    0.18823529411764706`, 0.49411764705882355`, 
                    0.6549019607843137], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGmDhDaDEqLIPMbDpwSRJMXANIN9/17TZH4yObA
+ErIfIeEpwpo5img2adAgIaZq4UmborMR3IXTB7sboW7T1D4D2r+K6L5Czkc
4P5DMg9THQC6JyON
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQGmDmCqAUx/WO6GwsctjqrvQc1/RWR+QspuEL9B
YUMRmO/wsAosv39+FJjfcMALzL/s6wTmH5gvBeIfuOSrBDNfEdUeOF8LmZ+Q
tkwTmd/gmADhrzuugKLvm4YImjkKaHxc4qj6Ep4KocmD+Q4bilD4QKCExjdF
5sPDE24ePFxF0PiIcAYAYyg58Q==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"What are all the topical groups of the American \
Physical Society? Please list them.\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], Editable -> 
                    False, StripOnInput -> False, LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 10, 1, 0, 10}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0, 0], FrameMargins -> 5, FrameStyle -> None, 
                    RoundingRadius -> 5, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.08], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False], 
                    "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.15], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Role" -> "User", 
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "What are all the topical groups of the American Physical \
Society? Please list them."|>}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 3, 
                    29.5425657`9.223023120095242}, "Instant", 
                    "Gregorian", -5.]|>]], Evaluator -> Automatic, Method -> 
                    "Preemptive"], BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}, {
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
                    "]]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
                    "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
                    13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
                    12.375399589538574`, 8.781000137329102}, {
                    9.00040054321289, 6.081000328063965}, {9.00040054321289, 
                    8.}, {9.00040054321289, 9.}, {8.00040054321289, 9.}, {
                    5.000400543212891, 9.}, {5.000400543212891, 21.}, {
                    21.00040054321289, 21.}}}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"As of October 2023, the American Physical Society \
(APS) lists the following topical groups:\\n\\n1. **Energy Research and \
Applications (GERA)**\\n2. **Few-Body Systems and Multiparticle Dynamics \
(GFB)**\\n3. **Gravitation (GGR)**\\n4. **Hadronic Physics (GHP)**\\n5. \
**Instrument and Measurement Science (GIMS)**\\n6. **Magnetism and its \
Applications (GMAG)**\\n7. **Medical Physics (GMED)**\\n8. **Physics \
Education Research (GPER)**\\n9. **Plasma Astrophysics (GPAP)**\\n10. \
**Precision Measurement & Fundamental Constants (GPMFC)**\\n11. **Quantum \
Information (GQI)**\\n12. **Shock Compression of Condensed Matter \
(GSCCM)**\\n13. **Soft Matter (GSOFT)**\\n14. **Statistical and Nonlinear \
Physics (GSNP)**\\n15. **Physics of Climate (GPC)** \\n\\nThese topical \
groups provide specialized forums for APS members to focus on areas of broad \
interest within physics, promoting collaboration, research dissemination, and \
dialogue within the physics community.\\n\\nNote: APS continuously updates \
and modifies topical groups as appropriate. For the most accurate and \
up-to-date information, please visit the APS website \
directly:\\n[https://www.aps.org/membership/units/index.cfm](https://www.aps.\
org/membership/units/index.cfm)\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], Editable -> 
                    False, StripOnInput -> False, LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 10, 1, 0, 10}], 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0, 0], FrameMargins -> 5, FrameStyle -> None, 
                    RoundingRadius -> 5, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.08], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False], 
                    "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}], Background -> 
                    GrayLevel[0., 0.15], FrameMargins -> 5, FrameStyle -> 
                    None, RoundingRadius -> 5, StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "As of October 2023, the American Physical Society (APS) \
lists the following topical groups:\n\n1. **Energy Research and Applications \
(GERA)**\n2. **Few-Body Systems and Multiparticle Dynamics (GFB)**\n3. \
**Gravitation (GGR)**\n4. **Hadronic Physics (GHP)**\n5. **Instrument and \
Measurement Science (GIMS)**\n6. **Magnetism and its Applications (GMAG)**\n\
7. **Medical Physics (GMED)**\n8. **Physics Education Research (GPER)**\n9. \
**Plasma Astrophysics (GPAP)**\n10. **Precision Measurement & Fundamental \
Constants (GPMFC)**\n11. **Quantum Information (GQI)**\n12. **Shock \
Compression of Condensed Matter (GSCCM)**\n13. **Soft Matter (GSOFT)**\n14. \
**Statistical and Nonlinear Physics (GSNP)**\n15. **Physics of Climate \
(GPC)** \n\nThese topical groups provide specialized forums for APS members \
to focus on areas of broad interest within physics, promoting collaboration, \
research dissemination, and dialogue within the physics community.\n\nNote: \
APS continuously updates and modifies topical groups as appropriate. For the \
most accurate and up-to-date information, please visit the APS website \
directly:\n\
[https://www.aps.org/membership/units/index.cfm](https://www.aps.org/\
membership/units/index.cfm)"|>}, "ToolRequests" -> {}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 3, 
                    57.1715192`9.509754566422991}, "Instant", 
                    "Gregorian", -5.], "Role" -> "Assistant"|>]], Evaluator -> 
                    Automatic, Method -> "Preemptive"], BaselinePosition -> 
                    Baseline, FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> 
                    None, ImageMargins -> {{0, 0}, {0, 0}}, StripOnInput -> 
                    False], ItemSize -> 3, StripOnInput -> False]}}, 
                    AutoDelete -> False, BaseStyle -> "Text", 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, "Rows" -> {
                    GrayLevel[1], 
                    GrayLevel[
                    Rational[83, 85]]}}, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {None, {
                    RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745]}, None}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}],
                     "Grid"], FrameMargins -> 0, FrameStyle -> 
                   RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745], RoundingRadius -> 1.5, StripOnInput -> 
                   False], AppearanceElements -> None, ContentPadding -> 
                  False, ImageSize -> {{20, 600}, {20, 400}}, 
                  Scrollbars -> {False, Automatic}], Deploy, DefaultBaseStyle -> 
                 "Deploy"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChatObject[<|
   "LLMEvaluator" -> 
    LLMConfiguration[<|
      "Model" -> <|"Service" -> "OpenAI", "Name" -> "gpt-4.5-preview"|>, 
       "MaxTokens" -> Automatic, "Temperature" -> Automatic, 
       "TotalProbabilityCutoff" -> Automatic, "Prompts" -> Automatic, 
       "PromptDelimiter" -> "\n\n", "StopTokens" -> Automatic, 
       "ToolMethod" -> <|
        "ToolPrompt" -> 
         TemplateObject[{
           "You have access to tools which can be used to do things, fetch \
data, compute, etc. while you create your response. ", 
            "Each tool takes input as JSON following a JSON schema. Here are \
the available tools and their associated schemas:\n\n", 
            TemplateSequence[
             TemplateExpression[
              StringTemplate[
              "Tool Name: `Name`\nDescription: `Description`\nSchema:\n\
`Schema`\n\n"]], 
             TemplateExpression[
              Map[Append[
                Wolfram`LLMFunctions`Common`LLMToolInformation[#], "Schema" -> 
                ExportString[
                  Information[#, "JSONSchema"], "JSON"]]& , 
               TemplateSlot["Tools"]]]], 
            "To call a tool, write the following at any time during your \
response:\n\n", 
            "TOOLCALL: <tool name>\n{\n\t<\"parameter name 1\">: <value 1>\n\t\
<\"parameter name 2\">: <value 2>\n}\nENDARGUMENTS\nENDTOOLCALL\n\n", 
            "Always use valid JSON to specify the parameters in the tool \
call. ", "Always follow the tool's JSON schema to specify the parameters in \
the tool call. ", 
            "Fill in the values in <> brackets with the values for the \
particular tool. ", "Provide as many parameters as the tool requires. ", 
            "Always make one tool call at a time. ", 
            "Always write two line breaks before each tool call.\n\n", 
            "After the tool call, RESULT: <tool result> will be written to \
show the result of the tool call above."}, CombinerFunction -> StringJoin, 
           InsertionFunction -> TextString], "ToolRequestParser" -> 
         Wolfram`LLMFunctions`Tools`PromptToolUtilities`Private`\
parseToolRequest, "ToolResponseInsertionFunction" -> 
         Wolfram`LLMFunctions`Tools`PromptToolUtilities`Private`\
toolResponseInsertionFunction, "ToolStopTokens" -> {"ENDTOOLCALL"}|>, "Tools" -> 
       Automatic, "LLMPacletVersion" -> "1.6.10", Authentication -> 
       Automatic|>], 
    "Messages" -> {<|
      "Role" -> "User", 
       "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "What are all the topical groups of the American Physical Society? \
Please list them."|>}, "Timestamp" -> 
       DateObject[{2025, 3, 14, 13, 3, 29.5425657`9.223023120095242}, 
         "Instant", "Gregorian", -5.]|>, <|
      "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "As of October 2023, the American Physical Society (APS) lists the \
following topical groups:\n\n1. **Energy Research and Applications (GERA)**\n\
2. **Few-Body Systems and Multiparticle Dynamics (GFB)**\n3. **Gravitation \
(GGR)**\n4. **Hadronic Physics (GHP)**\n5. **Instrument and Measurement \
Science (GIMS)**\n6. **Magnetism and its Applications (GMAG)**\n7. **Medical \
Physics (GMED)**\n8. **Physics Education Research (GPER)**\n9. **Plasma \
Astrophysics (GPAP)**\n10. **Precision Measurement & Fundamental Constants \
(GPMFC)**\n11. **Quantum Information (GQI)**\n12. **Shock Compression of \
Condensed Matter (GSCCM)**\n13. **Soft Matter (GSOFT)**\n14. **Statistical \
and Nonlinear Physics (GSNP)**\n15. **Physics of Climate (GPC)** \n\nThese \
topical groups provide specialized forums for APS members to focus on areas \
of broad interest within physics, promoting collaboration, research \
dissemination, and dialogue within the physics community.\n\nNote: APS \
continuously updates and modifies topical groups as appropriate. For the most \
accurate and up-to-date information, please visit the APS website directly:\n\
[https://www.aps.org/membership/units/index.cfm](https://www.aps.org/\
membership/units/index.cfm)"|>}, "ToolRequests" -> {}, "Timestamp" -> 
       DateObject[{2025, 3, 14, 13, 3, 57.1715192`9.509754566422991}, 
         "Instant", "Gregorian", -5.], "Role" -> "Assistant"|>}, "ChatID" -> 
    "9028aa8a-8924-4682-a863-293112631dfe", 
    "History" -> {<|
      "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "As of October 2023, the American Physical Society (APS) lists the \
following topical groups:\n\n1. **Energy Research and Applications (GERA)**\n\
2. **Few-Body Systems and Multiparticle Dynamics (GFB)**\n3. **Gravitation \
(GGR)**\n4. **Hadronic Physics (GHP)**\n5. **Instrument and Measurement \
Science (GIMS)**\n6. **Magnetism and its Applications (GMAG)**\n7. **Medical \
Physics (GMED)**\n8. **Physics Education Research (GPER)**\n9. **Plasma \
Astrophysics (GPAP)**\n10. **Precision Measurement & Fundamental Constants \
(GPMFC)**\n11. **Quantum Information (GQI)**\n12. **Shock Compression of \
Condensed Matter (GSCCM)**\n13. **Soft Matter (GSOFT)**\n14. **Statistical \
and Nonlinear Physics (GSNP)**\n15. **Physics of Climate (GPC)** \n\nThese \
topical groups provide specialized forums for APS members to focus on areas \
of broad interest within physics, promoting collaboration, research \
dissemination, and dialogue within the physics community.\n\nNote: APS \
continuously updates and modifies topical groups as appropriate. For the most \
accurate and up-to-date information, please visit the APS website directly:\n\
[https://www.aps.org/membership/units/index.cfm](https://www.aps.org/\
membership/units/index.cfm)"|>}, "ToolRequests" -> {}, "FinishReason" -> 
       "stop", "Model" -> "gpt-4.5-preview-2025-02-27", "Timestamp" -> 
       DateObject[{2025, 3, 14, 13, 3, 57.1715192`9.509754566422991}, 
         "Instant", "Gregorian", -5.], 
       "Usage" -> <|
        "History" -> Quantity[23, "Tokens"], "Completion" -> 
         Quantity[296, "Tokens"]|>, "CallID" -> 
       "chatcmpl-BB3fTM6cq0bp3IHCktTnrv7Pt3Tt9", "RawResponseWXF" -> 
       ByteArray[CompressedData["
1:eJyVVdluGzcUlVNnseqgC1AUzRP7EsiGR3bsOE78UowVSRZQOYrpt6IQKM4d
DWMOyXKRqn5Mv6qf0g/oJSXZqosW6JNGdz/nLvx+oq8nW41G488njcbb8/xR
Rp9dgzNaOcifZfSRKOhLXjHPayOzi4uT8mb4hv9yNDEng8vOrb9RdnY28ic3
/l1Gn+jJJ+CefhEd2lyjC3ihVUafcgvMQyG0/mOa0ce1LkDSF1Pjs9ft08xY
mAmYZ8dHx6fZ0XF2fBZdKi04uHLLbf8onM8/Qz+hCvi100BtDc6xKeTbGd22
WgLdYc6hGVM++mrlQXn6+07uiC7JB+71BCzBBCcHxFdA8hqs4EyRUbVw+CEJ
1VyAX5BWPqJ7RGIslyxLLaWeCzUlXptkObU6GHfebL5qk/39rgI7XRBkDZjl
FWGqILkxEk0jeEda/e51vre/3zyO5j3EeaGLBaEL56F2yX4YpBeGWS+4BPJ+
oVgtePTsXUTHk+jYt2wmfIqJiv51VLyOiktWWK0EX0GJbpejqD2N2oFy3oYa
2VhmAuaChfSfImDFAe0HQxod3kSHIZsqbJurk71AFh6gGeb9aHyWjLGnkZL7
1MPu+6h9G7VrabcIS/d7llr9UTdBeJcMJXM1IzmWqs1dqFGeYLw6SiYWuHAx
xiaEl6QXVMHiN1bRwQLjBCTnYa+TvFOTPgYUh5oMVKltvSbx4yBZpL7QSvNb
jFDjMLqUB+cGAxaAq4C8Me9xgFp92ukMk1dqCtWl39B96N0kXeoLjc1yPvET
qbzSSgqF8DfYoldLiKebdMXEUmCVsTWjiII0mzcVUvdgBImxeiYKIM4gOUyK
37BSBBhwrPCH4CSTGmqcfBxljSIeMLoiDLcxpZlYzbDHuCwI2pO58JVQZNWB
gxi+1j6OPsclYBNtE3MHxK7bWAjnoBZqJY8wCyxETwOso8UdWvcUb0IdlPCL
drN5pT2cpxLjtgoVdHByQYIpEPhyLfBMiFKAewgbi2cGizNWoG2b9BBrTFNr
BME4DzZyFyMEk3mdxYiI8q71iEwiA0BmOFF+eQ+wjjlM8C8gApw1LxfnzZ8q
73HTDw/n83mbGdfWdnq4YrQS5jBicYfpKrV5Wf/c+n/2e3iqLJTBMem2r4KU
Gf2cKaWXW+7KxvL0ZfR5KZRw1Tj2TSu67ZAQPIchncDHqI+dMn7s9S2Oa+fb
jH51f35X0k+trYzuegwu15IfUPLN31zHBXgmpIsPwXPOeAXFOihe3V0W8IRv
CL77R5a7AHiYv1yWi/PzXzFeYMPA4OMwxs3Da7IRLKktxEfl39S7DuwM34mx
F2Dp0wJKhrc0o1+7dF7HSNwULA4KXoUVxVtXbicPXsdZ4H8Bx9ZfbA==
         "]], "Role" -> "Assistant"|>}, "Usage" -> Quantity[319, "Tokens"], 
    "Icon" -> Graphics[{
       Thickness[0.038461538461538464`], 
       Style[{
         FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
          "]]}, 
        FaceForm[
         RGBColor[1., 1., 1., 1.]]], 
       Style[{
         FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
           "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
           13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
           12.375399589538574`, 8.781000137329102}, {9.00040054321289, 
           6.081000328063965}, {9.00040054321289, 8.}, {9.00040054321289, 
           9.}, {8.00040054321289, 9.}, {5.000400543212891, 9.}, {
           5.000400543212891, 21.}, {21.00040054321289, 21.}}}]}, 
        FaceForm[
         RGBColor[
         0.5372549019607843, 0.5372549019607843, 0.5372549019607843, 1.]]]}, 
      ImageSize -> {{27., 27.}, {27., 27.}}, 
      PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> Automatic], 
    "LLMPacletVersion" -> "1.6.10"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.950964237272726*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"06920db7-4945-194c-b390-1b2bd8be90cf"]
}, Open  ]],

Cell["\<\
Notice that the new model does helpfully link a web address to verify its \
claim. However, following that link reveals that the LLM response below is no \
longer up to date:\
\>", "Text",
 CellChangeTimes->{{3.9509666266348133`*^9, 3.9509666537794724`*^9}, {
  3.950966731937542*^9, 
  3.9509667664244614`*^9}},ExpressionUUID->"323a5cac-9b79-9f40-a5a2-\
055c4b2f6487"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<ImportMarkdownString\>\"", "]"}], "@", 
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"String", "StringIcon", 
      GridBox[{{
         RowBox[{
           TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["String", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"String length: \"", "IconizedLabel"], 
           "\[InvisibleSpace]", 
           TagBox["1182", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["1216", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   "As of October 2023, the American Physical Society (APS) lists the \
following topical groups:\n\n1. **Energy Research and Applications (GERA)**\n\
2. **Few-Body Systems and Multiparticle Dynamics (GFB)**\n3. **Gravitation \
(GGR)**\n4. **Hadronic Physics (GHP)**\n5. **Instrument and Measurement \
Science (GIMS)**\n6. **Magnetism and its Applications (GMAG)**\n7. **Medical \
Physics (GMED)**\n8. **Physics Education Research (GPER)**\n9. **Plasma \
Astrophysics (GPAP)**\n10. **Precision Measurement & Fundamental Constants \
(GPMFC)**\n11. **Quantum Information (GQI)**\n12. **Shock Compression of \
Condensed Matter (GSCCM)**\n13. **Soft Matter (GSOFT)**\n14. **Statistical \
and Nonlinear Physics (GSNP)**\n15. **Physics of Climate (GPC)** \n\nThese \
topical groups provide specialized forums for APS members to focus on areas \
of broad interest within physics, promoting collaboration, research \
dissemination, and dialogue within the physics community.\n\nNote: APS \
continuously updates and modifies topical groups as appropriate. For the most \
accurate and up-to-date information, please visit the APS website directly:\n\
[https://www.aps.org/membership/units/index.cfm](https://www.aps.org/\
membership/units/index.cfm)",
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.9509643479947968`*^9, 3.950964385987007*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"5f227875-1aa9-c44e-a6f5-a1d600a05e3e"],

Cell[BoxData[Cell[TextData[{
  "As of October 2023, the American Physical Society (APS) lists the \
following topical groups:\n\n1. ",
  StyleBox["Energy Research and Applications (GERA)",
   FontWeight->Bold],
  "\n2. ",
  StyleBox["Few-Body Systems and Multiparticle Dynamics (GFB)",
   FontWeight->Bold],
  "\n3. ",
  StyleBox["Gravitation (GGR)",
   FontWeight->Bold],
  "\n4. ",
  StyleBox["Hadronic Physics (GHP)",
   FontWeight->Bold],
  "\n5. ",
  StyleBox["Instrument and Measurement Science (GIMS)",
   FontWeight->Bold],
  "\n6. ",
  StyleBox["Magnetism and its Applications (GMAG)",
   FontWeight->Bold],
  "\n7. ",
  StyleBox["Medical Physics (GMED)",
   FontWeight->Bold],
  "\n8. ",
  StyleBox["Physics Education Research (GPER)",
   FontWeight->Bold],
  "\n9. ",
  StyleBox["Plasma Astrophysics (GPAP)",
   FontWeight->Bold],
  "\n10. ",
  StyleBox["Precision Measurement & Fundamental Constants (GPMFC)",
   FontWeight->Bold],
  "\n11. ",
  StyleBox["Quantum Information (GQI)",
   FontWeight->Bold],
  "\n12. ",
  StyleBox["Shock Compression of Condensed Matter (GSCCM)",
   FontWeight->Bold],
  "\n13. ",
  StyleBox["Soft Matter (GSOFT)",
   FontWeight->Bold],
  "\n14. ",
  StyleBox["Statistical and Nonlinear Physics (GSNP)",
   FontWeight->Bold],
  "\n15. ",
  StyleBox["Physics of Climate (GPC)",
   FontWeight->Bold],
  " \n\nThese topical groups provide specialized forums for APS members to \
focus on areas of broad interest within physics, promoting collaboration, \
research dissemination, and dialogue within the physics community.\n\nNote: \
APS continuously updates and modifies topical groups as appropriate. For the \
most accurate and up-to-date information, please visit the APS website \
directly: \n",
  ButtonBox["https://www.aps.org/membership/units/index.cfm",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://www.aps.org/membership/units/index.cfm"], None},
   ButtonNote->"https://www.aps.org/membership/units/index.cfm"]
 }], "Text",
  Background->None,ExpressionUUID->
  "b1365cc0-ddc4-064d-af13-0ead86a76a14"]], "Output",
 CellChangeTimes->{3.950964388817129*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"57fff679-aa44-e54b-b789-5898d2f68e5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating a Semantic Search Index", "Subsection",
 CellChangeTimes->{{3.9509667873935833`*^9, 
  3.9509667918583355`*^9}},ExpressionUUID->"25c00dad-d3e5-1049-b9f9-\
4adeb13698c8"],

Cell[TextData[{
 "To automatically create a vector database associated with a source (in this \
case a wiki) you can use the ",
 ButtonBox["CreateSemanticSearchIndex",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/CreateSemanticSearchIndex.\
html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/CreateSemanticSearchIndex.\
html"],
 " function:"
}], "Text",
 CellChangeTimes->{{3.950966824728895*^9, 3.9509668529231358`*^9}, {
  3.9509668895717926`*^9, 
  3.9509669204279613`*^9}},ExpressionUUID->"70db0bf7-ee6c-4e48-8a41-\
6b2f87cb93e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index", "=", 
  RowBox[{"CreateSemanticSearchIndex", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WikipediaData", "[", "\"\<American Physical Society\>\"", "]"}], 
    ",", "\[IndentingNewLine]", "\"\<APS Wiki Index\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<SplitPattern\>\"", "->", 
        RowBox[{"StringExpression", "[", "\"\<\\n\\n\\n\>\"", "]"}]}], ",", 
       RowBox[{"\"\<MinimumItemLength\>\"", "->", "1"}], ",", 
       RowBox[{"\"\<MaximumItemLength\>\"", "->", "1024"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.950964692585636*^9, 3.9509647298879566`*^9}, {
  3.9509647789359837`*^9, 3.950964918881094*^9}, {3.9509661475300007`*^9, 
  3.9509661682740917`*^9}, {3.950966871280218*^9, 
  3.9509668784563065`*^9}},ExpressionUUID->"b758522f-9b9e-d343-9190-\
b274aa04af81"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SemanticSearchIndex",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"APS Wiki Index\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"APS Wiki Index\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Sources: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"LocalObject\"", 
                    
                    RowBox[{
                    "LocalObject", "[", 
                    "\"file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index\"", "]"}]}, 
                   "ClickToCopy2"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SemanticSearchIndex[<|
   "Database" -> 
    VectorDatabaseObject[<|
      "DistanceFunction" -> EuclideanDistance, "FeatureExtractor" -> Identity,
        "GeneratedAssetLocation" -> 
       LocalObject[
        "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ID" -> "APS Wiki Index-VectorDB-Autogenerated", "Location" -> 
       LocalObject[
        "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ResolvedFeatureExtractor" -> Identity, 
       "VectorDatabaseInfo" -> <|
        "DistanceFunction" -> "l2sq", "WorkingPrecision" -> "f32", "Capacity" -> 
         50, "Dimensions" -> 384, "Connectivity" -> 16, "ExpansionAdd" -> 128,
          "ExpansionSearch" -> 64|>, "Version" -> 1.1, "WorkingPrecision" -> 
       "Real32", "Evaluator" -> "c++", "DatabaseType" -> "USearch", 
       "MetadataKeys" -> {
        "Items", "ChunkUUID", "SourceUUID", "Source", "Tags"}, 
       "Dimensions" -> {25, 384}, "Hash" -> 
       17672155075973429641946173339934265397|>], "DocumentCount" -> 1, 
    "FeatureExtractor" -> "SentenceBERT", "GeneratedAssetLocation" -> 
    "LocalObject", "ID" -> "APS Wiki Index", "ItemCount" -> 25, "Location" -> 
    LocalObject[
     "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index"], "TagKeys" -> {}, 
    "Tokenizer" -> "GPT-4", "Version" -> 1, "Hash" -> 
    128600303269284630151141891857580183396|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.950964818316475*^9, 3.9509648650222855`*^9, 
  3.9509649026447277`*^9, 3.9509661798234043`*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"443efdfb-4ab9-3241-bdb7-57d54621a560"]
}, Open  ]],

Cell[TextData[{
 "While you could create an ",
 ButtonBox["LLMTool",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/LLMTool.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/LLMTool.html"],
 " which the model would use, you can use an ",
 ButtonBox["LLMPromptGenerator",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/LLMPromptGenerator.html"],
     None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/LLMPromptGenerator.html"],
 " to programmatically add context:"
}], "Text",
 CellChangeTimes->{{3.950966995761776*^9, 3.9509670706435966`*^9}, {
  3.950967137903492*^9, 
  3.9509671379051876`*^9}},ExpressionUUID->"ad925e21-e464-dd44-8a78-\
e3d1a2cf3831"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generator", "=", 
  RowBox[{"LLMPromptGenerator", "[", "index", "]"}]}]], "Input",
 CellChangeTimes->{{3.9509652043553085`*^9, 3.950965216201565*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"d0d782f2-cbec-454a-bc0d-27e1a220fccb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LLMPromptGenerator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Input Specification:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Input\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Function:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["TemplateObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{"\"Answer using this information:\"", 
                    "\"\\n\\n\"", "\"BEGIN CONTEXT\"", "\"\\n\\n\"", 
                    TemplateBox[{"\"Items\"", 
                    RowBox[{"InsertionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"StringRiffle", "[", 
                    
                    RowBox[{"#1", ",", 
                    "Wolfram`LLMFunctions`LLMPromptGenerator`Private`$\
ItemDelimiter"}], "]"}], "&"}], ")"}]}]}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\n\\n\"", "\"END CONTEXT\"", 
                    "\"\\n\\n\"", 
                    
                    TemplateBox[{"\"Input\""}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic]}, "RowDefault"], Deploy, 
                    DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "\"Input\"", ShowStringCharacters -> True, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"Items\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{"\"Answer using this information:\"", 
                    "\"\\n\\n\"", "\"BEGIN CONTEXT\"", "\"\\n\\n\"", 
                    TemplateBox[{"\"Items\"", 
                    RowBox[{"InsertionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"StringRiffle", "[", 
                    
                    RowBox[{"#1", ",", 
                    "Wolfram`LLMFunctions`LLMPromptGenerator`Private`$\
ItemDelimiter"}], "]"}], "&"}], ")"}]}]}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\n\\n\"", "\"END CONTEXT\"", 
                    "\"\\n\\n\"", 
                    
                    TemplateBox[{"\"Input\""}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic]}, "RowDefault"], Deploy, 
                    DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "\"Input\"", ShowStringCharacters -> True, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"Items\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"CombinerFunction: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["StringJoin", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"InsertionFunction: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Inherited", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    TemplateObject[{
                    "Answer using this information:", "\n\n", "BEGIN CONTEXT",
                     "\n\n", 
                    TemplateSlot[
                    "Items", 
                    InsertionFunction -> (
                    StringRiffle[#, 
                    Wolfram`LLMFunctions`LLMPromptGenerator`Private`$\
ItemDelimiter]& )], "\n\n", "END CONTEXT", "\n\n", 
                    TemplateSlot["Input"]}, CombinerFunction -> StringJoin], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "@*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Input\"", "\[Rule]", "#1"}], ",", 
                    RowBox[{"\"Items\"", "\[Rule]", 
                    RowBox[{"SemanticSearch", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}], 
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"APS Wiki Index\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"APS Wiki Index\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Sources: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"LocalObject\"", 
                    
                    RowBox[{"LocalObject", "[", 
                    "\"file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index\"", "]"}]}, 
                    "ClickToCopy2"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    SemanticSearchIndex[<|
                    "Database" -> VectorDatabaseObject[<|
                    "DistanceFunction" -> EuclideanDistance, 
                    "FeatureExtractor" -> Identity, "GeneratedAssetLocation" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ID" -> "APS Wiki Index-VectorDB-Autogenerated", "Location" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ResolvedFeatureExtractor" -> Identity, 
                    "VectorDatabaseInfo" -> <|
                    "DistanceFunction" -> "l2sq", "WorkingPrecision" -> "f32",
                     "Capacity" -> 50, "Dimensions" -> 384, "Connectivity" -> 
                    16, "ExpansionAdd" -> 128, "ExpansionSearch" -> 64|>, 
                    "Version" -> 1.1, "WorkingPrecision" -> "Real32", 
                    "Evaluator" -> "c++", "DatabaseType" -> "USearch", 
                    "MetadataKeys" -> {"Items", "ChunkUUID", "SourceUUID", 
                    "Source", "Tags"}, "Dimensions" -> {25, 384}, "Hash" -> 
                    17672155075973429641946173339934265397|>], 
                    "DocumentCount" -> 1, "FeatureExtractor" -> 
                    "SentenceBERT", "GeneratedAssetLocation" -> "LocalObject",
                     "ID" -> "APS Wiki Index", "ItemCount" -> 25, "Location" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index"], 
                    "TagKeys" -> {}, "Tokenizer" -> "GPT-4", "Version" -> 1, 
                    "Hash" -> 128600303269284630151141891857580183396|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], ",", "#1", ",", 
                    "\"Items\""}], "]"}]}]}], "]"}], "&"}], ")"}]}], Short], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Input Specification:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Input\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Function:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["TemplateObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{"\"Answer using this information:\"", 
                    "\"\\n\\n\"", "\"BEGIN CONTEXT\"", "\"\\n\\n\"", 
                    TemplateBox[{"\"Items\"", 
                    RowBox[{"InsertionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"StringRiffle", "[", 
                    
                    RowBox[{"#1", ",", 
                    "Wolfram`LLMFunctions`LLMPromptGenerator`Private`$\
ItemDelimiter"}], "]"}], "&"}], ")"}]}]}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\n\\n\"", "\"END CONTEXT\"", 
                    "\"\\n\\n\"", 
                    
                    TemplateBox[{"\"Input\""}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic]}, "RowDefault"], Deploy, 
                    DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "\"Input\"", ShowStringCharacters -> True, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"Items\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    
                    TemplateBox[{"\"Answer using this information:\"", 
                    "\"\\n\\n\"", "\"BEGIN CONTEXT\"", "\"\\n\\n\"", 
                    TemplateBox[{"\"Items\"", 
                    RowBox[{"InsertionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"StringRiffle", "[", 
                    
                    RowBox[{"#1", ",", 
                    "Wolfram`LLMFunctions`LLMPromptGenerator`Private`$\
ItemDelimiter"}], "]"}], "&"}], ")"}]}]}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\n\\n\"", "\"END CONTEXT\"", 
                    "\"\\n\\n\"", 
                    
                    TemplateBox[{"\"Input\""}, "TemplateSlot", 
                    DisplayFunction -> (FrameBox[#, Background -> 
                    RGBColor[0.945, 0.992, 1.], BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic]}, "RowDefault"], Deploy, 
                    DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "\"Input\"", ShowStringCharacters -> True, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"Items\"", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"CombinerFunction: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["StringJoin", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"InsertionFunction: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Inherited", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    TemplateObject[{
                    "Answer using this information:", "\n\n", "BEGIN CONTEXT",
                     "\n\n", 
                    TemplateSlot[
                    "Items", 
                    InsertionFunction -> (
                    StringRiffle[#, 
                    Wolfram`LLMFunctions`LLMPromptGenerator`Private`$\
ItemDelimiter]& )], "\n\n", "END CONTEXT", "\n\n", 
                    TemplateSlot["Input"]}, CombinerFunction -> StringJoin], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "@*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Input\"", "\[Rule]", "#1"}], ",", 
                    RowBox[{"\"Items\"", "\[Rule]", 
                    RowBox[{"SemanticSearch", "[", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}], 
                    "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"APS Wiki Index\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"APS Wiki Index\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Sources: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"LocalObject\"", 
                    
                    RowBox[{"LocalObject", "[", 
                    "\"file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index\"", "]"}]}, 
                    "ClickToCopy2"], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    SemanticSearchIndex[<|
                    "Database" -> VectorDatabaseObject[<|
                    "DistanceFunction" -> EuclideanDistance, 
                    "FeatureExtractor" -> Identity, "GeneratedAssetLocation" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ID" -> "APS Wiki Index-VectorDB-Autogenerated", "Location" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ResolvedFeatureExtractor" -> Identity, 
                    "VectorDatabaseInfo" -> <|
                    "DistanceFunction" -> "l2sq", "WorkingPrecision" -> "f32",
                     "Capacity" -> 50, "Dimensions" -> 384, "Connectivity" -> 
                    16, "ExpansionAdd" -> 128, "ExpansionSearch" -> 64|>, 
                    "Version" -> 1.1, "WorkingPrecision" -> "Real32", 
                    "Evaluator" -> "c++", "DatabaseType" -> "USearch", 
                    "MetadataKeys" -> {"Items", "ChunkUUID", "SourceUUID", 
                    "Source", "Tags"}, "Dimensions" -> {25, 384}, "Hash" -> 
                    17672155075973429641946173339934265397|>], 
                    "DocumentCount" -> 1, "FeatureExtractor" -> 
                    "SentenceBERT", "GeneratedAssetLocation" -> "LocalObject",
                     "ID" -> "APS Wiki Index", "ItemCount" -> 25, "Location" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index"], 
                    "TagKeys" -> {}, "Tokenizer" -> "GPT-4", "Version" -> 1, 
                    "Hash" -> 128600303269284630151141891857580183396|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], ",", "#1", ",", 
                    "\"Items\""}], "]"}]}]}], "]"}], "&"}], ")"}]}], Short], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LLMPromptGenerator[<|
   "InputSpecifications" -> {"Input"}, "Function" -> Composition[
      TemplateObject[{
       "Answer using this information:", "\n\n", "BEGIN CONTEXT", "\n\n", 
        TemplateSlot[
        "Items", 
         InsertionFunction -> (
          StringRiffle[#, 
           Wolfram`LLMFunctions`LLMPromptGenerator`Private`$ItemDelimiter]& \
)], "\n\n", "END CONTEXT", "\n\n", 
        TemplateSlot["Input"]}, CombinerFunction -> StringJoin], <|
      "Input" -> #, "Items" -> SemanticSearch[
         SemanticSearchIndex[<|
          "Database" -> 
           VectorDatabaseObject[<|
             "DistanceFunction" -> EuclideanDistance, "FeatureExtractor" -> 
              Identity, "GeneratedAssetLocation" -> 
              LocalObject[
               "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ID" -> "APS Wiki Index-VectorDB-Autogenerated", "Location" -> 
              LocalObject[
               "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ResolvedFeatureExtractor" -> Identity, 
              "VectorDatabaseInfo" -> <|
               "DistanceFunction" -> "l2sq", "WorkingPrecision" -> "f32", 
                "Capacity" -> 50, "Dimensions" -> 384, "Connectivity" -> 16, 
                "ExpansionAdd" -> 128, "ExpansionSearch" -> 64|>, "Version" -> 
              1.1, "WorkingPrecision" -> "Real32", "Evaluator" -> "c++", 
              "DatabaseType" -> "USearch", 
              "MetadataKeys" -> {
               "Items", "ChunkUUID", "SourceUUID", "Source", "Tags"}, 
              "Dimensions" -> {25, 384}, "Hash" -> 
              17672155075973429641946173339934265397|>], "DocumentCount" -> 1,
            "FeatureExtractor" -> "SentenceBERT", "GeneratedAssetLocation" -> 
           "LocalObject", "ID" -> "APS Wiki Index", "ItemCount" -> 25, 
           "Location" -> 
           LocalObject[
            "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index"], "TagKeys" -> {}, 
           "Tokenizer" -> "GPT-4", "Version" -> 1, "Hash" -> 
           128600303269284630151141891857580183396|>], #, "Items"]|>& ], 
    "InputSelector" -> Lookup["Input"], "Options" -> {}, "LLMPacletVersion" -> 
    "1.6.10"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.950965217471895*^9, 3.950966188829466*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"c1eb3f7f-156c-b946-b407-f2cb64643d71"]
}, Open  ]],

Cell["\<\
With a search of the index you have provided automatically conducted, the \
model will now answer according to the new information it was given:\
\>", "Text",
 CellChangeTimes->{{3.950967150689888*^9, 
  3.9509671834899235`*^9}},ExpressionUUID->"5e073927-efee-904c-aca5-\
9515d93996ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChatEvaluate", "[", 
  RowBox[{
   RowBox[{"ChatObject", "[", "]"}], ",", 
   "\"\<What are all the topical groups of the American Physical Society? \
Please list them.\>\"", ",", 
   RowBox[{"LLMEvaluator", "->", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Model\>\"", "->", "\"\<gpt-4.5-preview\>\""}], ",", 
      RowBox[{"\"\<Prompts\>\"", "->", "generator"}]}], "|>"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9509652765056114`*^9, 3.950965280342104*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"98e5a627-1344-284c-aebc-48d2d35e7f2c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 PaneBox[
                  FrameBox[
                   TagBox[
                    GridBox[{{
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEmV8gECGEJi8Iol26dRSR+UCg
hMY3ReZ/+J1pimreAZi8CBrfFJkP04eQxyWOqu9dzX9FZL4RB8S9CH1w/6Dw
F3y8pIkqD6UbRYUwxAFRLy5n
                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.49019607843137253`, 0.8235294117647058, 1., 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGmDhDaDEqLIPMbDpwSRJMXANIN9/17TZH4yObA
+ErIfIeEpwpo5img2adAgIaZq4UmborMR3IXTB7sboW7T1D4D2r+K6L5Czkc
4P5DMg9THQC6JyON
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQGmDmCqAUx/WO6GwsctjqrvQc1/RWR+QspuEL9B
YUMRmO/wsAosv39+FJjfcMALzL/s6wTmH5gvBeIfuOSrBDNfEdUeOF8LmZ+Q
tkwTmd/gmADhrzuugKLvm4YImjkKaHxc4qj6Ep4KocmD+Q4bilD4QKCExjdF
5sPDE24ePFxF0PiIcAYAYyg58Q==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.18823529411764706`, 0.49411764705882355`, 
                    0.6549019607843137, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"What are all the topical groups of the American \
Physical Society? Please list them.\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], LineIndent -> 0,
                     LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 6.00100040435791},
                     {3., 6.00100040435791}, {3., 5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Role" -> "User", 
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "What are all the topical groups of the American Physical \
Society? Please list them."|>}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 36, 
                    33.2821893`9.274786785569342}, "Instant", 
                    "Gregorian", -5.]|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}, {
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
                    "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
                    13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
                    12.375399589538574`, 8.781000137329102}, {
                    9.00040054321289, 6.081000328063965}, {9.00040054321289, 
                    8.}, {9.00040054321289, 9.}, {8.00040054321289, 9.}, {
                    5.000400543212891, 9.}, {5.000400543212891, 21.}, {
                    21.00040054321289, 21.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"The topical groups of the American Physical Society \
(APS) are:\\n\\n1. Data Science (GDS)  \\n2. Energy Research and Applications \
(GERA)  \\n3. Few-Body Systems (GFB)  \\n4. Hadronic Physics (GHP)  \\n5. \
Instrument and Measurement Science (GIMS)  \\n6. Magnetism (GMAG)  \\n7. \
Medical Physics (GMED)  \\n8. Physics Education Research (GPER)  \\n9. \
Physics of Climate (GPC)  \\n10. Plasma Astrophysics (GPAP)  \\n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \\n12. Shock Compression of \
Condensed Matter (SHOCK)  \\n13. Statistical and Nonlinear Physics (GSNP)\"", 
                    BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], LineIndent -> 0,
                     LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "The topical groups of the American Physical Society \
(APS) are:\n\n1. Data Science (GDS)  \n2. Energy Research and Applications \
(GERA)  \n3. Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP)  \n5. \
Instrument and Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. \
Medical Physics (GMED)  \n8. Physics Education Research (GPER)  \n9. Physics \
of Climate (GPC)  \n10. Plasma Astrophysics (GPAP)  \n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \n12. Shock Compression of \
Condensed Matter (SHOCK)  \n13. Statistical and Nonlinear Physics (GSNP)"|>}, 
                    "ToolRequests" -> {}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 36, 
                    46.6832493`9.421735940371738}, "Instant", 
                    "Gregorian", -5.], "Role" -> "Assistant"|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, "Rows" -> {
                    GrayLevel[1], 
                    GrayLevel[
                    Rational[83, 85]]}}, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {None, {
                    RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745]}, None}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaseStyle -> "Text"], "Grid"], FrameMargins -> 0, 
                   FrameStyle -> 
                   RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745], RoundingRadius -> 1.5, StripOnInput -> 
                   False], AppearanceElements -> None, 
                  Scrollbars -> {False, Automatic}, 
                  ImageSize -> {{20, 600}, {20, 400}}, ContentPadding -> 
                  False], Deploy, DefaultBaseStyle -> "Deploy"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 PaneBox[
                  FrameBox[
                   TagBox[
                    GridBox[{{
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEmV8gECGEJi8Iol26dRSR+UCg
hMY3ReZ/+J1pimreAZi8CBrfFJkP04eQxyWOqu9dzX9FZL4RB8S9CH1w/6Dw
F3y8pIkqD6UbRYUwxAFRLy5n
                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.49019607843137253`, 0.8235294117647058, 1., 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGmDhDaDEqLIPMbDpwSRJMXANIN9/17TZH4yObA
+ErIfIeEpwpo5img2adAgIaZq4UmborMR3IXTB7sboW7T1D4D2r+K6L5Czkc
4P5DMg9THQC6JyON
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQGmDmCqAUx/WO6GwsctjqrvQc1/RWR+QspuEL9B
YUMRmO/wsAosv39+FJjfcMALzL/s6wTmH5gvBeIfuOSrBDNfEdUeOF8LmZ+Q
tkwTmd/gmADhrzuugKLvm4YImjkKaHxc4qj6Ep4KocmD+Q4bilD4QKCExjdF
5sPDE24ePFxF0PiIcAYAYyg58Q==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.18823529411764706`, 0.49411764705882355`, 
                    0.6549019607843137, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"What are all the topical groups of the American \
Physical Society? Please list them.\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], LineIndent -> 0,
                     LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Role" -> "User", 
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "What are all the topical groups of the American Physical \
Society? Please list them."|>}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 36, 
                    33.2821893`9.274786785569342}, "Instant", 
                    "Gregorian", -5.]|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}, {
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
                    "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
                    13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
                    12.375399589538574`, 8.781000137329102}, {
                    9.00040054321289, 6.081000328063965}, {9.00040054321289, 
                    8.}, {9.00040054321289, 9.}, {8.00040054321289, 9.}, {
                    5.000400543212891, 9.}, {5.000400543212891, 21.}, {
                    21.00040054321289, 21.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"The topical groups of the American Physical Society \
(APS) are:\\n\\n1. Data Science (GDS)  \\n2. Energy Research and Applications \
(GERA)  \\n3. Few-Body Systems (GFB)  \\n4. Hadronic Physics (GHP)  \\n5. \
Instrument and Measurement Science (GIMS)  \\n6. Magnetism (GMAG)  \\n7. \
Medical Physics (GMED)  \\n8. Physics Education Research (GPER)  \\n9. \
Physics of Climate (GPC)  \\n10. Plasma Astrophysics (GPAP)  \\n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \\n12. Shock Compression of \
Condensed Matter (SHOCK)  \\n13. Statistical and Nonlinear Physics (GSNP)\"", 
                    BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], LineIndent -> 0,
                     LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "The topical groups of the American Physical Society \
(APS) are:\n\n1. Data Science (GDS)  \n2. Energy Research and Applications \
(GERA)  \n3. Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP)  \n5. \
Instrument and Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. \
Medical Physics (GMED)  \n8. Physics Education Research (GPER)  \n9. Physics \
of Climate (GPC)  \n10. Plasma Astrophysics (GPAP)  \n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \n12. Shock Compression of \
Condensed Matter (SHOCK)  \n13. Statistical and Nonlinear Physics (GSNP)"|>}, 
                    "ToolRequests" -> {}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 13, 36, 
                    46.6832493`9.421735940371738}, "Instant", 
                    "Gregorian", -5.], "Role" -> "Assistant"|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, "Rows" -> {
                    GrayLevel[1], 
                    GrayLevel[
                    Rational[83, 85]]}}, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {None, {
                    RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745]}, None}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaseStyle -> "Text"], "Grid"], FrameMargins -> 0, 
                   FrameStyle -> 
                   RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745], RoundingRadius -> 1.5, StripOnInput -> 
                   False], AppearanceElements -> None, 
                  Scrollbars -> {False, Automatic}, 
                  ImageSize -> {{20, 600}, {20, 400}}, ContentPadding -> 
                  False], Deploy, DefaultBaseStyle -> "Deploy"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChatObject[<|
   "LLMEvaluator" -> 
    LLMConfiguration[<|
      "Model" -> <|"Service" -> "OpenAI", "Name" -> "gpt-4.5-preview"|>, 
       "MaxTokens" -> Automatic, "Temperature" -> Automatic, 
       "TotalProbabilityCutoff" -> Automatic, "Prompts" -> {
         LLMPromptGenerator[<|
          "InputSpecifications" -> {"Input"}, "Function" -> Composition[
             
             TemplateObject[{
              "Answer using this information:", "\n\n", "BEGIN CONTEXT", 
               "\n\n", 
               TemplateSlot[
               "Items", 
                InsertionFunction -> (
                 StringRiffle[#, 
                  Wolfram`LLMFunctions`LLMPromptGenerator`Private`$\
ItemDelimiter]& )], "\n\n", "END CONTEXT", "\n\n", 
               TemplateSlot["Input"]}, CombinerFunction -> StringJoin], <|
             "Input" -> #, "Items" -> SemanticSearch[
                
                SemanticSearchIndex[<|
                 "Database" -> 
                  VectorDatabaseObject[<|
                    "DistanceFunction" -> EuclideanDistance, 
                    "FeatureExtractor" -> Identity, "GeneratedAssetLocation" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ID" -> "APS Wiki Index-VectorDB-Autogenerated", "Location" -> 
                    LocalObject[
                    "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index-VectorDB-\
Autogenerated"], "ResolvedFeatureExtractor" -> Identity, 
                    "VectorDatabaseInfo" -> <|
                    "DistanceFunction" -> "l2sq", "WorkingPrecision" -> "f32",
                     "Capacity" -> 50, "Dimensions" -> 384, "Connectivity" -> 
                    16, "ExpansionAdd" -> 128, "ExpansionSearch" -> 64|>, 
                    "Version" -> 1.1, "WorkingPrecision" -> "Real32", 
                    "Evaluator" -> "c++", "DatabaseType" -> "USearch", 
                    "MetadataKeys" -> {
                    "Items", "ChunkUUID", "SourceUUID", "Source", "Tags"}, 
                    "Dimensions" -> {25, 384}, "Hash" -> 
                    17672155075973429641946173339934265397|>], 
                  "DocumentCount" -> 1, "FeatureExtractor" -> "SentenceBERT", 
                  "GeneratedAssetLocation" -> "LocalObject", "ID" -> 
                  "APS Wiki Index", "ItemCount" -> 25, "Location" -> 
                  LocalObject[
                   "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/APS%2520Wiki%2520Index"], "TagKeys" -> {}, 
                  "Tokenizer" -> "GPT-4", "Version" -> 1, "Hash" -> 
                  128600303269284630151141891857580183396|>], #, 
                "Items"]|>& ], "InputSelector" -> Lookup["Input"], 
           "Options" -> {}, "LLMPacletVersion" -> "1.6.10"|>]}, 
       "PromptDelimiter" -> "\n\n", "StopTokens" -> Automatic, 
       "ToolMethod" -> <|
        "ToolPrompt" -> 
         TemplateObject[{
           "You have access to tools which can be used to do things, fetch \
data, compute, etc. while you create your response. ", 
            "Each tool takes input as JSON following a JSON schema. Here are \
the available tools and their associated schemas:\n\n", 
            TemplateSequence[
             TemplateExpression[
              StringTemplate[
              "Tool Name: `Name`\nDescription: `Description`\nSchema:\n\
`Schema`\n\n"]], 
             TemplateExpression[
              Map[Append[
                Wolfram`LLMFunctions`Common`LLMToolInformation[#], "Schema" -> 
                ExportString[
                  Information[#, "JSONSchema"], "JSON"]]& , 
               TemplateSlot["Tools"]]]], 
            "To call a tool, write the following at any time during your \
response:\n\n", 
            "TOOLCALL: <tool name>\n{\n\t<\"parameter name 1\">: <value 1>\n\t\
<\"parameter name 2\">: <value 2>\n}\nENDARGUMENTS\nENDTOOLCALL\n\n", 
            "Always use valid JSON to specify the parameters in the tool \
call. ", "Always follow the tool's JSON schema to specify the parameters in \
the tool call. ", 
            "Fill in the values in <> brackets with the values for the \
particular tool. ", "Provide as many parameters as the tool requires. ", 
            "Always make one tool call at a time. ", 
            "Always write two line breaks before each tool call.\n\n", 
            "After the tool call, RESULT: <tool result> will be written to \
show the result of the tool call above."}, CombinerFunction -> StringJoin, 
           InsertionFunction -> TextString], "ToolRequestParser" -> 
         Wolfram`LLMFunctions`Tools`PromptToolUtilities`Private`\
parseToolRequest, "ToolResponseInsertionFunction" -> 
         Wolfram`LLMFunctions`Tools`PromptToolUtilities`Private`\
toolResponseInsertionFunction, "ToolStopTokens" -> {"ENDTOOLCALL"}|>, "Tools" -> 
       Automatic, "LLMPacletVersion" -> "1.6.10", Authentication -> 
       Automatic|>], 
    "Messages" -> {<|
      "Role" -> "User", 
       "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "What are all the topical groups of the American Physical Society? \
Please list them."|>}, "Timestamp" -> 
       DateObject[{2025, 3, 14, 13, 36, 33.2821893`9.274786785569342}, 
         "Instant", "Gregorian", -5.]|>, <|
      "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "The topical groups of the American Physical Society (APS) are:\n\n\
1. Data Science (GDS)  \n2. Energy Research and Applications (GERA)  \n3. \
Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP)  \n5. Instrument and \
Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. Medical Physics \
(GMED)  \n8. Physics Education Research (GPER)  \n9. Physics of Climate (GPC) \
 \n10. Plasma Astrophysics (GPAP)  \n11. Precision Measurement & Fundamental \
Constants (GPMFC)  \n12. Shock Compression of Condensed Matter (SHOCK)  \n13. \
Statistical and Nonlinear Physics (GSNP)"|>}, "ToolRequests" -> {}, 
       "Timestamp" -> 
       DateObject[{2025, 3, 14, 13, 36, 46.6832493`9.421735940371738}, 
         "Instant", "Gregorian", -5.], "Role" -> "Assistant"|>}, "ChatID" -> 
    "fb694a1a-7742-44ab-9734-b18458cfce5f", 
    "History" -> {<|
      "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "The topical groups of the American Physical Society (APS) are:\n\n\
1. Data Science (GDS)  \n2. Energy Research and Applications (GERA)  \n3. \
Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP)  \n5. Instrument and \
Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. Medical Physics \
(GMED)  \n8. Physics Education Research (GPER)  \n9. Physics of Climate (GPC) \
 \n10. Plasma Astrophysics (GPAP)  \n11. Precision Measurement & Fundamental \
Constants (GPMFC)  \n12. Shock Compression of Condensed Matter (SHOCK)  \n13. \
Statistical and Nonlinear Physics (GSNP)"|>}, "ToolRequests" -> {}, 
       "FinishReason" -> "stop", "Model" -> "gpt-4.5-preview-2025-02-27", 
       "Timestamp" -> 
       DateObject[{2025, 3, 14, 13, 36, 46.6832493`9.421735940371738}, 
         "Instant", "Gregorian", -5.], 
       "Usage" -> <|
        "History" -> Quantity[1165, "Tokens"], "Completion" -> 
         Quantity[152, "Tokens"]|>, "CallID" -> 
       "chatcmpl-BB4BT8f08fWWxBLEylO9l4elPBiLB", "RawResponseWXF" -> 
       ByteArray[CompressedData["
1:eJx9U01PGzEQDTSUj4L6IfVQTu6hKBx2G9JQArdNSACVhChG4hgZ7+zG4LVX
thfIj+i9x/6o/qCON0BSVe0tmTfz9s3zm4/XenS9VKlU7quVSusoWg7o2ghs
rpWFaC2gyyKmO3zCHM9yGbTbzfZlK6m3kqurh/Z5dyovDmUT5LAtztsBfamv
b4A7+toPhFzjCDihVUBXuQHmIBaf73+lAV3JdAySbqe5C5rhfpAbuBNwHzTq
jf2g3ggaB35kogUHmyzZ6rmwLnqBc0LF8NCpIJqBtSyFqBrQqtES6DqzFtuY
cn5WKwfK0Z/VywkQp3PBmSSp0UVuiU6Iw2qUgcGyIsPJ1JY41VyAm5JaNKS7
hBk42tjYC8kxc4xQhBQHUjs5RoxsNELSVWDSKUG7gBk+IUzFJMpziVx+a4u9
3VHkm7+EpIfrtXU8JXRqHWQe7LU91gzJKYuNVoI/KvHY6dBj+yE5U9aZIsNl
Sv4+MFsYKP/PJZ31S01fQ9JnqULPbYbVfnTiqwdYRef9gnP+fvfYY63wudaN
i5nu+UK1k2F35NsO521oXkeKDB/Twx2P7tURlsxmjEQoVufPXxlG5Rp7aOLQ
ABfW0y+usEN6hYqZ/43yOmiaf8BytN+bkaPRdKL5LaIZ5sSWHF6FxixgStET
5hwYUqOnF51v5Qz6TR0uY125tjduoJUUCvdaMIEOhrsYFgNJYZm01UEhZUBf
MaW0mz1hUpmFL6BbiVDCTsaYY6sVrVoMFQayKEO4gnhuUJ8bO32Lqm6+Yy7f
zi/gqfwDo7vpkF0+VT7h7Ps/ZscxOCak9be4xRmfQPyI+OBvsiIWeqHw4a+v
PBOghjczvUKl/+PYZpxDjvc5RocxKgtkJWzA3/W/4E0L5g5PdewEGLoaQ8IK
iZa9s2XUx+hcCiY3Al/20eOlgV2PCqcxR4L/BgsKfbI=
         "]], "Role" -> "Assistant"|>}, "Usage" -> Quantity[1317, "Tokens"], 
    "Icon" -> Graphics[{
       Thickness[0.038461538461538464`], 
       Style[{
         FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
          "]]}, 
        FaceForm[
         RGBColor[1., 1., 1., 1.]]], 
       Style[{
         FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
           "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
           13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
           12.375399589538574`, 8.781000137329102}, {9.00040054321289, 
           6.081000328063965}, {9.00040054321289, 8.}, {9.00040054321289, 
           9.}, {8.00040054321289, 9.}, {5.000400543212891, 9.}, {
           5.000400543212891, 21.}, {21.00040054321289, 21.}}}]}, 
        FaceForm[
         RGBColor[
         0.5372549019607843, 0.5372549019607843, 0.5372549019607843, 1.]]]}, 
      ImageSize -> {{27., 27.}, {27., 27.}}, 
      PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> Automatic], 
    "LLMPacletVersion" -> "1.6.10"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9509652962474537`*^9, 3.95096620672604*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"f2f089a4-9e3a-1146-99db-a1468a217f27"]
}, Open  ]],

Cell["\<\
Note how the prompt and query that are used by default return the relevant \
information as the 5th context item in this case:\
\>", "Text",
 CellChangeTimes->{{3.9509672413139305`*^9, 3.9509672512368984`*^9}, {
   3.9509672826571503`*^9, 3.9509673121047287`*^9}, {3.9509674223855324`*^9, 
   3.950967447850609*^9}, 
   3.950968004674597*^9},ExpressionUUID->"8ee95848-aa67-bf41-bba3-\
ac1122a1cad6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TabView", "@", 
  RowBox[{"SemanticSearch", "[", 
   RowBox[{
   "index", ",", 
    "\"\<What are all the topical groups of the American Physical Society? \
Please list them.\>\""}], "]"}]}]], "Input",
 CellLabel->
  "In[322]:=",ExpressionUUID->"b288f7b7-3e81-c34b-8032-1ca71ea8853a"],

Cell[BoxData[
 TabViewBox[{{1,
  "1"->"\<\"== See also ==\\nDeutsche Physikalische Gesellschaft\\nFellows of \
the American Physical Society\"\>"}, {2,
  "2"->"\<\"== Units ==\\nThe American Physical Society has 47 units \
(divisions, forums, topical groups and sections) that represent the wide \
range of interests of the physics community.\"\>"}, {3,
  "3"->"\<\"The American Physical Society (APS) is a not-for-profit \
membership organization of professionals in physics and related disciplines, \
comprising nearly fifty divisions, sections, and other units. Its mission is \
the advancement and diffusion of knowledge of physics. It publishes more than \
a dozen scientific journals, including the prestigious Physical Review and \
Physical Review Letters, and organizes more than twenty science meetings each \
year. It is a member society of the American Institute of Physics. Since \
January 2021, it is led by chief executive officer Jonathan Bagger.\"\>"}, {4,
  "4"->"\<\"== Prizes and awards ==\\n\\nThe American Physical Society gives \
out a number of awards for research excellence and conduct; topics include \
outstanding leadership, computational physics, lasers, mathematics, and more.\
\"\>"}, {5,
  "5"->"\<\"=== Topical groups ===\\nAPS has the following topical groups:\\n\
\\nData Science (GDS)\\nEnergy Research and Applications (GERA)\\nFew-Body \
Systems (GFB)\\nHadronic Physics (GHP)\\nInstrument and Measurement Science \
(GIMS)\\nMagnetism (GMAG)\\nMedical Physics (GMED)\\nPhysics Education \
Research (GPER)\\nPhysics of Climate (GPC)\\nPlasma Astrophysics \
(GPAP)\\nPrecision Measurement & Fundamental Constants (GPMFC)\\nShock \
Compression of Condensed Matter (SHOCK)\\nStatistical and Nonlinear Physics \
(GSNP)\"\>"}, {6,
  "6"->"\<\"== External links ==\\nOfficial website \\nBulletin of the \
American Physical Society \[LongDash] freely available scientific abstracts \
presented at general meetings and various unit meetings of APS \
Physics.\"\>"}, {7,
  "7"->"\<\"== History ==\\nThe American Physical Society was founded on May \
20, 1899, when thirty-six physicists gathered at Columbia University for that \
purpose. They proclaimed the mission of the new Society to be \\\"to advance \
and diffuse the knowledge of physics\\\", and in one way or another the APS \
has been at that task ever since. In the early years, virtually the sole \
activity of the APS was to hold scientific meetings, initially four per year. \
In 1913, the APS took over the operation of the Physical Review, which had \
been founded in 1893 at Cornell University, and journal publication became \
its second major activity. The Physical Review was followed by Reviews of \
Modern Physics in 1929 and by Physical Review Letters in 1958. Over the \
years, Phys. Rev. has subdivided into five separate sections as the fields of \
physics proliferated and the number of submissions grew.\\nIn more recent \
years, the activities of the society have broadened considerably. Stimulated \
by the increase in federal funding in the period after the Second World War, \
and even more by the increased public involvement of scientists in the 1960s, \
the APS is active in public and governmental affairs, and in the \
international physics community. It also conducts extensive programs in \
education, science outreach (specifically physics outreach), and media \
relations. Fourteen divisions and eleven topical groups covering all areas of \
physics research. Six forums reflect the interests of its fifty thousand \
members in broader issues, and nine sections organized by geographical \
region.\\nIn 1999, APS Physics celebrated its centennial with the \
biggest-ever physics meeting in Atlanta. In 2005, APS took the lead role in \
United States participation in the World Year of Physics, initiating several \
programs to broadly publicize physics during the 100th anniversary of Albert \
Einstein's annus mirabilis. Einstein@Home, one of the projects APS initiated \
during World Year of Physics, is an ongoing and popular distributed computing \
project.\"\>"}, {8,
  "8"->"\<\"=== Forums ===\\nDiversity and Inclusion (FDI)\\nEarly Career \
Scientists (FECS)\\nEducation (FEd)\\nGraduate Student Affairs \
(FGSA)\\nHistory and Philosophy of Physics (FHPP)\\nIndustrial and Applied \
Physics (FIAP)\\nInternational Physics (FIP)\\nOutreach and Engaging the \
Public (FOEP)\\nPhysics and Society (FPS)\"\>"}, {9,
  "9"->"\<\"=== CSWP/COM site visits ===\\nThe APS has had a long-standing \
interest in improving the climate in physics departments for underrepresented \
minorities and women. The Committee on the Status of Women in Physics (CSWP) \
and the Committee on Minorities (COM) both sponsor site visit programs to \
universities as well as national labs. \"\>"}, {10,
  "10"->"\<\"==== Niels Bohr Library & Archives ====\\nAmerican Physical \
Society Directed Energy Weapons (DEW) study records, \
1983\[Dash]1988\\nAmerican Physical Society addition to records, \
1905\[Dash]2010 (bulk 1977\[Dash]2010)\\nAmerican Physical Society centennial \
meeting records, 1997\[Dash]1999\\nAmerican Physical Society miscellaneous \
publications, 1920\[Dash]2015\\nAmerican Physical Society records, \
1899\[Dash]1989\\nAmerican Physical Society Astrophysics Division records of \
the Secretary/Treasurer, 1970\[Dash]1992\\nAPS Committee on Applications in \
Physics records, 1975\[Dash]1999\\nAmerican Physical Society Forum on the \
History of Physics records of secretary-treasurer Thomas M. Miller, 2002\
\[Dash]2013\\nAPS Division of Physics of Beams records, \
1983\[Dash]2002\\nAmerican Physical Society Division of Solid State Physics \
records of Roman Smoluchowski, 1943\[Dash]1947\\nAPS Southeastern Section \
records, 1934\[Dash]2010\\nAPS Office of the Treasurer records of George B. \
Pegram, 1926\[Dash]1957\\nAPS Texas Section records 1980\[Dash]2017\"\>"}}, 
  5]], "Output",
 CellChangeTimes->{3.9509672385070915`*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"527ab1b1-4745-5147-8dc4-f4d8ea85cd99"]
}, Open  ]],

Cell["\<\
This is because the search index and query were generated in the simplest \
automated way. If you provide a better search query to the index, you get the \
desired result as the first item returned:\
\>", "Text",
 CellChangeTimes->{{3.950967325120968*^9, 
  3.950967408977543*^9}},ExpressionUUID->"64be1ede-93c6-6e4e-a981-\
3c8eadf65c12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TabView", "@", 
  RowBox[{"SemanticSearch", "[", 
   RowBox[{"index", ",", "\"\<topical groups\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.950966096290001*^9, 3.95096610264904*^9}, {
  3.9509663239868393`*^9, 3.950966416656212*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"3e751035-47a3-f148-a207-9b1d08659e16"],

Cell[BoxData[
 TabViewBox[{{1,
  "1"->"\<\"=== Topical groups ===\\nAPS has the following topical groups:\\n\
\\nData Science (GDS)\\nEnergy Research and Applications (GERA)\\nFew-Body \
Systems (GFB)\\nHadronic Physics (GHP)\\nInstrument and Measurement Science \
(GIMS)\\nMagnetism (GMAG)\\nMedical Physics (GMED)\\nPhysics Education \
Research (GPER)\\nPhysics of Climate (GPC)\\nPlasma Astrophysics \
(GPAP)\\nPrecision Measurement & Fundamental Constants (GPMFC)\\nShock \
Compression of Condensed Matter (SHOCK)\\nStatistical and Nonlinear Physics \
(GSNP)\"\>"}, {2,
  "2"->"\<\"=== Forums ===\\nDiversity and Inclusion (FDI)\\nEarly Career \
Scientists (FECS)\\nEducation (FEd)\\nGraduate Student Affairs \
(FGSA)\\nHistory and Philosophy of Physics (FHPP)\\nIndustrial and Applied \
Physics (FIAP)\\nInternational Physics (FIP)\\nOutreach and Engaging the \
Public (FOEP)\\nPhysics and Society (FPS)\"\>"}, {3,
  "3"->"\<\"== Units ==\\nThe American Physical Society has 47 units \
(divisions, forums, topical groups and sections) that represent the wide \
range of interests of the physics community.\"\>"}, {4,
  "4"->"\<\"=== New faculty workshop ===\\nAPS co-sponsors a set of workshops \
for new physics and astronomy faculty with the American Association of \
Physics Teachers and the American Astronomical Society. These workshops reach \
nearly half of all new physics and astronomy faculty, and introduce them to \
current pedagogical practices, results of physics education research, and \
time management skills to help them begin and improve their academic careers.\
\"\>"}, {5,
  "5"->"\<\"=== Conferences for Undergraduate Women in Physics ===\\nAPS \
Conferences for Undergraduate Women in Physics are three-day regional \
conferences for undergraduate physics majors. The conferences aim to help \
undergraduate women continue in physics by providing them with the \
opportunity to experience a professional conference, information about \
graduate school and professions in physics, and access to other women in \
physics of all ages with whom they can share experiences, advice, and \
ideas.\"\>"}, {6,
  "6"->"\<\"== History ==\\nThe American Physical Society was founded on May \
20, 1899, when thirty-six physicists gathered at Columbia University for that \
purpose. They proclaimed the mission of the new Society to be \\\"to advance \
and diffuse the knowledge of physics\\\", and in one way or another the APS \
has been at that task ever since. In the early years, virtually the sole \
activity of the APS was to hold scientific meetings, initially four per year. \
In 1913, the APS took over the operation of the Physical Review, which had \
been founded in 1893 at Cornell University, and journal publication became \
its second major activity. The Physical Review was followed by Reviews of \
Modern Physics in 1929 and by Physical Review Letters in 1958. Over the \
years, Phys. Rev. has subdivided into five separate sections as the fields of \
physics proliferated and the number of submissions grew.\\nIn more recent \
years, the activities of the society have broadened considerably. Stimulated \
by the increase in federal funding in the period after the Second World War, \
and even more by the increased public involvement of scientists in the 1960s, \
the APS is active in public and governmental affairs, and in the \
international physics community. It also conducts extensive programs in \
education, science outreach (specifically physics outreach), and media \
relations. Fourteen divisions and eleven topical groups covering all areas of \
physics research. Six forums reflect the interests of its fifty thousand \
members in broader issues, and nine sections organized by geographical \
region.\\nIn 1999, APS Physics celebrated its centennial with the \
biggest-ever physics meeting in Atlanta. In 2005, APS took the lead role in \
United States participation in the World Year of Physics, initiating several \
programs to broadly publicize physics during the 100th anniversary of Albert \
Einstein's annus mirabilis. Einstein@Home, one of the projects APS initiated \
during World Year of Physics, is an ongoing and popular distributed computing \
project.\"\>"}, {7,
  "7"->"\<\"=== CSWP/COM site visits ===\\nThe APS has had a long-standing \
interest in improving the climate in physics departments for underrepresented \
minorities and women. The Committee on the Status of Women in Physics (CSWP) \
and the Committee on Minorities (COM) both sponsor site visit programs to \
universities as well as national labs. \"\>"}, {8,
  "8"->"\<\"The American Physical Society (APS) is a not-for-profit \
membership organization of professionals in physics and related disciplines, \
comprising nearly fifty divisions, sections, and other units. Its mission is \
the advancement and diffusion of knowledge of physics. It publishes more than \
a dozen scientific journals, including the prestigious Physical Review and \
Physical Review Letters, and organizes more than twenty science meetings each \
year. It is a member society of the American Institute of Physics. Since \
January 2021, it is led by chief executive officer Jonathan Bagger.\"\>"}, {9,
  "9"->"\<\"=== Divisions ===\\nAstrophysics (DAP)\\nAtomic, Molecular & \
Optical Physics (DAMOP): The objective of the division is the promotion of \
the fundamental research on atoms, simple molecules, electrons and light, and \
their interactions. Historically, this is the oldest division of the American \
Physical Society. It was created in 1943. The division manages a number of \
prestigious awards for AMO scientists at various stages of their careers, \
such as the Davisson-Germer Prize in Atomic or Surface Physics, Rabi Prize in \
AMO Physics, Outstanding Doctoral Thesis Research in AMO Physics, Herbert P. \
Broida Prize, etc. It also organizes annual DAMOP Meetings attended by many \
leading AMO researchers, both from the United States and abroad.\\nBiological \
Physics (DBIO): With over 2,000 members, the division is the second largest \
learned society in the world devoted to biological physics, following the \
Biophysical Society. The objective of the division is the advancement and \
dissemination of knowledge on the broad interface of physics and biology. \
This includes studying biological phenomena with physics tools and \
identifying new physics questions within biological contexts. The division \
supports a program of over 600 (as of 2016) presentations at the annual March \
Meeting of the APS, on topics ranging from protein biophysics, to \
neuroscience and evolution. It promotes research and development of \
biological physics, enhanced the standing of the field, and recognizes \
important contributions to the field, such as by awarding the Max Delbruck \
Prize in biological physics.\\nChemical Physics (DCP)\\nComputational Physics \
(DCOMP): The division has more than 2,000 members, and the objective of the \
division is the advancement and dissemination of knowledge regarding the use \
of computers in physics research and education. This includes, among other \
areas, their application to experiments, theory, and education as well as the \
application of physics to the development of computer technology. This \
division provides to its members an opportunity for coordination and a forum \
for discussion and communication. In addition, the division promotes research \
and development in computational physics; enhances prestige and professional \
standing of its members; encourages scholarly publication; and promotes \
international cooperation in these activities.\\nCondensed Matter Physics \
(DCMP)\\nFluid Dynamics (DFD)\\nGravitational Physics (DGRAV)\\nLaser Science \
(DLS)\\nMaterials Physics (DMP)\\nNuclear Physics (DNP)\\nParticles and \
Fields (DPF)\\nPhysics of Beams (DPB)\\nPlasma Physics (DPP)\\nPolymer \
Physics (DPOLY)\\nQuantum Information (DQI)\\nSoft Matter (DSOFT)\"\>"}, {10,
  "10"->"\<\"== See also ==\\nDeutsche Physikalische Gesellschaft\\nFellows \
of the American Physical Society\"\>"}}, 1]], "Output",
 CellChangeTimes->{
  3.950966103413418*^9, 3.95096624419026*^9, {3.9509663360576057`*^9, 
   3.9509663613047028`*^9}, {3.9509663958617744`*^9, 3.9509664177127*^9}},
 CellLabel->
  "Out[320]=",ExpressionUUID->"f3a694e8-f78e-5b4e-a47a-875a0d0978f6"]
}, Open  ]],

Cell["\<\
Another best practice is to think more carefully about what you want to embed \
and then associate a payload to return for that query.\
\>", "Text",
 CellChangeTimes->{{3.950967474096962*^9, 3.9509674776341324`*^9}, {
  3.950968028362213*^9, 3.950968053194084*^9}, {3.9509684152202396`*^9, 
  3.950968420858841*^9}},ExpressionUUID->"6d44d353-6d01-b848-befc-\
cfb724c4d0c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding Annotations to a Semantic Search Index", "Subsection",
 CellChangeTimes->{{3.9509701693554535`*^9, 
  3.9509701977642612`*^9}},ExpressionUUID->"5cae5c01-243a-9a48-ba33-\
31bcb2367369"],

Cell["\<\
With some string parsing, create an annotated list of sources and an \
annotated index:\
\>", "Text",
 CellChangeTimes->{{3.950976707041357*^9, 
  3.950976751489414*^9}},ExpressionUUID->"c01810a5-868a-dc44-87dc-\
7d1208187e45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"annotatedindex", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"input", ",", "items", ",", "parts", ",", "annotated"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"input", "=", 
      RowBox[{
      "WikipediaData", "[", "\"\<American Physical Society\>\"", "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"items", "=", 
      RowBox[{"StringCases", "[", 
       RowBox[{"input", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<=\>\"", ".."}], "~~", 
          RowBox[{"WhitespaceCharacter", ".."}], "~~", 
          RowBox[{"Shortest", "[", "item__", "]"}], "~~", 
          RowBox[{"WhitespaceCharacter", ".."}], "~~", 
          RowBox[{"\"\<=\>\"", ".."}]}], ":>", "item"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"parts", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"input", ",", 
        RowBox[{
         RowBox[{"\"\<=\>\"", ".."}], "~~", 
         RowBox[{"WhitespaceCharacter", ".."}], "~~", 
         RowBox[{"Shortest", "[", "item__", "]"}], "~~", 
         RowBox[{"WhitespaceCharacter", ".."}], "~~", 
         RowBox[{"\"\<=\>\"", ".."}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"annotated", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"items", "->", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<Label\>\"", "->", "#1"}], ",", 
             RowBox[{"\"\<Payload\>\"", "->", 
              RowBox[{"StringTrim", "@", "#2"}]}]}], "|>"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"items", ",", 
            RowBox[{"Rest", "[", "parts", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"CreateSemanticSearchIndex", "[", 
      RowBox[{"annotated", ",", "\"\<Annotated APS\>\"", ",", 
       RowBox[{"Method", "->", 
        RowBox[{"<|", 
         RowBox[{"\"\<MinimumItemLength\>\"", "->", "1"}], "|>"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9509708136358967`*^9, 3.95097089230151*^9}, {
   3.9509709515987644`*^9, 3.9509710900955715`*^9}, {3.9509729998414555`*^9, 
   3.9509730526882744`*^9}, {3.950973138369581*^9, 3.9509731818480988`*^9}, {
   3.9509732275391273`*^9, 3.9509732720560093`*^9}, 3.9509733507326546`*^9, {
   3.9509734048172436`*^9, 3.9509734824486275`*^9}, {3.950975642234932*^9, 
   3.9509756738194904`*^9}},ExpressionUUID->"4d715c9d-ea0c-9b4d-8263-\
d4a5d4699569"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SemanticSearchIndex",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Annotated APS\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["24", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Annotated APS\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["24", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Sources: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["24", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"LocalObject\"", 
                    
                    RowBox[{
                    "LocalObject", "[", 
                    "\"file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/\
Objects/SemanticSearch/SemanticSearchIndex/Annotated%2520APS\"", "]"}]}, 
                   "ClickToCopy2"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SemanticSearchIndex[<|
   "Database" -> 
    VectorDatabaseObject[<|
      "DistanceFunction" -> EuclideanDistance, "FeatureExtractor" -> Identity,
        "GeneratedAssetLocation" -> 
       LocalObject[
        "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/Annotated%2520APS-VectorDB-Autogenerated"],
        "ID" -> "Annotated APS-VectorDB-Autogenerated", "Location" -> 
       LocalObject[
        "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/Annotated%2520APS-VectorDB-Autogenerated"],
        "ResolvedFeatureExtractor" -> Identity, 
       "VectorDatabaseInfo" -> <|
        "DistanceFunction" -> "l2sq", "WorkingPrecision" -> "f32", "Capacity" -> 
         48, "Dimensions" -> 384, "Connectivity" -> 16, "ExpansionAdd" -> 128,
          "ExpansionSearch" -> 64|>, "Version" -> 1.1, "WorkingPrecision" -> 
       "Real32", "Evaluator" -> "c++", "DatabaseType" -> "USearch", 
       "MetadataKeys" -> {
        "Items", "ChunkUUID", "SourceUUID", "Source", "Tags"}, 
       "Dimensions" -> {24, 384}, "Hash" -> 
       274193664023141416616447472892110541356|>], "DocumentCount" -> 24, 
    "FeatureExtractor" -> "SentenceBERT", "GeneratedAssetLocation" -> 
    "LocalObject", "ID" -> "Annotated APS", "ItemCount" -> 24, "Location" -> 
    LocalObject[
     "file:///C:/Users/jmcnally/AppData/Roaming/Wolfram/Objects/\
SemanticSearch/SemanticSearchIndex/Annotated%2520APS"], 
    "TagKeys" -> {"Label", "Payload"}, "Tokenizer" -> "GPT-4", "Version" -> 1,
     "Hash" -> 78297354548062170569162756397057537999|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.950970971923235*^9, 3.950971004189808*^9}, {
   3.950971075513111*^9, 3.950971091115013*^9}, {3.950973046714491*^9, 
   3.950973053682247*^9}, 3.9509731840254974`*^9, {3.950973232527815*^9, 
   3.9509732730770016`*^9}, 3.9509733521378384`*^9, 3.9509734954197865`*^9, {
   3.950975653290758*^9, 3.9509756678897533`*^9}},
 CellLabel->
  "Out[399]=",ExpressionUUID->"30c4d810-ca18-ac4b-a29b-e6792a912fdb"]
}, Open  ]],

Cell["Define a helper function to visualize the results:", "Text",
 CellChangeTimes->{{3.9509766968102436`*^9, 3.9509766974654827`*^9}, {
  3.9509767553770103`*^9, 
  3.9509767638334446`*^9}},ExpressionUUID->"eb98909f-55b0-f647-b919-\
e8af8186cbb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"semanticSearchVisualize", "[", "query_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"searchindex", "=", "annotatedindex"}], ",", "dbResult", ",", 
      "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dbResult", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"SemanticSearch", "[", 
        RowBox[{"searchindex", ",", "query", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Distance\>\"", ",", "\"\<Tags\>\""}], "}"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"MapApply", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tooltip", "[", 
          RowBox[{
           RowBox[{"10", "-", "#1"}], ",", 
           RowBox[{"#2", "[", "\"\<Payload\>\"", "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"Lookup", "[", 
         RowBox[{"dbResult", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Distance\>\"", ",", "\"\<Tags\>\""}], "}"}]}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BarChart", "[", 
      RowBox[{"data", ",", 
       RowBox[{"ChartLabels", "->", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"dbResult", ",", "\"\<Tags\>\""}], "]"}], ",", 
          "\"\<Label\>\""}], "]"}]}], ",", 
       RowBox[{"BarOrigin", "->", "Left"}], ",", 
       RowBox[{"AxesLabel", "->", "\"\<Relevance Score\>\""}], ",", 
       RowBox[{"ImageSize", "->", "600"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.9509744592072144`*^9, 3.9509747524958744`*^9}, {
  3.9509748684352264`*^9, 3.9509749088562374`*^9}, {3.9509750753302937`*^9, 
  3.950975140258095*^9}, {3.9509751827709312`*^9, 3.9509752506571465`*^9}, {
  3.9509754614023285`*^9, 3.9509755182894726`*^9}, {3.950975558579071*^9, 
  3.950975616610552*^9}, {3.950975681675028*^9, 3.9509757759363365`*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"40160870-25b6-5846-9d21-1dad5cdc5298"],

Cell["\<\
Now, the most concise key phrase matches exceptionally well with the section \
heading that contains the desired info. The payload delivered to the model \
can be the text from that section:\
\>", "Text",
 CellChangeTimes->{{3.95097677296838*^9, 
  3.950976875689617*^9}},ExpressionUUID->"401d8d61-58fe-2047-a080-\
6f178d6e0aae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"semanticSearchVisualize", "[", "\"\<topical groups\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.950974679906111*^9, 3.9509746925299873`*^9}, {
  3.950974758535862*^9, 3.9509747620877056`*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"d65a8011-1556-1a46-b83c-e799ccff477d"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3507501820830299}, {0., 10.451201747997086`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 0.5487982520029133}, {1.1763705207379829, 1.4512017479970867},
            RoundingRadius->0],
           
           "\"APS is a leading voice for physics education and the society \
sponsors a variety of conferences dedicating to helping physics education \
leaders stay on top of the trends in the field. Conferences include the \
annual Physics Department Chair Conference, a Graduate Education in Physics \
Conference, and a Distance Education & Online Learning in Physics Workshop.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "APS is a leading voice for physics education and the society \
sponsors a variety of conferences dedicating to helping physics education \
leaders stay on top of the trends in the field. Conferences include the \
annual Physics Department Chair Conference, a Graduate Education in Physics \
Conference, and a Distance Education & Online Learning in Physics Workshop.", 
           "Tooltip"]& ],
         StatusArea[#, 1.1763705207379829`]& ,
         TagBoxNote->"1.1763705207379829"],
        StyleBox["1.1763705207379829`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1763705207379829`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 1.5487982520029133}, {1.1793029175212322, 2.4512017479970867},
            RoundingRadius->0],
           
           "\"APS Conferences for Undergraduate Women in Physics are \
three-day regional conferences for undergraduate physics majors. The \
conferences aim to help undergraduate women continue in physics by providing \
them with the opportunity to experience a professional conference, \
information about graduate school and professions in physics, and access to \
other women in physics of all ages with whom they can share experiences, \
advice, and ideas.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "APS Conferences for Undergraduate Women in Physics are three-day \
regional conferences for undergraduate physics majors. The conferences aim to \
help undergraduate women continue in physics by providing them with the \
opportunity to experience a professional conference, information about \
graduate school and professions in physics, and access to other women in \
physics of all ages with whom they can share experiences, advice, and ideas.",
            "Tooltip"]& ],
         StatusArea[#, 1.1793029175212322`]& ,
         TagBoxNote->"1.1793029175212322"],
        StyleBox["1.1793029175212322`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1793029175212322`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 2.5487982520029133}, {1.217692944731585, 3.4512017479970867},
            RoundingRadius->0],
           
           "\"American Physical Society Directed Energy Weapons (DEW) study \
records, 1983\[Dash]1988\\nAmerican Physical Society addition to records, \
1905\[Dash]2010 (bulk 1977\[Dash]2010)\\nAmerican Physical Society centennial \
meeting records, 1997\[Dash]1999\\nAmerican Physical Society miscellaneous \
publications, 1920\[Dash]2015\\nAmerican Physical Society records, \
1899\[Dash]1989\\nAmerican Physical Society Astrophysics Division records of \
the Secretary/Treasurer, 1970\[Dash]1992\\nAPS Committee on Applications in \
Physics records, 1975\[Dash]1999\\nAmerican Physical Society Forum on the \
History of Physics records of secretary-treasurer Thomas M. Miller, 2002\
\[Dash]2013\\nAPS Division of Physics of Beams records, \
1983\[Dash]2002\\nAmerican Physical Society Division of Solid State Physics \
records of Roman Smoluchowski, 1943\[Dash]1947\\nAPS Southeastern Section \
records, 1934\[Dash]2010\\nAPS Office of the Treasurer records of George B. \
Pegram, 1926\[Dash]1957\\nAPS Texas Section records 1980\[Dash]2017\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "American Physical Society Directed Energy Weapons (DEW) study \
records, 1983\[Dash]1988\nAmerican Physical Society addition to records, 1905\
\[Dash]2010 (bulk 1977\[Dash]2010)\nAmerican Physical Society centennial \
meeting records, 1997\[Dash]1999\nAmerican Physical Society miscellaneous \
publications, 1920\[Dash]2015\nAmerican Physical Society records, \
1899\[Dash]1989\nAmerican Physical Society Astrophysics Division records of \
the Secretary/Treasurer, 1970\[Dash]1992\nAPS Committee on Applications in \
Physics records, 1975\[Dash]1999\nAmerican Physical Society Forum on the \
History of Physics records of secretary-treasurer Thomas M. Miller, 2002\
\[Dash]2013\nAPS Division of Physics of Beams records, 1983\[Dash]2002\n\
American Physical Society Division of Solid State Physics records of Roman \
Smoluchowski, 1943\[Dash]1947\nAPS Southeastern Section records, \
1934\[Dash]2010\nAPS Office of the Treasurer records of George B. Pegram, \
1926\[Dash]1957\nAPS Texas Section records 1980\[Dash]2017", "Tooltip"]& ],
         StatusArea[#, 1.217692944731585]& ,
         TagBoxNote->"1.217692944731585"],
        StyleBox["1.217692944731585`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.217692944731585, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 3.5487982520029133}, {1.2720910221558412, 4.451201747997087},
            RoundingRadius->0],
           
           "\"The Physics Teacher Education Coalition (PhysTEC) is a joint \
project of the American Physical Society and the American Association of \
Physics Teachers, which helps universities transform their physics teacher \
education programs into national models. PhysTEC-supported sites develop \
their physics teacher preparation programs by implementing a set of key \
components that project leaders have identified as critical to success in \
physics teacher preparation. The broader coalition is a national network of \
institutions committed to developing and promoting excellence in physics and \
physical science teacher preparation.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "The Physics Teacher Education Coalition (PhysTEC) is a joint \
project of the American Physical Society and the American Association of \
Physics Teachers, which helps universities transform their physics teacher \
education programs into national models. PhysTEC-supported sites develop \
their physics teacher preparation programs by implementing a set of key \
components that project leaders have identified as critical to success in \
physics teacher preparation. The broader coalition is a national network of \
institutions committed to developing and promoting excellence in physics and \
physical science teacher preparation.", "Tooltip"]& ],
         StatusArea[#, 1.2720910221558412`]& ,
         TagBoxNote->"1.2720910221558412"],
        StyleBox["1.2720910221558412`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.2720910221558412`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 4.548798252002913}, {1.4028997325530224, 5.451201747997087},
            RoundingRadius->0],
           
           "\"The American Physical Society was founded on May 20, 1899, when \
thirty-six physicists gathered at Columbia University for that purpose. They \
proclaimed the mission of the new Society to be \\\"to advance and diffuse \
the knowledge of physics\\\", and in one way or another the APS has been at \
that task ever since. In the early years, virtually the sole activity of the \
APS was to hold scientific meetings, initially four per year. In 1913, the \
APS took over the operation of the Physical Review, which had been founded in \
1893 at Cornell University, and journal publication became its second major \
activity. The Physical Review was followed by Reviews of Modern Physics in \
1929 and by Physical Review Letters in 1958. Over the years, Phys. Rev. has \
subdivided into five separate sections as the fields of physics proliferated \
and the number of submissions grew.\\nIn more recent years, the activities of \
the society have broadened considerably. Stimulated by the increase in \
federal funding in the period after the Second World War, and even more by \
the increased public involvement of scientists in the 1960s, the APS is \
active in public and governmental affairs, and in the international physics \
community. It also conducts extensive programs in education, science outreach \
(specifically physics outreach), and media relations. Fourteen divisions and \
eleven topical groups covering all areas of physics research. Six forums \
reflect the interests of its fifty thousand members in broader issues, and \
nine sections organized by geographical region.\\nIn 1999, APS Physics \
celebrated its centennial with the biggest-ever physics meeting in Atlanta. \
In 2005, APS took the lead role in United States participation in the World \
Year of Physics, initiating several programs to broadly publicize physics \
during the 100th anniversary of Albert Einstein's annus mirabilis. \
Einstein@Home, one of the projects APS initiated during World Year of \
Physics, is an ongoing and popular distributed computing project.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "The American Physical Society was founded on May 20, 1899, when \
thirty-six physicists gathered at Columbia University for that purpose. They \
proclaimed the mission of the new Society to be \"to advance and diffuse the \
knowledge of physics\", and in one way or another the APS has been at that \
task ever since. In the early years, virtually the sole activity of the APS \
was to hold scientific meetings, initially four per year. In 1913, the APS \
took over the operation of the Physical Review, which had been founded in \
1893 at Cornell University, and journal publication became its second major \
activity. The Physical Review was followed by Reviews of Modern Physics in \
1929 and by Physical Review Letters in 1958. Over the years, Phys. Rev. has \
subdivided into five separate sections as the fields of physics proliferated \
and the number of submissions grew.\nIn more recent years, the activities of \
the society have broadened considerably. Stimulated by the increase in \
federal funding in the period after the Second World War, and even more by \
the increased public involvement of scientists in the 1960s, the APS is \
active in public and governmental affairs, and in the international physics \
community. It also conducts extensive programs in education, science outreach \
(specifically physics outreach), and media relations. Fourteen divisions and \
eleven topical groups covering all areas of physics research. Six forums \
reflect the interests of its fifty thousand members in broader issues, and \
nine sections organized by geographical region.\nIn 1999, APS Physics \
celebrated its centennial with the biggest-ever physics meeting in Atlanta. \
In 2005, APS took the lead role in United States participation in the World \
Year of Physics, initiating several programs to broadly publicize physics \
during the 100th anniversary of Albert Einstein's annus mirabilis. \
Einstein@Home, one of the projects APS initiated during World Year of \
Physics, is an ongoing and popular distributed computing project.", 
           "Tooltip"]& ],
         StatusArea[#, 1.4028997325530224`]& ,
         TagBoxNote->"1.4028997325530224"],
        StyleBox["1.4028997325530224`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4028997325530224`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 5.548798252002913}, {1.4544446276768799, 6.451201747997087},
            RoundingRadius->0],
           
           "\"Eastern Great Lakes (EGLS)\\nFar West Section (FWS)\\nFour \
Corners (4CS)\\nMid-Atlantic (MAS)\\nNew England (NES)\\nNew York State \
(NYSS)\\nNorthwest (NWS)\\nPrairie Section (PSAPS)\\nSoutheastern \
(SESAPS)\\nTexas (TSAPS)\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "Eastern Great Lakes (EGLS)\nFar West Section (FWS)\nFour Corners \
(4CS)\nMid-Atlantic (MAS)\nNew England (NES)\nNew York State (NYSS)\n\
Northwest (NWS)\nPrairie Section (PSAPS)\nSoutheastern (SESAPS)\nTexas \
(TSAPS)", "Tooltip"]& ],
         StatusArea[#, 1.4544446276768799`]& ,
         TagBoxNote->"1.4544446276768799"],
        StyleBox["1.4544446276768799`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4544446276768799`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 6.548798252002913}, {1.6405680707298824, 7.451201747997087},
            RoundingRadius->0],
           
           "\"Diversity and Inclusion (FDI)\\nEarly Career Scientists \
(FECS)\\nEducation (FEd)\\nGraduate Student Affairs (FGSA)\\nHistory and \
Philosophy of Physics (FHPP)\\nIndustrial and Applied Physics \
(FIAP)\\nInternational Physics (FIP)\\nOutreach and Engaging the Public \
(FOEP)\\nPhysics and Society (FPS)\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "Diversity and Inclusion (FDI)\nEarly Career Scientists (FECS)\n\
Education (FEd)\nGraduate Student Affairs (FGSA)\nHistory and Philosophy of \
Physics (FHPP)\nIndustrial and Applied Physics (FIAP)\nInternational Physics \
(FIP)\nOutreach and Engaging the Public (FOEP)\nPhysics and Society (FPS)", 
           "Tooltip"]& ],
         StatusArea[#, 1.6405680707298824`]& ,
         TagBoxNote->"1.6405680707298824"],
        StyleBox["1.6405680707298824`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.6405680707298824`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 7.548798252002913}, {1.8517672815101793, 8.451201747997086},
            RoundingRadius->0],
           "\"\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "", "Tooltip"]& ],
         StatusArea[#, 1.8517672815101793`]& ,
         TagBoxNote->"1.8517672815101793"],
        StyleBox["1.8517672815101793`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8517672815101793`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          
          TooltipBox[
           RectangleBox[{0., 8.548798252002912}, {2.05275387369276, 9.451201747997086},
            RoundingRadius->0],
           
           "\"APS co-sponsors a set of workshops for new physics and \
astronomy faculty with the American Association of Physics Teachers and the \
American Astronomical Society. These workshops reach nearly half of all new \
physics and astronomy faculty, and introduce them to current pedagogical \
practices, results of physics education research, and time management skills \
to help them begin and improve their academic careers.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "APS co-sponsors a set of workshops for new physics and astronomy \
faculty with the American Association of Physics Teachers and the American \
Astronomical Society. These workshops reach nearly half of all new physics \
and astronomy faculty, and introduce them to current pedagogical practices, \
results of physics education research, and time management skills to help \
them begin and improve their academic careers.", "Tooltip"]& ],
         StatusArea[#, 2.05275387369276]& ,
         TagBoxNote->"2.05275387369276"],
        StyleBox["2.05275387369276`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.05275387369276, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 9.548798252002912}, {9.999999965053679, 10.451201747997086},
            RoundingRadius->0],
           
           "\"APS has the following topical groups:\\n\\nData Science \
(GDS)\\nEnergy Research and Applications (GERA)\\nFew-Body Systems \
(GFB)\\nHadronic Physics (GHP)\\nInstrument and Measurement Science \
(GIMS)\\nMagnetism (GMAG)\\nMedical Physics (GMED)\\nPhysics Education \
Research (GPER)\\nPhysics of Climate (GPC)\\nPlasma Astrophysics \
(GPAP)\\nPrecision Measurement & Fundamental Constants (GPMFC)\\nShock \
Compression of Condensed Matter (SHOCK)\\nStatistical and Nonlinear Physics \
(GSNP)\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "APS has the following topical groups:\n\nData Science (GDS)\n\
Energy Research and Applications (GERA)\nFew-Body Systems (GFB)\nHadronic \
Physics (GHP)\nInstrument and Measurement Science (GIMS)\nMagnetism (GMAG)\n\
Medical Physics (GMED)\nPhysics Education Research (GPER)\nPhysics of Climate \
(GPC)\nPlasma Astrophysics (GPAP)\nPrecision Measurement & Fundamental \
Constants (GPMFC)\nShock Compression of Condensed Matter (SHOCK)\nStatistical \
and Nonlinear Physics (GSNP)", "Tooltip"]& ],
         StatusArea[#, 9.999999965053679]& ,
         TagBoxNote->"9.999999965053679"],
        StyleBox["9.999999965053679`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9.999999965053679, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0., 0.3507501820830299}, {0., 10.653210779315367`}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0., 0.5487982520029133}, 
           Offset[{-6., 0.}, {0., 0.5487982520029133}]}], 
         LineBox[{{0., 10.451201747997086`}, 
           Offset[{-6., 0.}, {0., 
            10.451201747997086`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{LineBox[{{0., 1.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 1.4512017479970867`}]}], 
           LineBox[{{0., 1.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 1.5487982520029133`}]}], 
           LineBox[{{0., 2.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 2.4512017479970867`}]}], 
           LineBox[{{0., 2.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 2.5487982520029133`}]}], 
           LineBox[{{0., 3.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 3.4512017479970867`}]}], 
           LineBox[{{0., 3.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 3.5487982520029133`}]}], 
           LineBox[{{0., 4.451201747997087}, 
             Offset[{-4., 0.}, {0., 4.451201747997087}]}], 
           LineBox[{{0., 4.548798252002913}, 
             Offset[{-4., 0.}, {0., 4.548798252002913}]}], 
           LineBox[{{0., 5.451201747997087}, 
             Offset[{-4., 0.}, {0., 5.451201747997087}]}], 
           LineBox[{{0., 5.548798252002913}, 
             Offset[{-4., 0.}, {0., 5.548798252002913}]}], 
           LineBox[{{0., 6.451201747997087}, 
             Offset[{-4., 0.}, {0., 6.451201747997087}]}], 
           LineBox[{{0., 6.548798252002913}, 
             Offset[{-4., 0.}, {0., 6.548798252002913}]}], 
           LineBox[{{0., 7.451201747997087}, 
             Offset[{-4., 0.}, {0., 7.451201747997087}]}], 
           LineBox[{{0., 7.548798252002913}, 
             Offset[{-4., 0.}, {0., 7.548798252002913}]}], 
           LineBox[{{0., 8.451201747997086}, 
             Offset[{-4., 0.}, {0., 8.451201747997086}]}], 
           LineBox[{{0., 8.548798252002912}, 
             Offset[{-4., 0.}, {0., 8.548798252002912}]}], 
           LineBox[{{0., 9.451201747997086}, 
             Offset[{-4., 0.}, {0., 9.451201747997086}]}], 
           LineBox[{{0., 9.54879825200291}, 
             Offset[{-4., 0.}, {0., 9.54879825200291}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Education conferences\"\>", Offset[{-2, 0}, {0., 1.}],
            NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Conferences for Undergraduate Women in Physics\"\>", 
           Offset[{-2, 0}, {0., 2.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Niels Bohr Library & Archives\"\>", 
           Offset[{-2, 0}, {0., 3.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Physics Teacher Education Coalition\"\>", 
           Offset[{-2, 0}, {0., 4.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"History\"\>", Offset[{-2, 0}, {0., 5.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Sections\"\>", Offset[{-2, 0}, {0., 6.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Forums\"\>", Offset[{-2, 0}, {0., 7.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"References\"\>", 
           Offset[{-2, 0}, {0., 7.999999999999999}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"New faculty workshop\"\>", Offset[{-2, 0}, {0., 9.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Topical groups\"\>", Offset[{-2, 0}, {0., 10.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{
    FormBox[
     TagBox["\"Relevance Score\"", HoldForm], TraditionalForm], None},
  AxesOrigin->{0., 0.3507501820830299},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{
  3.950974762554508*^9, {3.9509748744598007`*^9, 3.950974912217825*^9}, 
   3.9509751435121193`*^9, {3.9509752193206043`*^9, 3.950975254972719*^9}, {
   3.9509755947423115`*^9, 3.950975619773733*^9}, 3.950975686781826*^9, {
   3.950975717767914*^9, 3.95097577871558*^9}},
 CellLabel->
  "Out[416]=",ExpressionUUID->"e47dacdf-a07f-1148-83de-a2ea44ce3026"]
}, Open  ]],

Cell["\<\
Using the user\[CloseCurlyQuote]s raw input still returns the desired section \
with highest relevance; however, the extraneous wording in the user\
\[CloseCurlyQuote]s raw input lowers the relevance score.\
\>", "Text",
 CellChangeTimes->{{3.950976995217596*^9, 
  3.9509770441217556`*^9}},ExpressionUUID->"740c5bca-c9a1-9b46-95c8-\
e1c0927d90ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"semanticSearchVisualize", "[", 
  "\"\<What are all the topical groups of the American Physical Society? \
Please list them.\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.95097661659696*^9, 3.950976642472967*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"9682dcf3-3639-9e48-ab14-deff9006831a"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.3507501820830299}, {0., 10.451201747997086`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 0.5487982520029133}, {2.5321727300418067, 1.4512017479970867},
            RoundingRadius->0],
           
           "\"The APS has had a long-standing interest in improving the \
climate in physics departments for underrepresented minorities and women. The \
Committee on the Status of Women in Physics (CSWP) and the Committee on \
Minorities (COM) both sponsor site visit programs to universities as well as \
national labs.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "The APS has had a long-standing interest in improving the climate \
in physics departments for underrepresented minorities and women. The \
Committee on the Status of Women in Physics (CSWP) and the Committee on \
Minorities (COM) both sponsor site visit programs to universities as well as \
national labs.", "Tooltip"]& ],
         StatusArea[#, 2.5321727300418067`]& ,
         TagBoxNote->"2.5321727300418067"],
        StyleBox["2.5321727300418067`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.5321727300418067`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 1.5487982520029133}, {2.7490433366544362, 2.4512017479970867},
            RoundingRadius->0],
           
           "\"The American Physical Society was founded on May 20, 1899, when \
thirty-six physicists gathered at Columbia University for that purpose. They \
proclaimed the mission of the new Society to be \\\"to advance and diffuse \
the knowledge of physics\\\", and in one way or another the APS has been at \
that task ever since. In the early years, virtually the sole activity of the \
APS was to hold scientific meetings, initially four per year. In 1913, the \
APS took over the operation of the Physical Review, which had been founded in \
1893 at Cornell University, and journal publication became its second major \
activity. The Physical Review was followed by Reviews of Modern Physics in \
1929 and by Physical Review Letters in 1958. Over the years, Phys. Rev. has \
subdivided into five separate sections as the fields of physics proliferated \
and the number of submissions grew.\\nIn more recent years, the activities of \
the society have broadened considerably. Stimulated by the increase in \
federal funding in the period after the Second World War, and even more by \
the increased public involvement of scientists in the 1960s, the APS is \
active in public and governmental affairs, and in the international physics \
community. It also conducts extensive programs in education, science outreach \
(specifically physics outreach), and media relations. Fourteen divisions and \
eleven topical groups covering all areas of physics research. Six forums \
reflect the interests of its fifty thousand members in broader issues, and \
nine sections organized by geographical region.\\nIn 1999, APS Physics \
celebrated its centennial with the biggest-ever physics meeting in Atlanta. \
In 2005, APS took the lead role in United States participation in the World \
Year of Physics, initiating several programs to broadly publicize physics \
during the 100th anniversary of Albert Einstein's annus mirabilis. \
Einstein@Home, one of the projects APS initiated during World Year of \
Physics, is an ongoing and popular distributed computing project.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           
           "The American Physical Society was founded on May 20, 1899, when \
thirty-six physicists gathered at Columbia University for that purpose. They \
proclaimed the mission of the new Society to be \"to advance and diffuse the \
knowledge of physics\", and in one way or another the APS has been at that \
task ever since. In the early years, virtually the sole activity of the APS \
was to hold scientific meetings, initially four per year. In 1913, the APS \
took over the operation of the Physical Review, which had been founded in \
1893 at Cornell University, and journal publication became its second major \
activity. The Physical Review was followed by Reviews of Modern Physics in \
1929 and by Physical Review Letters in 1958. Over the years, Phys. Rev. has \
subdivided into five separate sections as the fields of physics proliferated \
and the number of submissions grew.\nIn more recent years, the activities of \
the society have broadened considerably. Stimulated by the increase in \
federal funding in the period after the Second World War, and even more by \
the increased public involvement of scientists in the 1960s, the APS is \
active in public and governmental affairs, and in the international physics \
community. It also conducts extensive programs in education, science outreach \
(specifically physics outreach), and media relations. Fourteen divisions and \
eleven topical groups covering all areas of physics research. Six forums \
reflect the interests of its fifty thousand members in broader issues, and \
nine sections organized by geographical region.\nIn 1999, APS Physics \
celebrated its centennial with the biggest-ever physics meeting in Atlanta. \
In 2005, APS took the lead role in United States participation in the World \
Year of Physics, initiating several programs to broadly publicize physics \
during the 100th anniversary of Albert Einstein's annus mirabilis. \
Einstein@Home, one of the projects APS initiated during World Year of \
Physics, is an ongoing and popular distributed computing project.", 
           "Tooltip"]& ],
         StatusArea[#, 2.7490433366544362`]& ,
         TagBoxNote->"2.7490433366544362"],
        StyleBox["2.7490433366544362`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.7490433366544362`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 2.5487982520029133}, {2.847423079659812, 3.4512017479970867},
            RoundingRadius->0],
           
           "\"American Physical Society Directed Energy Weapons (DEW) study \
records, 1983\[Dash]1988\\nAmerican Physical Society addition to records, \
1905\[Dash]2010 (bulk 1977\[Dash]2010)\\nAmerican Physical Society centennial \
meeting records, 1997\[Dash]1999\\nAmerican Physical Society miscellaneous \
publications, 1920\[Dash]2015\\nAmerican Physical Society records, \
1899\[Dash]1989\\nAmerican Physical Society Astrophysics Division records of \
the Secretary/Treasurer, 1970\[Dash]1992\\nAPS Committee on Applications in \
Physics records, 1975\[Dash]1999\\nAmerican Physical Society Forum on the \
History of Physics records of secretary-treasurer Thomas M. Miller, 2002\
\[Dash]2013\\nAPS Division of Physics of Beams records, \
1983\[Dash]2002\\nAmerican Physical Society Division of Solid State Physics \
records of Roman Smoluchowski, 1943\[Dash]1947\\nAPS Southeastern Section \
records, 1934\[Dash]2010\\nAPS Office of the Treasurer records of George B. \
Pegram, 1926\[Dash]1957\\nAPS Texas Section records 1980\[Dash]2017\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "American Physical Society Directed Energy Weapons (DEW) study \
records, 1983\[Dash]1988\nAmerican Physical Society addition to records, 1905\
\[Dash]2010 (bulk 1977\[Dash]2010)\nAmerican Physical Society centennial \
meeting records, 1997\[Dash]1999\nAmerican Physical Society miscellaneous \
publications, 1920\[Dash]2015\nAmerican Physical Society records, \
1899\[Dash]1989\nAmerican Physical Society Astrophysics Division records of \
the Secretary/Treasurer, 1970\[Dash]1992\nAPS Committee on Applications in \
Physics records, 1975\[Dash]1999\nAmerican Physical Society Forum on the \
History of Physics records of secretary-treasurer Thomas M. Miller, 2002\
\[Dash]2013\nAPS Division of Physics of Beams records, 1983\[Dash]2002\n\
American Physical Society Division of Solid State Physics records of Roman \
Smoluchowski, 1943\[Dash]1947\nAPS Southeastern Section records, \
1934\[Dash]2010\nAPS Office of the Treasurer records of George B. Pegram, \
1926\[Dash]1957\nAPS Texas Section records 1980\[Dash]2017", "Tooltip"]& ],
         StatusArea[#, 2.847423079659812]& ,
         TagBoxNote->"2.847423079659812"],
        StyleBox["2.847423079659812`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.847423079659812, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 3.5487982520029133}, {2.8507495986977744, 4.451201747997087},
            RoundingRadius->0],
           
           "\"APS co-sponsors a set of workshops for new physics and \
astronomy faculty with the American Association of Physics Teachers and the \
American Astronomical Society. These workshops reach nearly half of all new \
physics and astronomy faculty, and introduce them to current pedagogical \
practices, results of physics education research, and time management skills \
to help them begin and improve their academic careers.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "APS co-sponsors a set of workshops for new physics and astronomy \
faculty with the American Association of Physics Teachers and the American \
Astronomical Society. These workshops reach nearly half of all new physics \
and astronomy faculty, and introduce them to current pedagogical practices, \
results of physics education research, and time management skills to help \
them begin and improve their academic careers.", "Tooltip"]& ],
         StatusArea[#, 2.8507495986977744`]& ,
         TagBoxNote->"2.8507495986977744"],
        StyleBox["2.8507495986977744`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8507495986977744`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 4.548798252002913}, {2.8903469388907377, 5.451201747997087},
            RoundingRadius->0],
           
           "\"APS Conferences for Undergraduate Women in Physics are \
three-day regional conferences for undergraduate physics majors. The \
conferences aim to help undergraduate women continue in physics by providing \
them with the opportunity to experience a professional conference, \
information about graduate school and professions in physics, and access to \
other women in physics of all ages with whom they can share experiences, \
advice, and ideas.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "APS Conferences for Undergraduate Women in Physics are three-day \
regional conferences for undergraduate physics majors. The conferences aim to \
help undergraduate women continue in physics by providing them with the \
opportunity to experience a professional conference, information about \
graduate school and professions in physics, and access to other women in \
physics of all ages with whom they can share experiences, advice, and ideas.",
            "Tooltip"]& ],
         StatusArea[#, 2.8903469388907377`]& ,
         TagBoxNote->"2.8903469388907377"],
        StyleBox["2.8903469388907377`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8903469388907377`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 5.548798252002913}, {2.8996689027675036, 6.451201747997087},
            RoundingRadius->0],
           
           "\"Formerly called the APS Corporate Sponsored Scholarship Program \
for Minority Undergraduate Students Who Major in Physics, this scholarship \
was established in 1980 with the goal of increasing the number of \
underrepresented minorities receiving bachelor's degrees in physics. The \
program provides funding and mentoring to talented students.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "Formerly called the APS Corporate Sponsored Scholarship Program \
for Minority Undergraduate Students Who Major in Physics, this scholarship \
was established in 1980 with the goal of increasing the number of \
underrepresented minorities receiving bachelor's degrees in physics. The \
program provides funding and mentoring to talented students.", "Tooltip"]& ],
         StatusArea[#, 2.8996689027675036`]& ,
         TagBoxNote->"2.8996689027675036"],
        StyleBox["2.8996689027675036`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8996689027675036`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 6.548798252002913}, {2.9891025517240664, 7.451201747997087},
            RoundingRadius->0],
           
           "\"The APS physics outreach program focuses on \\\"Communicating \
the excitement and importance of physics to everyone.\\\" As part of this \
effort, it maintains an educational website, PhysicsCentral; offers grants to \
help APS members develop educational programs; and runs the Historic Physics \
Sites Initiative, which identifies and commemorates important historic \
physics sites in the United States.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "The APS physics outreach program focuses on \"Communicating the \
excitement and importance of physics to everyone.\" As part of this effort, \
it maintains an educational website, PhysicsCentral; offers grants to help \
APS members develop educational programs; and runs the Historic Physics Sites \
Initiative, which identifies and commemorates important historic physics \
sites in the United States.", "Tooltip"]& ],
         StatusArea[#, 2.9891025517240664`]& ,
         TagBoxNote->"2.9891025517240664"],
        StyleBox["2.9891025517240664`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.9891025517240664`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 7.548798252002913}, {3.2777313505838084, 8.451201747997086},
            RoundingRadius->0],
           "\"\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "", "Tooltip"]& ],
         StatusArea[#, 3.2777313505838084`]& ,
         TagBoxNote->"3.2777313505838084"],
        StyleBox["3.2777313505838084`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.2777313505838084`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 8.548798252002912}, {3.354691402046315, 9.451201747997086},
            RoundingRadius->0],
           
           "\"The Physics Teacher Education Coalition (PhysTEC) is a joint \
project of the American Physical Society and the American Association of \
Physics Teachers, which helps universities transform their physics teacher \
education programs into national models. PhysTEC-supported sites develop \
their physics teacher preparation programs by implementing a set of key \
components that project leaders have identified as critical to success in \
physics teacher preparation. The broader coalition is a national network of \
institutions committed to developing and promoting excellence in physics and \
physical science teacher preparation.\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "The Physics Teacher Education Coalition (PhysTEC) is a joint \
project of the American Physical Society and the American Association of \
Physics Teachers, which helps universities transform their physics teacher \
education programs into national models. PhysTEC-supported sites develop \
their physics teacher preparation programs by implementing a set of key \
components that project leaders have identified as critical to success in \
physics teacher preparation. The broader coalition is a national network of \
institutions committed to developing and promoting excellence in physics and \
physical science teacher preparation.", "Tooltip"]& ],
         StatusArea[#, 3.354691402046315]& ,
         TagBoxNote->"3.354691402046315"],
        StyleBox["3.354691402046315`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.354691402046315, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          TooltipBox[RectangleBox[{0., 9.548798252002912}, {3.669278153092879, 10.451201747997086},
            RoundingRadius->0],
           
           "\"APS has the following topical groups:\\n\\nData Science \
(GDS)\\nEnergy Research and Applications (GERA)\\nFew-Body Systems \
(GFB)\\nHadronic Physics (GHP)\\nInstrument and Measurement Science \
(GIMS)\\nMagnetism (GMAG)\\nMedical Physics (GMED)\\nPhysics Education \
Research (GPER)\\nPhysics of Climate (GPC)\\nPlasma Astrophysics \
(GPAP)\\nPrecision Measurement & Fundamental Constants (GPMFC)\\nShock \
Compression of Condensed Matter (SHOCK)\\nStatistical and Nonlinear Physics \
(GSNP)\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "APS has the following topical groups:\n\nData Science (GDS)\n\
Energy Research and Applications (GERA)\nFew-Body Systems (GFB)\nHadronic \
Physics (GHP)\nInstrument and Measurement Science (GIMS)\nMagnetism (GMAG)\n\
Medical Physics (GMED)\nPhysics Education Research (GPER)\nPhysics of Climate \
(GPC)\nPlasma Astrophysics (GPAP)\nPrecision Measurement & Fundamental \
Constants (GPMFC)\nShock Compression of Condensed Matter (SHOCK)\nStatistical \
and Nonlinear Physics (GSNP)", "Tooltip"]& ],
         StatusArea[#, 3.669278153092879]& ,
         TagBoxNote->"3.669278153092879"],
        StyleBox["3.669278153092879`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.669278153092879, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0., 0.3507501820830299}, {0., 10.653210779315367`}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0., 0.5487982520029133}, 
           Offset[{-6., 0.}, {0., 0.5487982520029133}]}], 
         LineBox[{{0., 10.451201747997086`}, 
           Offset[{-6., 0.}, {0., 
            10.451201747997086`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{LineBox[{{0., 1.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 1.4512017479970867`}]}], 
           LineBox[{{0., 1.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 1.5487982520029133`}]}], 
           LineBox[{{0., 2.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 2.4512017479970867`}]}], 
           LineBox[{{0., 2.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 2.5487982520029133`}]}], 
           LineBox[{{0., 3.4512017479970867`}, 
             Offset[{-4., 0.}, {0., 3.4512017479970867`}]}], 
           LineBox[{{0., 3.5487982520029133`}, 
             Offset[{-4., 0.}, {0., 3.5487982520029133`}]}], 
           LineBox[{{0., 4.451201747997087}, 
             Offset[{-4., 0.}, {0., 4.451201747997087}]}], 
           LineBox[{{0., 4.548798252002913}, 
             Offset[{-4., 0.}, {0., 4.548798252002913}]}], 
           LineBox[{{0., 5.451201747997087}, 
             Offset[{-4., 0.}, {0., 5.451201747997087}]}], 
           LineBox[{{0., 5.548798252002913}, 
             Offset[{-4., 0.}, {0., 5.548798252002913}]}], 
           LineBox[{{0., 6.451201747997087}, 
             Offset[{-4., 0.}, {0., 6.451201747997087}]}], 
           LineBox[{{0., 6.548798252002913}, 
             Offset[{-4., 0.}, {0., 6.548798252002913}]}], 
           LineBox[{{0., 7.451201747997087}, 
             Offset[{-4., 0.}, {0., 7.451201747997087}]}], 
           LineBox[{{0., 7.548798252002913}, 
             Offset[{-4., 0.}, {0., 7.548798252002913}]}], 
           LineBox[{{0., 8.451201747997086}, 
             Offset[{-4., 0.}, {0., 8.451201747997086}]}], 
           LineBox[{{0., 8.548798252002912}, 
             Offset[{-4., 0.}, {0., 8.548798252002912}]}], 
           LineBox[{{0., 9.451201747997086}, 
             Offset[{-4., 0.}, {0., 9.451201747997086}]}], 
           LineBox[{{0., 9.54879825200291}, 
             Offset[{-4., 0.}, {0., 9.54879825200291}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"CSWP/COM site visits\"\>", Offset[{-2, 0}, {0., 1.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"History\"\>", Offset[{-2, 0}, {0., 2.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Niels Bohr Library & Archives\"\>", 
           Offset[{-2, 0}, {0., 3.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"New faculty workshop\"\>", Offset[{-2, 0}, {0., 4.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Conferences for Undergraduate Women in Physics\"\>", 
           Offset[{-2, 0}, {0., 5.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Scholarship for Minority Undergraduate Physics Majors\
\"\>", Offset[{-2, 0}, {0., 6.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Physics outreach\"\>", Offset[{-2, 0}, {0., 7.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"References\"\>", 
           Offset[{-2, 0}, {0., 7.999999999999999}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Physics Teacher Education Coalition\"\>", 
           Offset[{-2, 0}, {0., 9.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Topical groups\"\>", Offset[{-2, 0}, {0., 10.}], 
           NCache[ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{
    FormBox[
     TagBox["\"Relevance Score\"", HoldForm], TraditionalForm], None},
  AxesOrigin->{0., 0.3507501820830299},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{3.9509766435911922`*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"82797e99-041c-9a4b-9763-24dc0c1390f7"]
}, Open  ]],

Cell["\<\
To improve the search phrase used, you can use an LLM to summarize the user \
question into a search phrase:\
\>", "Text",
 CellChangeTimes->{{3.950977398425165*^9, 
  3.950977430729988*^9}},ExpressionUUID->"66ae3c05-47f6-c847-af3d-\
85d3e3fb59e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"llmphrase", "=", 
     RowBox[{"LLMSynthesize", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<List ONE key search phrase to fulfill this request about the \
American Physical Society. Do not use quotation marks. Do not use \
\\\"American Physical Society\\\" in the phrase. Minimize the number of words \
used\\n\>\"", ",", "\[IndentingNewLine]", 
        "\"\<What are all the topical groups of the American Physical \
Society? Please list them.\>\""}], "\[IndentingNewLine]", "}"}], "]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"semanticSearchVisualize", "[", "llmphrase", "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"llmphrase", ",", "\"\<Text\>\""}], "]"}], ",", "Top"}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9509771002047787`*^9, 3.95097715691296*^9}, {
  3.950977206060753*^9, 3.9509773653867893`*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"99df58b4-9a90-d640-9857-d956a0d2406a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0., 0.3507501820830299}, {0., 10.451201747997086`}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.63]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 0.5487982520029133}, {1.3339811701065916`, 
               1.4512017479970867`}, "RoundingRadius" -> 0], 
              "\"The American Physical Society was founded on May 20, 1899, \
when thirty-six physicists gathered at Columbia University for that purpose. \
They proclaimed the mission of the new Society to be \\\"to advance and \
diffuse the knowledge of physics\\\", and in one way or another the APS has \
been at that task ever since. In the early years, virtually the sole activity \
of the APS was to hold scientific meetings, initially four per year. In 1913, \
the APS took over the operation of the Physical Review, which had been \
founded in 1893 at Cornell University, and journal publication became its \
second major activity. The Physical Review was followed by Reviews of Modern \
Physics in 1929 and by Physical Review Letters in 1958. Over the years, Phys. \
Rev. has subdivided into five separate sections as the fields of physics \
proliferated and the number of submissions grew.\\nIn more recent years, the \
activities of the society have broadened considerably. Stimulated by the \
increase in federal funding in the period after the Second World War, and \
even more by the increased public involvement of scientists in the 1960s, the \
APS is active in public and governmental affairs, and in the international \
physics community. It also conducts extensive programs in education, science \
outreach (specifically physics outreach), and media relations. Fourteen \
divisions and eleven topical groups covering all areas of physics research. \
Six forums reflect the interests of its fifty thousand members in broader \
issues, and nine sections organized by geographical region.\\nIn 1999, APS \
Physics celebrated its centennial with the biggest-ever physics meeting in \
Atlanta. In 2005, APS took the lead role in United States participation in \
the World Year of Physics, initiating several programs to broadly publicize \
physics during the 100th anniversary of Albert Einstein's annus mirabilis. \
Einstein@Home, one of the projects APS initiated during World Year of \
Physics, is an ongoing and popular distributed computing project.\"", 
              TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "The American Physical Society was founded on May 20, 1899, \
when thirty-six physicists gathered at Columbia University for that purpose. \
They proclaimed the mission of the new Society to be \"to advance and diffuse \
the knowledge of physics\", and in one way or another the APS has been at \
that task ever since. In the early years, virtually the sole activity of the \
APS was to hold scientific meetings, initially four per year. In 1913, the \
APS took over the operation of the Physical Review, which had been founded in \
1893 at Cornell University, and journal publication became its second major \
activity. The Physical Review was followed by Reviews of Modern Physics in \
1929 and by Physical Review Letters in 1958. Over the years, Phys. Rev. has \
subdivided into five separate sections as the fields of physics proliferated \
and the number of submissions grew.\nIn more recent years, the activities of \
the society have broadened considerably. Stimulated by the increase in \
federal funding in the period after the Second World War, and even more by \
the increased public involvement of scientists in the 1960s, the APS is \
active in public and governmental affairs, and in the international physics \
community. It also conducts extensive programs in education, science outreach \
(specifically physics outreach), and media relations. Fourteen divisions and \
eleven topical groups covering all areas of physics research. Six forums \
reflect the interests of its fifty thousand members in broader issues, and \
nine sections organized by geographical region.\nIn 1999, APS Physics \
celebrated its centennial with the biggest-ever physics meeting in Atlanta. \
In 2005, APS took the lead role in United States participation in the World \
Year of Physics, initiating several programs to broadly publicize physics \
during the 100th anniversary of Albert Einstein's annus mirabilis. \
Einstein@Home, one of the projects APS initiated during World Year of \
Physics, is an ongoing and popular distributed computing project.", 
              "Tooltip"]& ], StatusArea[#, 1.3339811701065916`]& , TagBoxNote -> 
            "1.3339811701065916"], 
           StyleBox["1.3339811701065916`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3339811701065916`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 1.5487982520029133`}, {1.4080860666478667`, 
               2.4512017479970867`}, "RoundingRadius" -> 0], 
              "\"The Physics Teacher Education Coalition (PhysTEC) is a joint \
project of the American Physical Society and the American Association of \
Physics Teachers, which helps universities transform their physics teacher \
education programs into national models. PhysTEC-supported sites develop \
their physics teacher preparation programs by implementing a set of key \
components that project leaders have identified as critical to success in \
physics teacher preparation. The broader coalition is a national network of \
institutions committed to developing and promoting excellence in physics and \
physical science teacher preparation.\"", TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "The Physics Teacher Education Coalition (PhysTEC) is a joint \
project of the American Physical Society and the American Association of \
Physics Teachers, which helps universities transform their physics teacher \
education programs into national models. PhysTEC-supported sites develop \
their physics teacher preparation programs by implementing a set of key \
components that project leaders have identified as critical to success in \
physics teacher preparation. The broader coalition is a national network of \
institutions committed to developing and promoting excellence in physics and \
physical science teacher preparation.", "Tooltip"]& ], 
            StatusArea[#, 1.4080860666478667`]& , TagBoxNote -> 
            "1.4080860666478667"], 
           StyleBox["1.4080860666478667`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4080860666478667`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 2.5487982520029133`}, {1.4088773666950036`, 
               3.4512017479970867`}, "RoundingRadius" -> 0], 
              "\"American Physical Society Directed Energy Weapons (DEW) \
study records, 1983\[Dash]1988\\nAmerican Physical Society addition to \
records, 1905\[Dash]2010 (bulk 1977\[Dash]2010)\\nAmerican Physical Society \
centennial meeting records, 1997\[Dash]1999\\nAmerican Physical Society \
miscellaneous publications, 1920\[Dash]2015\\nAmerican Physical Society \
records, 1899\[Dash]1989\\nAmerican Physical Society Astrophysics Division \
records of the Secretary/Treasurer, 1970\[Dash]1992\\nAPS Committee on \
Applications in Physics records, 1975\[Dash]1999\\nAmerican Physical Society \
Forum on the History of Physics records of secretary-treasurer Thomas M. \
Miller, 2002\[Dash]2013\\nAPS Division of Physics of Beams records, 1983\
\[Dash]2002\\nAmerican Physical Society Division of Solid State Physics \
records of Roman Smoluchowski, 1943\[Dash]1947\\nAPS Southeastern Section \
records, 1934\[Dash]2010\\nAPS Office of the Treasurer records of George B. \
Pegram, 1926\[Dash]1957\\nAPS Texas Section records 1980\[Dash]2017\"", 
              TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "American Physical Society Directed Energy Weapons (DEW) study \
records, 1983\[Dash]1988\nAmerican Physical Society addition to records, 1905\
\[Dash]2010 (bulk 1977\[Dash]2010)\nAmerican Physical Society centennial \
meeting records, 1997\[Dash]1999\nAmerican Physical Society miscellaneous \
publications, 1920\[Dash]2015\nAmerican Physical Society records, \
1899\[Dash]1989\nAmerican Physical Society Astrophysics Division records of \
the Secretary/Treasurer, 1970\[Dash]1992\nAPS Committee on Applications in \
Physics records, 1975\[Dash]1999\nAmerican Physical Society Forum on the \
History of Physics records of secretary-treasurer Thomas M. Miller, 2002\
\[Dash]2013\nAPS Division of Physics of Beams records, 1983\[Dash]2002\n\
American Physical Society Division of Solid State Physics records of Roman \
Smoluchowski, 1943\[Dash]1947\nAPS Southeastern Section records, \
1934\[Dash]2010\nAPS Office of the Treasurer records of George B. Pegram, \
1926\[Dash]1957\nAPS Texas Section records 1980\[Dash]2017", "Tooltip"]& ], 
            StatusArea[#, 1.4088773666950036`]& , TagBoxNote -> 
            "1.4088773666950036"], 
           StyleBox["1.4088773666950036`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4088773666950036`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 3.5487982520029133`}, {1.465275470064265, 
               4.451201747997087}, "RoundingRadius" -> 0], 
              "\"Eastern Great Lakes (EGLS)\\nFar West Section (FWS)\\nFour \
Corners (4CS)\\nMid-Atlantic (MAS)\\nNew England (NES)\\nNew York State \
(NYSS)\\nNorthwest (NWS)\\nPrairie Section (PSAPS)\\nSoutheastern \
(SESAPS)\\nTexas (TSAPS)\"", TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Eastern Great Lakes (EGLS)\nFar West Section (FWS)\nFour \
Corners (4CS)\nMid-Atlantic (MAS)\nNew England (NES)\nNew York State (NYSS)\n\
Northwest (NWS)\nPrairie Section (PSAPS)\nSoutheastern (SESAPS)\nTexas \
(TSAPS)", "Tooltip"]& ], StatusArea[#, 1.465275470064265]& , TagBoxNote -> 
            "1.465275470064265"], 
           StyleBox["1.465275470064265`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.465275470064265, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 4.548798252002913}, {1.475815641458146, 
               5.451201747997087}, "RoundingRadius" -> 0], 
              "\"Formerly called the APS Corporate Sponsored Scholarship \
Program for Minority Undergraduate Students Who Major in Physics, this \
scholarship was established in 1980 with the goal of increasing the number of \
underrepresented minorities receiving bachelor's degrees in physics. The \
program provides funding and mentoring to talented students.\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, 
              "Formerly called the APS Corporate Sponsored Scholarship \
Program for Minority Undergraduate Students Who Major in Physics, this \
scholarship was established in 1980 with the goal of increasing the number of \
underrepresented minorities receiving bachelor's degrees in physics. The \
program provides funding and mentoring to talented students.", "Tooltip"]& ], 
            StatusArea[#, 1.475815641458146]& , TagBoxNote -> 
            "1.475815641458146"], 
           StyleBox["1.475815641458146`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.475815641458146, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 5.548798252002913}, {1.4831864860136204`, 
               6.451201747997087}, "RoundingRadius" -> 0], 
              "\"Diversity and Inclusion (FDI)\\nEarly Career Scientists \
(FECS)\\nEducation (FEd)\\nGraduate Student Affairs (FGSA)\\nHistory and \
Philosophy of Physics (FHPP)\\nIndustrial and Applied Physics \
(FIAP)\\nInternational Physics (FIP)\\nOutreach and Engaging the Public \
(FOEP)\\nPhysics and Society (FPS)\"", TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Diversity and Inclusion (FDI)\nEarly Career Scientists (FECS)\n\
Education (FEd)\nGraduate Student Affairs (FGSA)\nHistory and Philosophy of \
Physics (FHPP)\nIndustrial and Applied Physics (FIAP)\nInternational Physics \
(FIP)\nOutreach and Engaging the Public (FOEP)\nPhysics and Society (FPS)", 
              "Tooltip"]& ], StatusArea[#, 1.4831864860136204`]& , TagBoxNote -> 
            "1.4831864860136204"], 
           StyleBox["1.4831864860136204`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4831864860136204`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 6.548798252002913}, {1.6164706179542527`, 
               7.451201747997087}, "RoundingRadius" -> 0], 
              "\"APS is a leading voice for physics education and the society \
sponsors a variety of conferences dedicating to helping physics education \
leaders stay on top of the trends in the field. Conferences include the \
annual Physics Department Chair Conference, a Graduate Education in Physics \
Conference, and a Distance Education & Online Learning in Physics \
Workshop.\"", TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "APS is a leading voice for physics education and the society \
sponsors a variety of conferences dedicating to helping physics education \
leaders stay on top of the trends in the field. Conferences include the \
annual Physics Department Chair Conference, a Graduate Education in Physics \
Conference, and a Distance Education & Online Learning in Physics Workshop.", 
              "Tooltip"]& ], StatusArea[#, 1.6164706179542527`]& , TagBoxNote -> 
            "1.6164706179542527"], 
           StyleBox["1.6164706179542527`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6164706179542527`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 7.548798252002913}, {1.8753094858347392`, 
               8.451201747997086}, "RoundingRadius" -> 0], "\"\"", 
              TooltipStyle -> "TextStyling"], Annotation[#, "", "Tooltip"]& ],
             StatusArea[#, 1.8753094858347392`]& , TagBoxNote -> 
            "1.8753094858347392"], 
           StyleBox["1.8753094858347392`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.8753094858347392`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 8.548798252002912}, {2.0538436700748894`, 
               9.451201747997086}, "RoundingRadius" -> 0], 
              "\"APS co-sponsors a set of workshops for new physics and \
astronomy faculty with the American Association of Physics Teachers and the \
American Astronomical Society. These workshops reach nearly half of all new \
physics and astronomy faculty, and introduce them to current pedagogical \
practices, results of physics education research, and time management skills \
to help them begin and improve their academic careers.\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, 
              "APS co-sponsors a set of workshops for new physics and \
astronomy faculty with the American Association of Physics Teachers and the \
American Astronomical Society. These workshops reach nearly half of all new \
physics and astronomy faculty, and introduce them to current pedagogical \
practices, results of physics education research, and time management skills \
to help them begin and improve their academic careers.", "Tooltip"]& ], 
            StatusArea[#, 2.0538436700748894`]& , TagBoxNote -> 
            "2.0538436700748894"], 
           StyleBox["2.0538436700748894`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.0538436700748894`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.63]]], 
          RGBColor[0.982864, 0.7431472, 0.3262672]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             TooltipBox[
              
              RectangleBox[{0., 9.548798252002912}, {5.158945269271282, 
               10.451201747997086`}, "RoundingRadius" -> 0], 
              "\"APS has the following topical groups:\\n\\nData Science \
(GDS)\\nEnergy Research and Applications (GERA)\\nFew-Body Systems \
(GFB)\\nHadronic Physics (GHP)\\nInstrument and Measurement Science \
(GIMS)\\nMagnetism (GMAG)\\nMedical Physics (GMED)\\nPhysics Education \
Research (GPER)\\nPhysics of Climate (GPC)\\nPlasma Astrophysics \
(GPAP)\\nPrecision Measurement & Fundamental Constants (GPMFC)\\nShock \
Compression of Condensed Matter (SHOCK)\\nStatistical and Nonlinear Physics \
(GSNP)\"", TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "APS has the following topical groups:\n\nData Science (GDS)\n\
Energy Research and Applications (GERA)\nFew-Body Systems (GFB)\nHadronic \
Physics (GHP)\nInstrument and Measurement Science (GIMS)\nMagnetism (GMAG)\n\
Medical Physics (GMED)\nPhysics Education Research (GPER)\nPhysics of Climate \
(GPC)\nPlasma Astrophysics (GPAP)\nPrecision Measurement & Fundamental \
Constants (GPMFC)\nShock Compression of Condensed Matter (SHOCK)\nStatistical \
and Nonlinear Physics (GSNP)", "Tooltip"]& ], 
            StatusArea[#, 5.158945269271282]& , TagBoxNote -> 
            "5.158945269271282"], 
           StyleBox["5.158945269271282`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[5.158945269271282, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0., 0.3507501820830299}, {0., 10.653210779315367`}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0., 0.5487982520029133}, 
             Offset[{-6., 0.}, {0., 0.5487982520029133}]}], 
           LineBox[{{0., 10.451201747997086`}, 
             
             Offset[{-6., 0.}, {0., 
              10.451201747997086`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {
             LineBox[{{0., 1.4512017479970867`}, 
               Offset[{-4., 0.}, {0., 1.4512017479970867`}]}], 
             LineBox[{{0., 1.5487982520029133`}, 
               Offset[{-4., 0.}, {0., 1.5487982520029133`}]}], 
             LineBox[{{0., 2.4512017479970867`}, 
               Offset[{-4., 0.}, {0., 2.4512017479970867`}]}], 
             LineBox[{{0., 2.5487982520029133`}, 
               Offset[{-4., 0.}, {0., 2.5487982520029133`}]}], 
             LineBox[{{0., 3.4512017479970867`}, 
               Offset[{-4., 0.}, {0., 3.4512017479970867`}]}], 
             LineBox[{{0., 3.5487982520029133`}, 
               Offset[{-4., 0.}, {0., 3.5487982520029133`}]}], 
             LineBox[{{0., 4.451201747997087}, 
               Offset[{-4., 0.}, {0., 4.451201747997087}]}], 
             LineBox[{{0., 4.548798252002913}, 
               Offset[{-4., 0.}, {0., 4.548798252002913}]}], 
             LineBox[{{0., 5.451201747997087}, 
               Offset[{-4., 0.}, {0., 5.451201747997087}]}], 
             LineBox[{{0., 5.548798252002913}, 
               Offset[{-4., 0.}, {0., 5.548798252002913}]}], 
             LineBox[{{0., 6.451201747997087}, 
               Offset[{-4., 0.}, {0., 6.451201747997087}]}], 
             LineBox[{{0., 6.548798252002913}, 
               Offset[{-4., 0.}, {0., 6.548798252002913}]}], 
             LineBox[{{0., 7.451201747997087}, 
               Offset[{-4., 0.}, {0., 7.451201747997087}]}], 
             LineBox[{{0., 7.548798252002913}, 
               Offset[{-4., 0.}, {0., 7.548798252002913}]}], 
             LineBox[{{0., 8.451201747997086}, 
               Offset[{-4., 0.}, {0., 8.451201747997086}]}], 
             LineBox[{{0., 8.548798252002912}, 
               Offset[{-4., 0.}, {0., 8.548798252002912}]}], 
             LineBox[{{0., 9.451201747997086}, 
               Offset[{-4., 0.}, {0., 9.451201747997086}]}], 
             LineBox[{{0., 9.54879825200291}, 
               Offset[{-4., 0.}, {0., 9.54879825200291}]}]}, {}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["\"History\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 1.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
               "\"Physics Teacher Education Coalition\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 2.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Niels Bohr Library & Archives\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 3.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Sections\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 4.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
               "\"Scholarship for Minority Undergraduate Physics Majors\"", 
                TraditionalForm], 
               Offset[{-2, 0}, {0., 5.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Forums\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 6.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Education conferences\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 7.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"References\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 7.999999999999999}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"New faculty workshop\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 9.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Topical groups\"", TraditionalForm], 
               Offset[{-2, 0}, {0., 10.}], 
               NCache[
                ImageScaled[{1, 
                  Rational[1, 2]}], 
                ImageScaled[{1, 0.5}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, False}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Relevance Score\"", HoldForm], TraditionalForm], None}, 
     AxesOrigin -> {0., 0.3507501820830299}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, None}}], 
   StyleBox["\"APS topical groups\"", "Text", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.950977249605217*^9, {3.950977320118084*^9, 3.950977329581953*^9}, 
   3.950977371603401*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"5365c67b-c265-3943-b2b1-58362dfc340e"]
}, Open  ]],

Cell["\<\
This can be combined into a more sophisticated generator of prompts:\
\>", "Text",
 CellChangeTimes->{{3.9509804310118484`*^9, 
  3.9509804622523575`*^9}},ExpressionUUID->"db55dd6a-c2ab-0c42-9f92-\
c8293c61aa9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bettergenerator", "=", 
   RowBox[{"LLMPromptGenerator", "[", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        RowBox[{"Composition", "[", 
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
        GridBox[{{
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["2544", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Composition[Echo[#, "prompt:", Tooltip[
        Framed["hover here"], #]& ]& , 
      TemplateObject[{
       "Answer using this information:", "\n\n", "BEGIN CONTEXT", "\n\n", 
        TemplateSlot[
        "SearchHits", InsertionFunction -> (StringRiffle[#, "\n\n"]& )], 
        "\n\n", "END CONTEXT", "\n\n", 
        TemplateSlot["UserInput"]}, CombinerFunction -> StringJoin][<|
       "UserInput" -> #, "SearchHits" -> Map[
          StringTemplate["`Label`\n\n`Payload`"], 
          SemanticSearch[$CellContext`annotatedindex, 
           
           LLMSynthesize[{
            "List ONE key search phrase to fulfill this request about the \
American Physical Society. Do not use quotation marks. Do not use \"American \
Physical Society\" in the phrase. Minimize the number of words used\n", #}], 
           MaxItems -> 3]]|>]& ],
     SelectWithContents->True,
     Selectable->False], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9509782980192013`*^9, 3.950978427723627*^9}, {
   3.950978461917988*^9, 3.950978567491932*^9}, {3.950978633631485*^9, 
   3.9509786668068047`*^9}, 3.9509787714278297`*^9, {3.950978987247917*^9, 
   3.950978989494673*^9}, {3.9509790232552147`*^9, 3.9509790254769707`*^9}, {
   3.95097905771805*^9, 3.950979069373251*^9}, {3.9509791155737705`*^9, 
   3.9509791307435093`*^9}, {3.950979240909916*^9, 3.9509792973334484`*^9}, {
   3.950979354631857*^9, 3.9509795308546677`*^9}, {3.950979570863392*^9, 
   3.950979588926058*^9}, {3.950979729390566*^9, 3.9509797400314636`*^9}, {
   3.95097981551215*^9, 3.950979989430273*^9}, {3.9509800533190384`*^9, 
   3.950980100126072*^9}, {3.9509804684885254`*^9, 3.95098052342017*^9}},
 CellLabel->
  "In[477]:=",ExpressionUUID->"97015806-6b42-814c-860b-c1318b363841"],

Cell["\<\
You can hover over the tooltip to see what prompt was generated with this \
more sophisticated set-up:\
\>", "Text",
 CellChangeTimes->{{3.950980559892437*^9, 
  3.950980590468464*^9}},ExpressionUUID->"a728597b-dd9f-6946-9c5d-\
bca853ae452c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChatEvaluate", "[", 
  RowBox[{
   RowBox[{"ChatObject", "[", "]"}], ",", 
   "\"\<What are all the topical groups of the American Physical Society? \
Please list them.\>\"", ",", 
   RowBox[{"LLMEvaluator", "->", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Model\>\"", "->", "\"\<gpt-4.5-preview\>\""}], ",", 
      RowBox[{"\"\<Prompts\>\"", "->", "bettergenerator"}]}], "|>"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.950980381678171*^9, 3.950980382348215*^9}},
 CellLabel->
  "In[478]:=",ExpressionUUID->"32aa9a5e-8a40-324d-b05b-ead77ebbaa3b"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"prompt:\"\>",
   "EchoLabel"], "  ", 
  TagBox[
   TooltipBox[
    FrameBox["\<\"hover here\"\>",
     StripOnInput->False],
    "\"Answer using this information:\\n\\nBEGIN CONTEXT\\n\\nTopical \
groups\\n\\nAPS has the following topical groups:\\n\\nData Science \
(GDS)\\nEnergy Research and Applications (GERA)\\nFew-Body Systems \
(GFB)\\nHadronic Physics (GHP)\\nInstrument and Measurement Science \
(GIMS)\\nMagnetism (GMAG)\\nMedical Physics (GMED)\\nPhysics Education \
Research (GPER)\\nPhysics of Climate (GPC)\\nPlasma Astrophysics \
(GPAP)\\nPrecision Measurement & Fundamental Constants (GPMFC)\\nShock \
Compression of Condensed Matter (SHOCK)\\nStatistical and Nonlinear Physics \
(GSNP)\\n\\nNew faculty workshop\\n\\nAPS co-sponsors a set of workshops for \
new physics and astronomy faculty with the American Association of Physics \
Teachers and the American Astronomical Society. These workshops reach nearly \
half of all new physics and astronomy faculty, and introduce them to current \
pedagogical practices, results of physics education research, and time \
management skills to help them begin and improve their academic \
careers.\\n\\nReferences\\n\\n\\n\\nEND CONTEXT\\n\\nWhat are all the topical \
groups of the American Physical Society? Please list them.\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "Answer using this information:\n\nBEGIN CONTEXT\n\nTopical groups\n\nAPS \
has the following topical groups:\n\nData Science (GDS)\nEnergy Research and \
Applications (GERA)\nFew-Body Systems (GFB)\nHadronic Physics (GHP)\n\
Instrument and Measurement Science (GIMS)\nMagnetism (GMAG)\nMedical Physics \
(GMED)\nPhysics Education Research (GPER)\nPhysics of Climate (GPC)\nPlasma \
Astrophysics (GPAP)\nPrecision Measurement & Fundamental Constants (GPMFC)\n\
Shock Compression of Condensed Matter (SHOCK)\nStatistical and Nonlinear \
Physics (GSNP)\n\nNew faculty workshop\n\nAPS co-sponsors a set of workshops \
for new physics and astronomy faculty with the American Association of \
Physics Teachers and the American Astronomical Society. These workshops reach \
nearly half of all new physics and astronomy faculty, and introduce them to \
current pedagogical practices, results of physics education research, and \
time management skills to help them begin and improve their academic careers.\
\n\nReferences\n\n\n\nEND CONTEXT\n\nWhat are all the topical groups of the \
American Physical Society? Please list them.", "Tooltip"]& ]}]], "Echo",
 CellChangeTimes->{
  3.9509805315173874`*^9},ExpressionUUID->"938267d9-990b-e544-a097-\
a023b1719c8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 PaneBox[
                  FrameBox[
                   TagBox[
                    GridBox[{{
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEmV8gECGEJi8Iol26dRSR+UCg
hMY3ReZ/+J1pimreAZi8CBrfFJkP04eQxyWOqu9dzX9FZL4RB8S9CH1w/6Dw
F3y8pIkqD6UbRYUwxAFRLy5n
                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.49019607843137253`, 0.8235294117647058, 1., 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGmDhDaDEqLIPMbDpwSRJMXANIN9/17TZH4yObA
+ErIfIeEpwpo5img2adAgIaZq4UmborMR3IXTB7sboW7T1D4D2r+K6L5Czkc
4P5DMg9THQC6JyON
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQGmDmCqAUx/WO6GwsctjqrvQc1/RWR+QspuEL9B
YUMRmO/wsAosv39+FJjfcMALzL/s6wTmH5gvBeIfuOSrBDNfEdUeOF8LmZ+Q
tkwTmd/gmADhrzuugKLvm4YImjkKaHxc4qj6Ep4KocmD+Q4bilD4QKCExjdF
5sPDE24ePFxF0PiIcAYAYyg58Q==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.18823529411764706`, 0.49411764705882355`, 
                    0.6549019607843137, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"What are all the topical groups of the American \
Physical Society? Please list them.\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], LineIndent -> 0,
                     LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 6.00100040435791},
                     {3., 6.00100040435791}, {3., 5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Role" -> "User", 
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "What are all the topical groups of the American Physical \
Society? Please list them."|>}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 17, 35, 
                    30.6654237`9.23922387698698}, "Instant", 
                    "Gregorian", -5.]|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}, {
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
                    "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
                    13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
                    12.375399589538574`, 8.781000137329102}, {
                    9.00040054321289, 6.081000328063965}, {9.00040054321289, 
                    8.}, {9.00040054321289, 9.}, {8.00040054321289, 9.}, {
                    5.000400543212891, 9.}, {5.000400543212891, 21.}, {
                    21.00040054321289, 21.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"The American Physical Society (APS) has the following \
topical groups:\\n\\n1. Data Science (GDS)  \\n2. Energy Research and \
Applications (GERA)  \\n3. Few-Body Systems (GFB)  \\n4. Hadronic Physics \
(GHP)  \\n5. Instrument and Measurement Science (GIMS)  \\n6. Magnetism \
(GMAG)  \\n7. Medical Physics (GMED)  \\n8. Physics Education Research (GPER) \
 \\n9. Physics of Climate (GPC)  \\n10. Plasma Astrophysics (GPAP)  \\n11. \
Precision Measurement & Fundamental Constants (GPMFC)  \\n12. Shock \
Compression of Condensed Matter (SHOCK)  \\n13. Statistical and Nonlinear \
Physics (GSNP)\"", BoxForm`Undeploy, DefaultBaseStyle -> {Deployed -> False}],
                     LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "The American Physical Society (APS) has the following \
topical groups:\n\n1. Data Science (GDS)  \n2. Energy Research and \
Applications (GERA)  \n3. Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP) \
 \n5. Instrument and Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. \
Medical Physics (GMED)  \n8. Physics Education Research (GPER)  \n9. Physics \
of Climate (GPC)  \n10. Plasma Astrophysics (GPAP)  \n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \n12. Shock Compression of \
Condensed Matter (SHOCK)  \n13. Statistical and Nonlinear Physics (GSNP)"|>}, 
                    "ToolRequests" -> {}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 17, 35, 
                    41.0358052`9.365737836852073}, "Instant", 
                    "Gregorian", -5.], "Role" -> "Assistant"|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, "Rows" -> {
                    GrayLevel[1], 
                    GrayLevel[
                    Rational[83, 85]]}}, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {None, {
                    RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745]}, None}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaseStyle -> "Text"], "Grid"], FrameMargins -> 0, 
                   FrameStyle -> 
                   RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745], RoundingRadius -> 1.5, StripOnInput -> 
                   False], AppearanceElements -> None, 
                  Scrollbars -> {False, Automatic}, 
                  ImageSize -> {{20, 600}, {20, 400}}, ContentPadding -> 
                  False], Deploy, DefaultBaseStyle -> "Deploy"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 PaneBox[
                  FrameBox[
                   TagBox[
                    GridBox[{{
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigIIGBQcUmkEEmV8gECGEJi8Iol26dRSR+UCg
hMY3ReZ/+J1pimreAZi8CBrfFJkP04eQxyWOqu9dzX9FZL4RB8S9CH1w/6Dw
F3y8pIkqD6UbRYUwxAFRLy5n
                    "]]}, {
                    FaceForm[
                    RGBColor[
                    0.49019607843137253`, 0.8235294117647058, 1., 1.]]}, 
                    StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGmDhDaDEqLIPMbDpwSRJMXANIN9/17TZH4yObA
+ErIfIeEpwpo5img2adAgIaZq4UmborMR3IXTB7sboW7T1D4D2r+K6L5Czkc
4P5DMg9THQC6JyON
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQGmDmCqAUx/WO6GwsctjqrvQc1/RWR+QspuEL9B
YUMRmO/wsAosv39+FJjfcMALzL/s6wTmH5gvBeIfuOSrBDNfEdUeOF8LmZ+Q
tkwTmd/gmADhrzuugKLvm4YImjkKaHxc4qj6Ep4KocmD+Q4bilD4QKCExjdF
5sPDE24ePFxF0PiIcAYAYyg58Q==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.18823529411764706`, 0.49411764705882355`, 
                    0.6549019607843137, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"What are all the topical groups of the American \
Physical Society? Please list them.\"", BoxForm`Undeploy, 
                    DefaultBaseStyle -> {Deployed -> False}], LineIndent -> 0,
                     LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Role" -> "User", 
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "What are all the topical groups of the American Physical \
Society? Please list them."|>}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 17, 35, 
                    30.6654237`9.23922387698698}, "Instant", 
                    "Gregorian", -5.]|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}, {
                    ItemBox[
                    FrameBox[
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
                    "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
                    13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
                    12.375399589538574`, 8.781000137329102}, {
                    9.00040054321289, 6.081000328063965}, {9.00040054321289, 
                    8.}, {9.00040054321289, 9.}, {8.00040054321289, 9.}, {
                    5.000400543212891, 9.}, {5.000400543212891, 21.}, {
                    21.00040054321289, 21.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{27., 27.}, {27., 27.}}, 
                    PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> 
                    Automatic], ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    TagBox[
                    "\"The American Physical Society (APS) has the following \
topical groups:\\n\\n1. Data Science (GDS)  \\n2. Energy Research and \
Applications (GERA)  \\n3. Few-Body Systems (GFB)  \\n4. Hadronic Physics \
(GHP)  \\n5. Instrument and Measurement Science (GIMS)  \\n6. Magnetism \
(GMAG)  \\n7. Medical Physics (GMED)  \\n8. Physics Education Research (GPER) \
 \\n9. Physics of Climate (GPC)  \\n10. Plasma Astrophysics (GPAP)  \\n11. \
Precision Measurement & Fundamental Constants (GPMFC)  \\n12. Shock \
Compression of Condensed Matter (SHOCK)  \\n13. Statistical and Nonlinear \
Physics (GSNP)\"", BoxForm`Undeploy, DefaultBaseStyle -> {Deployed -> False}],
                     LineIndent -> 0, 
                    LinebreakAdjustments -> {1, 10, 1, 0, 10}, Editable -> 
                    False, StripOnInput -> False], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemBox[
                    FrameBox[
                    ButtonBox[
                    
                    DynamicModuleBox[{
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$ = False, 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0, 0], 
                    StripOnInput -> False], "Hover" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.08], 
                    StripOnInput -> False], "Pressed" -> FrameBox[
                    GraphicsBox[{
                    Thickness[0.1], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 7.186999797821045}, {7.000999927520752, 
                    7.186999797821045}, {7.000999927520752, 7.875}, {3., 
                    7.875}, {3., 7.186999797821045}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 5.313000202178955}, {7.000999927520752, 
                    5.313000202178955}, {7.000999927520752, 
                    6.00100040435791}, {3., 6.00100040435791}, {3., 
                    5.313000202178955}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{3., 3.437000036239624}, {7.000999927520752, 
                    3.437000036239624}, {7.000999927520752, 4.125}, {3., 
                    4.125}, {3., 3.437000036239624}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    7.667099952697754, 10.62540054321289}, {7.667099952697754,
                     9.93740051984787}, {8.333099961280823, 
                    9.93740051984787}, {8.333099961280823, 
                    1.6874008178710938`}, {1.667099952697754, 
                    1.6874008178710938`}, {1.667099952697754, 
                    9.93740051984787}, {2.334099769592285, 
                    9.93740051984787}, {2.334099769592285, 
                    10.62540054321289}, {1.0001001358032227`, 
                    10.62540054321289}, {1.0001001358032227`, 
                    0.9994001388549805}, {9.000099897384644, 
                    0.9994001388549805}, {9.000099897384644, 
                    10.62540054321289}, {7.667099952697754, 
                    10.62540054321289}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{
                    3.6673998832702637`, 9.937499046325684}, {
                    6.332399845123291, 9.937499046325684}, {5.999399900436401,
                     10.624499082565308`}, {4.000399887561798, 
                    10.624499082565308`}, {3.6673998832702637`, 
                    9.937499046325684}}, CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQQF885yOADpR1rqyiA64PBldhCdO70PzH+gvxvM
375YQAVEK1hNAqv/rVcL5rOY2XCD6JaCu6og2mmaIg+IjrEPVQPRIjv/8ILo
L00LwPwrGQwCYHP/zwfzT6SFCmLjZzgyaIDoAymrxLDxYeo3JP0XR+Z/yGOU
RLbP4ddbSWT3NGxIlALR0z5D3Ltgy3ZpZP84LImXAdIOk+aeB/v/Q841sPw1
jT9KIHpCeytY/wy5pWC+go8amK/U3QPmL7i/TxLi3gYIPyEEhX/gahgvMt9i
fy04/ML21YP5PrlHOUG00Y59YD5K/AAAzspraA==
                    "]}]}, {
                    FaceForm[
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843, 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> {{11., 14.}, {11., 14.}}, 
                    PlotRange -> {{-0.5, 10.5}, {-0.5, 13.5}}, AspectRatio -> 
                    Automatic], FrameStyle -> None, RoundingRadius -> 5, 
                    FrameMargins -> 5, Background -> GrayLevel[0., 0.15], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, "Pressed", 
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, "Hover", 
                    True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, True], 
                    "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseDown$$, False], 
                    "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`LLMFunctions`Chat`Private`mouseHover$$, False], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                    ButtonFunction :> 
                    CopyToClipboard[
                    ChatObject; 
                    Wolfram`LLMFunctions`Chat`Private`messageToCopy[<|
                    "Content" -> {<|
                    "Type" -> "Text", "Data" -> 
                    "The American Physical Society (APS) has the following \
topical groups:\n\n1. Data Science (GDS)  \n2. Energy Research and \
Applications (GERA)  \n3. Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP) \
 \n5. Instrument and Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. \
Medical Physics (GMED)  \n8. Physics Education Research (GPER)  \n9. Physics \
of Climate (GPC)  \n10. Plasma Astrophysics (GPAP)  \n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \n12. Shock Compression of \
Condensed Matter (SHOCK)  \n13. Statistical and Nonlinear Physics (GSNP)"|>}, 
                    "ToolRequests" -> {}, "Timestamp" -> 
                    DateObject[{2025, 3, 14, 17, 35, 
                    41.0358052`9.365737836852073}, "Instant", 
                    "Gregorian", -5.], "Role" -> "Assistant"|>]], 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    FrameMargins -> {{3, 3}, {3, 3}}, FrameStyle -> None, 
                    BaselinePosition -> Baseline, StripOnInput -> False], 
                    ItemSize -> 3, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, "Rows" -> {
                    GrayLevel[1], 
                    GrayLevel[
                    Rational[83, 85]]}}, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {None, {
                    RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745]}, None}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                    BaseStyle -> "Text"], "Grid"], FrameMargins -> 0, 
                   FrameStyle -> 
                   RGBColor[
                    0.8980392156862745, 0.8980392156862745, 
                    0.8980392156862745], RoundingRadius -> 1.5, StripOnInput -> 
                   False], AppearanceElements -> None, 
                  Scrollbars -> {False, Automatic}, 
                  ImageSize -> {{20, 600}, {20, 400}}, ContentPadding -> 
                  False], Deploy, DefaultBaseStyle -> "Deploy"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChatObject[<|
   "LLMEvaluator" -> 
    LLMConfiguration[<|
      "Model" -> <|"Service" -> "OpenAI", "Name" -> "gpt-4.5-preview"|>, 
       "MaxTokens" -> Automatic, "Temperature" -> Automatic, 
       "TotalProbabilityCutoff" -> Automatic, "Prompts" -> {
         LLMPromptGenerator[<|
          "InputSpecifications" -> {"Input"}, "Function" -> 
           Composition[Echo[#, "prompt:", Tooltip[
               Framed["hover here"], #]& ]& , 
             TemplateObject[{
              "Answer using this information:", "\n\n", "BEGIN CONTEXT", 
               "\n\n", 
               TemplateSlot[
               "SearchHits", 
                InsertionFunction -> (StringRiffle[#, "\n\n"]& )], "\n\n", 
               "END CONTEXT", "\n\n", 
               TemplateSlot["UserInput"]}, CombinerFunction -> StringJoin][<|
              "UserInput" -> #, "SearchHits" -> Map[
                 StringTemplate["`Label`\n\n`Payload`"], 
                 SemanticSearch[$CellContext`annotatedindex, 
                  
                  LLMSynthesize[{
                   "List ONE key search phrase to fulfill this request about \
the American Physical Society. Do not use quotation marks. Do not use \
\"American Physical Society\" in the phrase. Minimize the number of words \
used\n", #}], MaxItems -> 3]]|>]& ], "InputSelector" -> Lookup["Input"], 
           "Options" -> {}, "LLMPacletVersion" -> "1.6.10"|>]}, 
       "PromptDelimiter" -> "\n\n", "StopTokens" -> Automatic, 
       "ToolMethod" -> <|
        "ToolPrompt" -> 
         TemplateObject[{
           "You have access to tools which can be used to do things, fetch \
data, compute, etc. while you create your response. ", 
            "Each tool takes input as JSON following a JSON schema. Here are \
the available tools and their associated schemas:\n\n", 
            TemplateSequence[
             TemplateExpression[
              StringTemplate[
              "Tool Name: `Name`\nDescription: `Description`\nSchema:\n\
`Schema`\n\n"]], 
             TemplateExpression[
              Map[Append[
                Wolfram`LLMFunctions`Common`LLMToolInformation[#], "Schema" -> 
                ExportString[
                  Information[#, "JSONSchema"], "JSON"]]& , 
               TemplateSlot["Tools"]]]], 
            "To call a tool, write the following at any time during your \
response:\n\n", 
            "TOOLCALL: <tool name>\n{\n\t<\"parameter name 1\">: <value 1>\n\t\
<\"parameter name 2\">: <value 2>\n}\nENDARGUMENTS\nENDTOOLCALL\n\n", 
            "Always use valid JSON to specify the parameters in the tool \
call. ", "Always follow the tool's JSON schema to specify the parameters in \
the tool call. ", 
            "Fill in the values in <> brackets with the values for the \
particular tool. ", "Provide as many parameters as the tool requires. ", 
            "Always make one tool call at a time. ", 
            "Always write two line breaks before each tool call.\n\n", 
            "After the tool call, RESULT: <tool result> will be written to \
show the result of the tool call above."}, CombinerFunction -> StringJoin, 
           InsertionFunction -> TextString], "ToolRequestParser" -> 
         Wolfram`LLMFunctions`Tools`PromptToolUtilities`Private`\
parseToolRequest, "ToolResponseInsertionFunction" -> 
         Wolfram`LLMFunctions`Tools`PromptToolUtilities`Private`\
toolResponseInsertionFunction, "ToolStopTokens" -> {"ENDTOOLCALL"}|>, "Tools" -> 
       Automatic, "LLMPacletVersion" -> "1.6.10", Authentication -> 
       Automatic|>], 
    "Messages" -> {<|
      "Role" -> "User", 
       "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "What are all the topical groups of the American Physical Society? \
Please list them."|>}, "Timestamp" -> 
       DateObject[{2025, 3, 14, 17, 35, 30.6654237`9.23922387698698}, 
         "Instant", "Gregorian", -5.]|>, <|
      "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "The American Physical Society (APS) has the following topical \
groups:\n\n1. Data Science (GDS)  \n2. Energy Research and Applications \
(GERA)  \n3. Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP)  \n5. \
Instrument and Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. \
Medical Physics (GMED)  \n8. Physics Education Research (GPER)  \n9. Physics \
of Climate (GPC)  \n10. Plasma Astrophysics (GPAP)  \n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \n12. Shock Compression of \
Condensed Matter (SHOCK)  \n13. Statistical and Nonlinear Physics (GSNP)"|>}, 
       "ToolRequests" -> {}, "Timestamp" -> 
       DateObject[{2025, 3, 14, 17, 35, 41.0358052`9.365737836852073}, 
         "Instant", "Gregorian", -5.], "Role" -> "Assistant"|>}, "ChatID" -> 
    "f1fb974a-faf6-477f-8c1e-68aa20cedc02", 
    "History" -> {<|
      "Content" -> {<|
         "Type" -> "Text", "Data" -> 
          "The American Physical Society (APS) has the following topical \
groups:\n\n1. Data Science (GDS)  \n2. Energy Research and Applications \
(GERA)  \n3. Few-Body Systems (GFB)  \n4. Hadronic Physics (GHP)  \n5. \
Instrument and Measurement Science (GIMS)  \n6. Magnetism (GMAG)  \n7. \
Medical Physics (GMED)  \n8. Physics Education Research (GPER)  \n9. Physics \
of Climate (GPC)  \n10. Plasma Astrophysics (GPAP)  \n11. Precision \
Measurement & Fundamental Constants (GPMFC)  \n12. Shock Compression of \
Condensed Matter (SHOCK)  \n13. Statistical and Nonlinear Physics (GSNP)"|>}, 
       "ToolRequests" -> {}, "FinishReason" -> "stop", "Model" -> 
       "gpt-4.5-preview-2025-02-27", "Timestamp" -> 
       DateObject[{2025, 3, 14, 17, 35, 41.0358052`9.365737836852073}, 
         "Instant", "Gregorian", -5.], 
       "Usage" -> <|
        "History" -> Quantity[247, "Tokens"], "Completion" -> 
         Quantity[152, "Tokens"]|>, "CallID" -> 
       "chatcmpl-BB7ujgzZrhxgLA1VFKKBt8S9WBn57", "RawResponseWXF" -> 
       ByteArray[CompressedData["
1:eJx9U01PGzEQTWgoHwX1Q+qhnNwLCoddkZQ0wG0TEkAQGuGqlXqJjHeya/Da
K9sLpIf+hV77D3rsn+l/6bXjDZBUVXvbnTczfvPmzesLfX5RrVQqX2qVyu5+
tBDQ5XOwuVYWouWALoiYbvKUOZ7lMuh02sVl8vmTSW+T06jxoX9y0nG7dO9j
R7XaAX2sLy6BO/rUF4RcYwk4oVVAl7gB5iAWjR8/k4AuZjoGSTeS3AU7YSvI
DVwLuAma281WsN0Mmm1fkmrBwY6rtnYqrIseYZ1QMdx2K4hmYC1LIKoFtGa0
BLrCrMU0ppyv1cqBcvR77X0KJMrACM4UGaYTix+SUM0FuAmpR0O6RVJmicO8
sZZS3wiVEKfzMi8xusjt/upqIyQHzDFCsU5xIPXDAywkq82Q9BSYZEJQNWCG
p4SpmER5LrGBH95ibu888slvQtLHKTs6nhA6sQ4yD/Y7HtsJyRGLjVaC39H0
2NHQY62QHCvrTJHhTGX/ATBbGCj/Z5SOByWntyEZsESh9DbD6CA69NE2RnEB
fqpZ/0HvwGO74UOsFxdT3rOB6ofD3rlP25ul6THpSpHhTj3c9WhjG2HJbMZI
hGR1/vDKMCrHaKCIQwNcWN9+foRN0i9UzPw30uuiaH6PZemgP22OQtNU8ytE
M7SLLXt4FhotgWZFTZhzYEidHr3rnpQ1qDd1OIx15dheuDOtpFA415wI9Gy4
hZ4xMC4sk7Z2VkgZ0CdMKe2mKxxXph4M6PpYKGHTEdrZakVrFp2CvixKLy4i
nhvk50ZOXyGry19o1eezQ7gPf8PwmsPu8j7ytRrQl3/UjmJwTEjrT3KdM55C
fId4/6+xIhZ6LvDqr1ceGuCJPJvyRWv/r8cG4xxyPNMRKoxWmWtWwgb8ef8L
XrNgrvFiR06AoUsxjFkhUbIXtrT6CJVLwORG4GbvNK6e2ZWocBp9JPhvJWiC
Fw==
         "]], "Role" -> "Assistant"|>}, "Usage" -> Quantity[399, "Tokens"], 
    "Icon" -> Graphics[{
       Thickness[0.038461538461538464`], 
       Style[{
         FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGZigAFFB1RaBJmfkPZMCE0ezDc2LkbhA4ESGt8U
mf9guZspqnkNMHkRNL4pMj8hzc0UVR5Cw8zDpe9dzX9FJH6DwoYiRVTz4P5B
4Sc8XqqJJg+mD3zVEMEQBwCRvSeH
          "]]}, 
        FaceForm[
         RGBColor[1., 1., 1., 1.]]], 
       Style[{
         FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
          3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQQOUgymDhCmGZjOZBBB5jdonhZEkxcA0g33/XtN
kfgggM5XQuY7JDxVQDNPAc0+iLwJVByTLwDlayHLI7kfzJfP6jVFkwe7W+Hu
ExT+g5r/ish8mPuhfLj/kMwzQ7PPzAEA5oooHw==
           "], {{21.00040054321289, 21.}, {21.00040054321289, 9.}, {
           13.00040054321289, 9.}, {12.649399757385254`, 9.}, {
           12.375399589538574`, 8.781000137329102}, {9.00040054321289, 
           6.081000328063965}, {9.00040054321289, 8.}, {9.00040054321289, 
           9.}, {8.00040054321289, 9.}, {5.000400543212891, 9.}, {
           5.000400543212891, 21.}, {21.00040054321289, 21.}}}]}, 
        FaceForm[
         RGBColor[
         0.5372549019607843, 0.5372549019607843, 0.5372549019607843, 1.]]]}, 
      ImageSize -> {{27., 27.}, {27., 27.}}, 
      PlotRange -> {{-0.5, 26.5}, {-0.5, 26.5}}, AspectRatio -> Automatic], 
    "LLMPacletVersion" -> "1.6.10"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9509803945604153`*^9, 3.9509805410789165`*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"3ee96ff7-5bd0-dc44-b27b-e8a027b9b29c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{838.5, 451},
WindowMargins->{{Automatic, 21.5}, {1.5, Automatic}},
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ef04daeb-9af7-1348-a1c5-1cffb0811641"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 274, 7, 157, "Title",ExpressionUUID->"2edeb314-d5cf-594e-9261-9261ae4495b3"],
Cell[853, 31, 219, 4, 52, "Subtitle",ExpressionUUID->"c126a7f4-456f-884f-9b3a-791d2b2857c9"],
Cell[1075, 37, 180, 3, 33, "Text",ExpressionUUID->"bd143436-d424-2140-bca6-45ce552b5124"],
Cell[1258, 42, 207, 4, 30, "Author",ExpressionUUID->"f5f7dbab-44fe-194e-9859-a4ceac7562ec"],
Cell[1468, 48, 197, 4, 53, "Affiliation",ExpressionUUID->"0d1e37e5-cee5-2541-b7cc-118e77a9aff8"],
Cell[CellGroupData[{
Cell[1690, 56, 157, 3, 66, "Section",ExpressionUUID->"ad6eb938-5c68-d645-a8bc-21910270c843"],
Cell[CellGroupData[{
Cell[1872, 63, 165, 3, 53, "Subsection",ExpressionUUID->"8481a446-cdfe-aa4b-9f5b-8d6be8ed268a"],
Cell[2040, 68, 154, 3, 33, "Text",ExpressionUUID->"9d1b9ff0-63d4-7546-aae7-4ccea6608fc0"],
Cell[2197, 73, 265, 4, 30, "Item",ExpressionUUID->"43c001f0-ed6d-774c-8afb-2269791f836f"],
Cell[2465, 79, 257, 4, 30, "Item",ExpressionUUID->"7f8d9bd6-44c8-c847-abe2-d0042fe32662"],
Cell[2725, 85, 252, 4, 30, "Item",ExpressionUUID->"25cbb4ad-c25e-ab4a-83e7-aaf66ad7b294"],
Cell[2980, 91, 241, 4, 30, "Item",ExpressionUUID->"cea19c34-c6a9-4b46-aa35-34ddbc5b601d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3258, 100, 158, 3, 53, "Subsection",ExpressionUUID->"7548acc7-77cd-da4a-9c7f-b40f7d18f5c2"],
Cell[3419, 105, 185, 3, 33, "Text",ExpressionUUID->"1b7efcbe-1334-9547-9481-979ca5f8b199"],
Cell[3607, 110, 174, 3, 30, "Item",ExpressionUUID->"ef6e4226-cbd6-8749-9052-88e506437a6c"],
Cell[3784, 115, 174, 3, 30, "Item",ExpressionUUID->"27985890-4f0a-fe4a-9fce-6c37d386a6f5"],
Cell[3961, 120, 269, 4, 30, "Item",ExpressionUUID->"d43c11de-79ac-0f4d-a1c2-f951546f725f"],
Cell[4233, 126, 302, 4, 30, "Item",ExpressionUUID->"d8a6b572-3f8b-e64f-8a9e-e10b81999316"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4584, 136, 164, 3, 66, "Section",ExpressionUUID->"b3516792-dc4e-b149-80e7-fc2b2917afa8"],
Cell[4751, 141, 868, 21, 77, "Text",ExpressionUUID->"6c5da334-831b-a040-be2a-889b15119948"],
Cell[CellGroupData[{
Cell[5644, 166, 174, 3, 53, "Subsection",ExpressionUUID->"4c11bac2-4c74-2940-8f6c-5d9fd99ba971"],
Cell[5821, 171, 259, 6, 33, "Text",ExpressionUUID->"9c55f7d0-c5d2-d348-ab33-292742ec23b7"],
Cell[6083, 179, 546, 13, 33, "Text",ExpressionUUID->"08d55acf-7320-0d40-90b2-7600fec2c048"],
Cell[CellGroupData[{
Cell[6654, 196, 314, 7, 28, "Input",ExpressionUUID->"cd474531-2306-c847-a879-bd5bd7299650"],
Cell[6971, 205, 313097, 5093, 84, "Output",ExpressionUUID->"1db301ca-a2dd-ab4a-bae4-fc8269a80cb1"]
}, Open  ]],
Cell[320083, 5301, 179, 3, 33, "Text",ExpressionUUID->"1e8a8dfd-9d37-8540-a2b3-baba7c894d6a"],
Cell[CellGroupData[{
Cell[320287, 5308, 230, 3, 28, "Input",ExpressionUUID->"65965fad-aaa2-0549-ba27-355a0bf43cfa"],
Cell[320520, 5313, 183, 2, 32, "Output",ExpressionUUID->"69100073-9030-d743-970b-f158d6b62c0d"]
}, Open  ]],
Cell[320718, 5318, 290, 8, 33, "Text",ExpressionUUID->"765437d9-3805-6f45-bbd0-c0232987569b"],
Cell[321011, 5328, 309, 9, 33, "Text",ExpressionUUID->"9ca2ef69-1afa-864c-a5cc-8ac2a9925dc7"],
Cell[321323, 5339, 503, 9, 77, "Text",ExpressionUUID->"ab143d2a-abc2-2741-87ee-39685c95b787"],
Cell[CellGroupData[{
Cell[321851, 5352, 229, 3, 28, "Input",ExpressionUUID->"b94763b6-7b59-224f-aadb-2f12f3a04abf"],
Cell[322083, 5357, 184, 2, 32, "Output",ExpressionUUID->"341ce459-6a08-5447-90ac-28313af20636"]
}, Open  ]],
Cell[322282, 5362, 273, 5, 33, "Text",ExpressionUUID->"cf67b6b9-4435-0e42-bd2b-b8e5c47e272f"],
Cell[CellGroupData[{
Cell[322580, 5371, 1613, 40, 142, "Input",ExpressionUUID->"df90f1e0-5c96-9446-a253-5e33a1b83cf7"],
Cell[324196, 5413, 23323, 469, 267, "Output",ExpressionUUID->"d851c03a-df2f-af4a-b1a4-1064418a784f"]
}, {2}]],
Cell[347531, 5885, 473, 10, 77, "Text",ExpressionUUID->"315af4e7-3724-6643-a4d3-6faf0b9b25c5"],
Cell[348007, 5897, 465, 8, 55, "Text",ExpressionUUID->"117996ca-b428-284c-ae7d-73bbb937f694"],
Cell[CellGroupData[{
Cell[348497, 5909, 987, 23, 123, "Input",ExpressionUUID->"516cf0e5-a2bd-b54d-acce-2cae90e2739d"],
Cell[349487, 5934, 270, 5, 32, "Output",ExpressionUUID->"76b9952e-8fd8-d543-b426-2d15cda0eca0"]
}, Open  ]],
Cell[349772, 5942, 331, 7, 55, "Text",ExpressionUUID->"b185eac1-47b6-244a-803c-fdb1dec63557"],
Cell[CellGroupData[{
Cell[350128, 5953, 1869, 49, 161, "Input",ExpressionUUID->"ae112863-4e50-4549-bb79-189a730fb7e6"],
Cell[352000, 6004, 23370, 470, 280, "Output",ExpressionUUID->"dcfcda5b-88a2-b24a-b62e-81de220fd4fb"]
}, {2}]],
Cell[375382, 6477, 576, 10, 55, "Text",ExpressionUUID->"86e85164-c723-394c-a56e-d63a2bf78c04"],
Cell[CellGroupData[{
Cell[375983, 6491, 3194, 68, 218, "Input",ExpressionUUID->"abb5ffeb-2955-7246-ae18-3602f23ea5f7"],
Cell[379180, 6561, 13288, 280, 241, "Output",ExpressionUUID->"034d6b3d-b1e2-af42-9d36-e5e1694889b5"]
}, {2}]],
Cell[392480, 6844, 742, 19, 55, "Text",ExpressionUUID->"2005786a-5a96-bc41-8d3e-fdcff0207e74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393259, 6868, 220, 4, 53, "Subsection",ExpressionUUID->"6eb4f8a5-ea0a-4743-b674-1c8b412c3c7b"],
Cell[393482, 6874, 1015, 21, 55, "Text",ExpressionUUID->"2a1640d5-62c3-7548-919d-e78f4dd30797"],
Cell[CellGroupData[{
Cell[394522, 6899, 269, 5, 28, "Input",ExpressionUUID->"82df659f-069e-a144-b997-55b8f055e2bd"],
Cell[394794, 6906, 106922, 2297, 101, "Output",ExpressionUUID->"e9a8d873-52c5-6c47-b79d-fcb7c9b8103b"]
}, Open  ]],
Cell[501731, 9206, 507, 11, 55, "Text",ExpressionUUID->"ef5ae58f-ec5f-0f44-8352-dc3381c5a8de"],
Cell[CellGroupData[{
Cell[502263, 9221, 4147, 100, 351, "Input",ExpressionUUID->"0d65fa85-ee35-ca49-a1e5-b6fcb771ad3a"],
Cell[506413, 9323, 3284, 63, 301, "Output",ExpressionUUID->"81eb01a1-f6a2-7f42-86cc-b9b6c56262df"]
}, {2}]],
Cell[CellGroupData[{
Cell[509731, 9391, 164, 3, 43, "Subsubsection",ExpressionUUID->"975b53b2-2c42-3245-be1b-2f04f7bd2b24"],
Cell[509898, 9396, 325, 7, 33, "Text",ExpressionUUID->"784bf5d8-ee30-b343-a5d0-899657f4c097"],
Cell[CellGroupData[{
Cell[510248, 9407, 189, 3, 28, "Input",ExpressionUUID->"fc75bd61-8985-8843-92ac-56f435d7af25"],
Cell[510440, 9412, 313368, 5099, 165, "Output",ExpressionUUID->"dcfe1721-d456-9649-b014-face76b4cd91"]
}, Open  ]],
Cell[823823, 14514, 419, 11, 33, "Text",ExpressionUUID->"e659471f-3a33-0840-8912-63fb1b46c38b"],
Cell[CellGroupData[{
Cell[824267, 14529, 345, 7, 28, "Input",ExpressionUUID->"09df068b-93f0-f240-8fb9-20ef861c701b"],
Cell[824615, 14538, 311598, 5064, 84, "Output",ExpressionUUID->"35f61a6e-e6ec-6f43-b9e4-624c83370767"]
}, Open  ]],
Cell[1136228, 19605, 445, 11, 33, "Text",ExpressionUUID->"15af9b70-9dad-9d46-8532-1d93d260106d"],
Cell[CellGroupData[{
Cell[1136698, 19620, 411, 10, 28, "Input",ExpressionUUID->"2573e766-9885-5f44-8419-1bec0b204cec"],
Cell[1137112, 19632, 2615, 39, 121, "Output",ExpressionUUID->"6ee12e1a-d5d2-5541-8c10-3fe58cf5b206"]
}, Open  ]],
Cell[1139742, 19674, 247, 4, 33, "Text",ExpressionUUID->"fc123cff-a79e-8d4a-8003-9e23e02d2d87"],
Cell[CellGroupData[{
Cell[1140014, 19682, 436, 10, 28, "Input",ExpressionUUID->"ebc0075d-c5c9-1b47-83bd-08a8cacb3138"],
Cell[1140453, 19694, 2224, 36, 105, "Output",ExpressionUUID->"15887520-5b22-7c4a-98a8-7b8742c00b4c"]
}, Open  ]],
Cell[1142692, 19733, 246, 4, 33, "Text",ExpressionUUID->"ee9f8eec-446d-8e4b-8df6-3dbefd92effb"],
Cell[CellGroupData[{
Cell[1142963, 19741, 1622, 39, 85, "Input",ExpressionUUID->"fc45d042-70f8-9242-8edd-c87094c9e834"],
Cell[1144588, 19782, 36443, 779, 256, "Output",ExpressionUUID->"85a4e752-0331-b849-ad98-789544e2a2bc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1181092, 20568, 190, 3, 53, "Subsection",ExpressionUUID->"4df911e6-3d4b-d54c-98a3-7e39bcef0746"],
Cell[1181285, 20573, 310, 11, 33, "Text",ExpressionUUID->"2d3c9d40-51c8-d04f-8820-635e5cfa18f5"],
Cell[1181598, 20586, 257, 6, 33, "Text",ExpressionUUID->"9e2f7b62-9612-8344-a49d-b2084241e9a9"],
Cell[CellGroupData[{
Cell[1181880, 20596, 268, 5, 28, "Input",ExpressionUUID->"b1d7076e-5a33-8547-9f46-92c821aec04b"],
Cell[1182151, 20603, 106920, 2297, 98, "Output",ExpressionUUID->"2ea3aeee-ac63-9d4a-9b9f-5d39ffef7ad6"]
}, Open  ]],
Cell[1289086, 22903, 568, 11, 77, "Text",ExpressionUUID->"fab0dcac-225c-814d-9abf-a67d2d802753"],
Cell[CellGroupData[{
Cell[1289679, 22918, 358, 8, 28, "Input",ExpressionUUID->"906d7980-60e1-1c42-84b8-e1afe0588ebc"],
Cell[1290040, 22928, 99178, 2179, 188, "Output",ExpressionUUID->"0710d552-23c3-8b47-a003-bc21b6eb9b32"]
}, Open  ]],
Cell[1389233, 25110, 340, 7, 55, "Text",ExpressionUUID->"667f35bd-be96-524f-ab3c-7bef9eff46ae"],
Cell[CellGroupData[{
Cell[1389598, 25121, 341, 9, 28, "Input",ExpressionUUID->"cc76a82c-c114-464e-883c-5b3e0945b032"],
Cell[1389942, 25132, 346654, 7286, 317, "Output",ExpressionUUID->"cca3cd2a-d6fe-6e40-b7e1-118600412c1e"]
}, Open  ]],
Cell[1736611, 32421, 462, 9, 55, "Text",ExpressionUUID->"d7d0897e-b7cc-e24b-bc5c-669de4d904ee"],
Cell[CellGroupData[{
Cell[1737098, 32434, 1934, 50, 142, "Input",ExpressionUUID->"91db6606-7e10-5649-b99f-f8c854a72cc0"],
Cell[1739035, 32486, 20574, 423, 244, "Output",ExpressionUUID->"a581c0ce-bcb0-b347-92ec-307c47ff9adb"]
}, {2}]],
Cell[1759621, 32912, 607, 12, 77, "Text",ExpressionUUID->"149164b2-30b5-f14a-9417-b65c0c5d3a77"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1760277, 32930, 163, 3, 66, "Section",ExpressionUUID->"4d021222-d756-2b47-9109-e7daad6cdf83"],
Cell[1760443, 32935, 471, 11, 55, "Text",ExpressionUUID->"4d796b87-6396-f643-b1d0-d25e40531f80"],
Cell[CellGroupData[{
Cell[1760939, 32950, 168, 3, 53, "Subsection",ExpressionUUID->"24a62344-128a-4341-9d19-236407e8bce4"],
Cell[1761110, 32955, 381, 7, 55, "Text",ExpressionUUID->"7fa26a31-6973-e74f-90ce-7d88d6e6b0db"],
Cell[CellGroupData[{
Cell[1761516, 32966, 324, 6, 28, "Input",ExpressionUUID->"a50f09d9-b631-924e-8336-c67b79b66089"],
Cell[1761843, 32974, 106916, 2296, 99, "Output",ExpressionUUID->"affa5b2f-71b4-744f-ba81-bb04122011d2"]
}, Open  ]],
Cell[1868774, 35273, 576, 14, 55, "Text",ExpressionUUID->"f2a1f52d-f351-1c43-b289-229542330674"],
Cell[CellGroupData[{
Cell[1869375, 35291, 294, 6, 28, "Input",ExpressionUUID->"df6356e7-d562-9349-8c3e-f720f421052e"],
Cell[1869672, 35299, 309453, 5022, 84, "Output",ExpressionUUID->"eb935acd-1fa2-1441-93f0-eb20b377575b"]
}, Open  ]],
Cell[2179140, 40324, 434, 8, 55, "Text",ExpressionUUID->"0a09af19-a467-154a-90a3-6fa12693c163"],
Cell[2179577, 40334, 231, 5, 33, "Text",ExpressionUUID->"cac00287-78e8-b342-9d76-14c3707536c2"],
Cell[CellGroupData[{
Cell[2179833, 40343, 327, 7, 28, "Input",ExpressionUUID->"288c531b-2e65-3040-9dfc-abd73b86bd52"],
Cell[2180163, 40352, 223, 4, 32, "Output",ExpressionUUID->"460510d7-28b3-c246-a83c-bba3893f2467"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2180423, 40361, 337, 8, 28, "Input",ExpressionUUID->"fe886c45-cecc-2c40-ba64-0bb495466ecc"],
Cell[2180763, 40371, 173, 3, 32, "Output",ExpressionUUID->"9586e369-d91f-ac40-8977-994abe7d38e3"]
}, Open  ]],
Cell[2180951, 40377, 309, 7, 33, "Text",ExpressionUUID->"16515182-4228-3c46-9d2e-4055c1b6cf05"],
Cell[CellGroupData[{
Cell[2181285, 40388, 3056, 77, 256, "Input",ExpressionUUID->"8b9969ef-5ee2-2a41-943e-601bdd0db5f4"],
Cell[2184344, 40467, 4826, 104, 287, "Output",ExpressionUUID->"283dca3e-4fcc-3e48-b8b5-c1aa534eef39"]
}, {2}]],
Cell[2189182, 40574, 402, 8, 55, "Text",ExpressionUUID->"567f7477-70d5-cd45-a86e-7f4653bf812f"],
Cell[2189587, 40584, 212, 3, 33, "Text",ExpressionUUID->"783d4dd4-8d76-9c41-935d-95c3ce6d0ce3"],
Cell[CellGroupData[{
Cell[2189824, 40591, 460, 11, 47, "Input",ExpressionUUID->"f1e56929-ebba-7644-818f-4839d1541179"],
Cell[2190287, 40604, 333912, 5420, 84, "Output",ExpressionUUID->"18dbb4c9-5545-b84c-aa03-e6c34018e47b"]
}, Open  ]],
Cell[2524214, 46027, 213, 5, 33, "Text",ExpressionUUID->"e28c9a61-0d96-9f43-b24a-e20e8e6f3b69"],
Cell[CellGroupData[{
Cell[2524452, 46036, 2856, 75, 256, "Input",ExpressionUUID->"924296eb-7a46-4c4b-a165-fcca0e72651b"],
Cell[2527311, 46113, 4712, 101, 287, "Output",ExpressionUUID->"4edefc34-28cf-384a-9798-b1a3eae2a5e5"]
}, {2}]],
Cell[2532035, 46217, 348, 7, 33, "Text",ExpressionUUID->"94f5e1ea-443d-be41-9787-2bbae4325c24"],
Cell[CellGroupData[{
Cell[2532408, 46228, 2964, 78, 256, "Input",ExpressionUUID->"7d44ff3f-fad3-9744-9a69-a0f6cf20cbd7"],
Cell[2535375, 46308, 4667, 101, 287, "Output",ExpressionUUID->"2d6a56fc-6e1f-2b47-9911-3a6d8b2fe0a0"]
}, {2}]],
Cell[2540054, 46412, 298, 7, 55, "Text",ExpressionUUID->"e8591e0c-e376-6641-86b9-d0dae3dd96e1"],
Cell[CellGroupData[{
Cell[2540377, 46423, 6322, 139, 193, "Input",ExpressionUUID->"e4768c82-9750-0c41-b457-5c901125bc07"],
Cell[2546702, 46564, 22593, 561, 287, "Output",ExpressionUUID->"5063b56e-2f86-3946-a6f4-7e97723048f6"]
}, {2}]],
Cell[2569307, 47128, 334, 7, 55, "Text",ExpressionUUID->"f12e9f70-1add-c641-bd52-4b0e110fc348"],
Cell[CellGroupData[{
Cell[2569666, 47139, 6131, 136, 174, "Input",ExpressionUUID->"46619a15-31b7-8840-927f-4919927233d2"],
Cell[2575800, 47277, 22297, 547, 287, "Output",ExpressionUUID->"262958b6-e4ec-3f49-9d03-d2b80f3c60f7"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2598143, 47830, 167, 3, 53, "Subsection",ExpressionUUID->"524a7e04-c4fa-f44b-aa51-442588328c09"],
Cell[2598313, 47835, 337, 7, 55, "Text",ExpressionUUID->"179d966b-b843-7d4f-b187-c6d6873e09e8"],
Cell[2598653, 47844, 315, 7, 55, "Text",ExpressionUUID->"bb27ca19-1e5b-3149-9acc-573454cfba1a"],
Cell[2598971, 47853, 275, 6, 33, "Text",ExpressionUUID->"0e5699b6-5674-bf49-bcc1-6ee1e0b22e4c"],
Cell[CellGroupData[{
Cell[2599271, 47863, 317, 8, 28, "Input",ExpressionUUID->"f747844c-f25c-0840-ba71-3879f5277a0d"],
Cell[2599591, 47873, 7197, 143, 59, "Output",ExpressionUUID->"1c0894d8-c910-a64d-98fb-03957e8f5372"]
}, Open  ]],
Cell[2606803, 48019, 360, 8, 33, "Text",ExpressionUUID->"e97e67d6-f71d-f24f-b968-63169f5d1f09"],
Cell[CellGroupData[{
Cell[2607188, 48031, 1147, 26, 47, "Input",ExpressionUUID->"bb2630c6-3633-e04c-bff9-83de74addd0e"],
Cell[2608338, 48059, 34350, 632, 256, "Output",ExpressionUUID->"bb0c8336-33d3-e34e-8386-b44813286d93"]
}, Open  ]],
Cell[2642703, 48694, 537, 12, 33, "Text",ExpressionUUID->"9984eb3d-d9ad-d146-bee5-4e3270da0ed1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2643289, 48712, 197, 3, 66, "Section",ExpressionUUID->"78fc444c-9ca7-134c-af63-8a9b1ce1896a"],
Cell[2643489, 48717, 412, 10, 55, "Text",ExpressionUUID->"52aba8ac-fe35-c04a-a284-8c88159c312e"],
Cell[CellGroupData[{
Cell[2643926, 48731, 505, 12, 66, "Input",ExpressionUUID->"397678f0-ee79-b341-8065-5762b5f3da95"],
Cell[2644434, 48745, 94085, 1715, 433, "Output",ExpressionUUID->"06920db7-4945-194c-b390-1b2bd8be90cf"]
}, Open  ]],
Cell[2738534, 50463, 379, 8, 55, "Text",ExpressionUUID->"323a5cac-9b79-9f40-a5a2-055c4b2f6487"],
Cell[CellGroupData[{
Cell[2738938, 50475, 2366, 44, 31, "Input",ExpressionUUID->"5f227875-1aa9-c44e-a6f5-a1d600a05e3e"],
Cell[2741307, 50521, 2205, 63, 538, "Output",ExpressionUUID->"57fff679-aa44-e54b-b789-5898d2f68e5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2743549, 50589, 184, 3, 53, "Subsection",ExpressionUUID->"25c00dad-d3e5-1049-b9f9-4adeb13698c8"],
Cell[2743736, 50594, 609, 16, 55, "Text",ExpressionUUID->"70db0bf7-ee6c-4e48-8a41-6b2f87cb93e4"],
Cell[CellGroupData[{
Cell[2744370, 50614, 938, 19, 123, "Input",ExpressionUUID->"b758522f-9b9e-d343-9190-b274aa04af81"],
Cell[2745311, 50635, 6235, 127, 59, "Output",ExpressionUUID->"443efdfb-4ab9-3241-bdb7-57d54621a560"]
}, Open  ]],
Cell[2751561, 50765, 790, 20, 55, "Text",ExpressionUUID->"ad925e21-e464-dd44-8a78-e3d1a2cf3831"],
Cell[CellGroupData[{
Cell[2752376, 50789, 257, 5, 28, "Input",ExpressionUUID->"d0d782f2-cbec-454a-bc0d-27e1a220fccb"],
Cell[2752636, 50796, 38708, 711, 256, "Output",ExpressionUUID->"c1eb3f7f-156c-b946-b407-f2cb64643d71"]
}, Open  ]],
Cell[2791359, 51510, 296, 6, 55, "Text",ExpressionUUID->"5e073927-efee-904c-aca5-9515d93996ea"],
Cell[CellGroupData[{
Cell[2791680, 51520, 582, 14, 66, "Input",ExpressionUUID->"98e5a627-1344-284c-aebc-48d2d35e7f2c"],
Cell[2792265, 51536, 94340, 1715, 406, "Output",ExpressionUUID->"f2f089a4-9e3a-1146-99db-a1468a217f27"]
}, Open  ]],
Cell[2886620, 53254, 409, 8, 55, "Text",ExpressionUUID->"8ee95848-aa67-bf41-bba3-ac1122a1cad6"],
Cell[CellGroupData[{
Cell[2887054, 53266, 308, 8, 66, "Input",ExpressionUUID->"b288f7b7-3e81-c34b-8032-1ca71ea8853a"],
Cell[2887365, 53276, 6043, 87, 535, "Output",ExpressionUUID->"527ab1b1-4745-5147-8dc4-f4d8ea85cd99"]
}, Open  ]],
Cell[2893423, 53366, 348, 7, 55, "Text",ExpressionUUID->"64be1ede-93c6-6e4e-a981-3c8eadf65c12"],
Cell[CellGroupData[{
Cell[2893796, 53377, 344, 7, 28, "Input",ExpressionUUID->"3e751035-47a3-f148-a207-9b1d08659e16"],
Cell[2894143, 53386, 8350, 116, 859, "Output",ExpressionUUID->"f3a694e8-f78e-5b4e-a47a-875a0d0978f6"]
}, Open  ]],
Cell[2902508, 53505, 383, 7, 55, "Text",ExpressionUUID->"6d44d353-6d01-b848-befc-cfb724c4d0c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2902928, 53517, 197, 3, 53, "Subsection",ExpressionUUID->"5cae5c01-243a-9a48-ba33-31bcb2367369"],
Cell[2903128, 53522, 237, 6, 33, "Text",ExpressionUUID->"c01810a5-868a-dc44-87dc-7d1208187e45"],
Cell[CellGroupData[{
Cell[2903390, 53532, 2552, 59, 199, "Input",ExpressionUUID->"4d715c9d-ea0c-9b4d-8263-d4a5d4699569"],
Cell[2905945, 53593, 6468, 130, 59, "Output",ExpressionUUID->"30c4d810-ca18-ac4b-a29b-e6792a912fdb"]
}, Open  ]],
Cell[2912428, 53726, 249, 4, 33, "Text",ExpressionUUID->"eb98909f-55b0-f647-b919-e8af8186cbb6"],
Cell[2912680, 53732, 2056, 48, 123, "Input",ExpressionUUID->"40160870-25b6-5846-9d21-1dad5cdc5298"],
Cell[2914739, 53782, 339, 7, 55, "Text",ExpressionUUID->"401d8d61-58fe-2047-a080-6f178d6e0aae"],
Cell[CellGroupData[{
Cell[2915103, 53793, 302, 6, 28, "Input",ExpressionUUID->"d65a8011-1556-1a46-b83c-e799ccff477d"],
Cell[2915408, 53801, 24766, 473, 209, "Output",ExpressionUUID->"e47dacdf-a07f-1148-83de-a2ea44ce3026"]
}, Open  ]],
Cell[2940189, 54277, 358, 7, 55, "Text",ExpressionUUID->"740c5bca-c9a1-9b46-95c8-e1c0927d90ae"],
Cell[CellGroupData[{
Cell[2940572, 54288, 319, 6, 47, "Input",ExpressionUUID->"9682dcf3-3639-9e48-ab14-deff9006831a"],
Cell[2940894, 54296, 24883, 472, 198, "Output",ExpressionUUID->"82797e99-041c-9a4b-9763-24dc0c1390f7"]
}, Open  ]],
Cell[2965792, 54771, 258, 6, 33, "Text",ExpressionUUID->"66ae3c05-47f6-c847-af3d-85d3e3fb59e0"],
Cell[CellGroupData[{
Cell[2966075, 54781, 1109, 24, 161, "Input",ExpressionUUID->"99df58b4-9a90-d640-9857-d956a0d2406a"],
Cell[2967187, 54807, 27996, 557, 217, "Output",ExpressionUUID->"5365c67b-c265-3943-b2b1-58362dfc340e"]
}, Open  ]],
Cell[2995198, 55367, 222, 5, 33, "Text",ExpressionUUID->"db55dd6a-c2ab-0c42-9f92-c8293c61aa9d"],
Cell[2995423, 55374, 2515, 50, 32, "Input",ExpressionUUID->"97015806-6b42-814c-860b-c1318b363841"],
Cell[2997941, 55426, 252, 6, 33, "Text",ExpressionUUID->"a728597b-dd9f-6946-9c5d-bca853ae452c"],
Cell[CellGroupData[{
Cell[2998218, 55436, 586, 14, 66, "Input",ExpressionUUID->"32aa9a5e-8a40-324d-b05b-ead77ebbaa3b"],
Cell[2998807, 55452, 2642, 43, 32, "Echo",ExpressionUUID->"938267d9-990b-e544-a097-a023b1719c8c"],
Cell[3001452, 55497, 92786, 1690, 406, "Output",ExpressionUUID->"3ee96ff7-5bd0-dc44-b27b-e8a027b9b29c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

